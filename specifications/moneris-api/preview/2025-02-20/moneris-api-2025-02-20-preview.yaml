openapi: 3.0.3
info:
  version: 2.4.0
  title: Moneris API
  description: |
    Moneris API Platform
  termsOfService: https://www.moneris.com/en/legal/terms-of-use
  contact:
    url: https://api-developer.moneris.com
    email: UnifiedAPI@moneris.com
  license:
    name: Moneris
    url: https://developer.moneris.com/Agreements/Terms%20of%20Use
  x-audience: external-public
servers:
  - url: https://api.moneris.io
    description: Production server (uses live data)
    x-internal: false
  - url: https://api.sb.moneris.io
    description: Sandbox server (uses test data)
    x-internal: false
tags:
  - name: Payments
    description: Perform and Manage payments
  - name: Payment Methods
    description: Create and Manage payment methods
  - name: Refunds
    description: Perform and Manage payment refunds
  - name: Validations
    description: Perform and Manage card validations
  - name: Customers
    description: Perform and Manage customers
  - name: 3D Secure
    description: Perform 3D Secure authentications against payment methods
  - name: Kount
    description: Perform and Manage Kount risk assessment inquiries
  - name: Subscriptions
    description: Perform and Manage Subscriptions
  - name: Installments
    description: Perform and Manage Installments
  - name: Merchants
    description: Manage Merchants
  - name: Terminal & Service Orders
    description: Manage Moneris Terminal & Service Orders
  - name: Products
    description: Product recommendations
  - name: Events
    description: Receive events in near real-time concerning your Moneris API resources.
paths:
  /payments:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: List Payments
      description: Returns a paginated list of payments.
      operationId: getPayments
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payments
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listPaymentsResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    post:
      summary: Create Payment
      description: This operation is used to initiate a Payment.
      operationId: createPayments
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPaymentRequest'
            examples:
              regularPurchaseWithPaymentMethodId:
                $ref: '#/components/examples/regularPurchaseWithPaymentMethodId'
              regularPurchaseWithCardPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithCardPaymentMethod'
              regularPurchaseWithTemporaryPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithTemporaryPaymentMethod'
              regularPurchaseWithPermanentPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithPermanentPaymentMethod'
              regularPurchaseWithApplePayEncryptedPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithApplePayEncryptedPaymentMethod'
              regularPurchaseWithApplePayDecryptedPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithApplePayDecryptedPaymentMethod'
              regularPurchaseWithGooglePayEncryptedPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithGooglePayEncryptedPaymentMethod'
              regularPurchaseWithGooglePayDecryptedPaymentMethod:
                $ref: '#/components/examples/regularPurchaseWithGooglePayDecryptedPaymentMethod'
              preAuthorizationWithPaymentMethodId:
                $ref: '#/components/examples/preAuthorizationWithPaymentMethodId'
              preAuthorizationWithCardPaymentMethod:
                $ref: '#/components/examples/preAuthorizationWithCardPaymentMethod'
              preAuthorizationWithTemporaryToken:
                $ref: '#/components/examples/preAuthorizationWithTemporaryToken'
              preAuthorizationWithPermanentToken:
                $ref: '#/components/examples/preAuthorizationWithPermanentToken'
      responses:
        '201':
          $ref: '#/components/responses/createPaymentSuccessResponse'
        '400':
          $ref: '#/components/responses/createPaymentBadRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/createPaymentUnprocessableContentResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /payments/{payment-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/paymentId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: Retrieve Payment
      description: Retrieve a payment by its payment Id
      operationId: getPayment
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payments
      responses:
        '200':
          $ref: '#/components/responses/retrievePaymentSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /payments/{payment-id}/cancel:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/paymentId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Cancel Payment
      description: Cancel a payment. This operation may not be possible if the payment has gone through.
      operationId: cancelPayment
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelPaymentRequest'
      responses:
        '200':
          $ref: '#/components/responses/cancelPaymentSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/cancelPaymentUnprocessableContentResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /payments/{payment-id}/complete:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/paymentId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Complete Payment
      description: This will effectively capture a payment that has been authorized.
      operationId: completePayment
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/completionRequest'
            example:
              idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
              invoiceNumber: 1a2s3d45v6
              customData:
                property1: string
                property2: string
              amount:
                amount: 16000
                currency: CAD
      responses:
        '200':
          $ref: '#/components/responses/completePaymentSuccessResponse'
        '400':
          $ref: '#/components/responses/completePaymentBadRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/completePaymentUnprocessableContentResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /payment-methods:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: List payment methods
      description: Retrieves a paginated list of payment methods.
      operationId: getPaymentMethods
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payment Methods
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listPaymentMethodsResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    post:
      summary: Create Payment Method
      description: Create a Payment Method.
      operationId: createPaymentMethod
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payment Methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPaymentMethodRequest'
            examples:
              card:
                $ref: '#/components/examples/cardPaymentMethodRequest'
              temporary_token:
                $ref: '#/components/examples/temporaryTokenPaymentMethodRequest'
              permanent_token:
                $ref: '#/components/examples/permanentTokenPaymentMethodRequest'
              apple_pay_encrypted:
                $ref: '#/components/examples/applePayEncryptedPaymentMethodRequest'
              apple_pay_decrypted:
                $ref: '#/components/examples/applePayDecryptedPaymentMethodRequest'
              google_pay_encrypted:
                $ref: '#/components/examples/googlePayEncryptedPaymentMethodRequest'
              google_pay_decrypted:
                $ref: '#/components/examples/googlePayDecryptedPaymentMethodRequest'
      responses:
        '201':
          $ref: '#/components/responses/createPaymentMethodSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /payment-methods/{payment-method-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/paymentMethodId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: Retrieve Payment Method
      description: Retrieve a Payment Method by Id
      operationId: getPaymentMethod
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payment Methods
      responses:
        '200':
          $ref: '#/components/responses/retrievePaymentMethodSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/paymentMethodNotFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    put:
      summary: Update Payment method
      description: |
        Update payment method referenced by its Id. 
        Certain details may not be updated if the payment method was used in a transaction.
      operationId: updatePaymentMethod
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payment Methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatePaymentMethodRequest'
            examples:
              card:
                $ref: '#/components/examples/updateCardPaymentMethodRequest'
              temporary_token:
                $ref: '#/components/examples/updateTemporaryTokenPaymentMethodRequest'
              permanent_token:
                $ref: '#/components/examples/updatePermanentTokenPaymentMethodRequest'
              apple_pay_encrypted:
                $ref: '#/components/examples/applePayEncryptedPaymentMethodRequest'
              apple_pay_decrypted:
                $ref: '#/components/examples/applePayDecryptedPaymentMethodRequest'
              google_pay_encrypted:
                $ref: '#/components/examples/googlePayEncryptedPaymentMethodRequest'
              google_pay_decrypted:
                $ref: '#/components/examples/googlePayDecryptedPaymentMethodRequest'
      responses:
        '200':
          $ref: '#/components/responses/paymentMethodUpdateSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/paymentMethodNotFoundResponse'
        '409':
          $ref: '#/components/responses/concurrencyConflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    delete:
      summary: Delete Payment Method
      description: Deletes a payment method.
      operationId: deletePaymentMethod
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Payment Methods
      responses:
        '204':
          $ref: '#/components/responses/paymentMethodDeleteSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/paymentMethodNotFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /refunds:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: List Refunds
      description: Returns a paginated list of refund operations.
      operationId: getRefunds
      security:
        - OAuth2:
            - refund.read
        - OAuth2:
            - refund.write
        - ApiKeyAuth: []
      tags:
        - Refunds
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listRefundsSuccessResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    post:
      summary: Create Refund
      description: |
        This operation is used to create a Refund. 
        For payment refunds, Payment Id is required while payment method is not required.
        For independent refunds, no payment Id is required, however payment method is required.
      operationId: createRefund
      security:
        - OAuth2:
            - refund.write
        - ApiKeyAuth: []
      tags:
        - Refunds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRefundRequest'
            examples:
              matching:
                $ref: '#/components/examples/matchingRefundRequest'
      responses:
        '201':
          $ref: '#/components/responses/createRefundSuccessResponse'
        '400':
          $ref: '#/components/responses/createRefundBadRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/createRefundDeclinedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /refunds/{refund-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/refundId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: Retrieve Refund
      description: Retrieve a refund by its Id.
      operationId: getRefundById
      security:
        - OAuth2:
            - refund.read
        - OAuth2:
            - refund.write
        - ApiKeyAuth: []
      tags:
        - Refunds
      responses:
        '200':
          $ref: '#/components/responses/retrieveRefundSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/refundNotFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /validations:
    description: |
      set up a payment method for future payments. 
      Similar to a payment, but no charge is created.
      Useful when onboarding customers but not charging them right away.
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: List Card Validations
      description: Returns a paginated list of the card validations the were executed.
      operationId: getValidations
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Validations
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listValidationsSuccessResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    post:
      summary: Create Card Validation
      description: Initiate a new Card Validation request.
      operationId: createValidation
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Validations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createValidationRequest'
            examples:
              with_payment_method_id:
                $ref: '#/components/examples/validationWithPaymentMethodId'
              with_card_payment_method:
                $ref: '#/components/examples/validationWithCardPaymentMethod'
              with_temporary_token_payment_method:
                $ref: '#/components/examples/validationWithTemporaryTokenPaymentMethod'
              with_permanent_token_payment_method:
                $ref: '#/components/examples/validationWithPermanentTokenPaymentMethod'
              with_apple_pay_encrypted_payment_method:
                $ref: '#/components/examples/validationWithApplePayEncryptedPaymentMethod'
              with_apple_pay_decrypted_payment_method:
                $ref: '#/components/examples/validationWithApplePayDecryptedPaymentMethod'
              with_google_pay_encrypted_payment_method:
                $ref: '#/components/examples/validationWithGooglePayEncryptedPaymentMethod'
              with_google_pay_decrypted_payment_method:
                $ref: '#/components/examples/validationWithGooglePayDecryptedPaymentMethod'
      responses:
        '201':
          description: Validation request created successfully.
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation'
        '400':
          description: Failed Validation operation result response
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                invalid_request:
                  $ref: '#/components/examples/InvalidRequestErrorResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          description: Failed Validation operation result response
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                declined:
                  $ref: '#/components/examples/exp-validationResponse_DeclineErrorResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /validations/{validation-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/validationId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: Retrieve Card Validation.
      description: Retrieve a Card Validation by Id.
      operationId: getValidation
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Validations
      responses:
        '200':
          $ref: '#/components/responses/retrieveValidationSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/validationNotFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /subscriptions:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Create Subscription
      description: This operation is used to create a Subscription.
      operationId: createSubscriptions
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSubscriptionRequest'
            examples:
              subscriptionRequestWithImmediateInitialAmount:
                $ref: '#/components/examples/subscriptionRequestWithImmediateInitialAmount'
              dailyPaymentRequestToStartAtbillingStartDate:
                $ref: '#/components/examples/dailyPaymentRequestToStartAtbillingStartDate'
              weeklyPaymentRequestToStartAtbillingStartDate:
                $ref: '#/components/examples/weeklyPaymentRequestToStartAtbillingStartDate'
              biweeklyPaymentRequestToStartAtbillingStartDate:
                $ref: '#/components/examples/biweeklyPaymentRequestToStartAtbillingStartDate'
              monthlyPaymentRequestToStartAtbillingStartDate:
                $ref: '#/components/examples/monthlyPaymentRequestToStartAtbillingStartDate'
              endOfMonthPaymentRequestToStartAtbillingStartDate:
                $ref: '#/components/examples/endOfMonthPaymentRequestToStartAtbillingStartDate'
      responses:
        '201':
          $ref: '#/components/responses/createSubscriptionSuccessResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    get:
      summary: List subscriptions
      description: Returns a paginated list of subscriptions.
      operationId: getSubscriptions
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listSubscriptionsResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /subscriptions/{subscription-id}:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/subscriptionId'
    get:
      summary: Retrieve Subscription
      description: Retrieve a Subscription details by Id
      operationId: getSubscription
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      responses:
        '200':
          $ref: '#/components/responses/retrieveSubscriptionSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    patch:
      summary: Update Subscription
      description: |
        Update Subscription
      operationId: updateSubscription
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/updateSubscriptionDetails'
      responses:
        '200':
          $ref: '#/components/responses/updateSubscriptionSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /subscriptions/{subscription-id}/resume:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/subscriptionId'
    post:
      summary: Resume Subscription
      description: |
        Resumes a subscription billing.
        While a transaction is on hold, it is not billed for the subscription amount.                 
        However, the number of remaining recurs continues to be decremented during that time.
      operationId: resumeSubscription
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resumeSubscriptionRequest'
      responses:
        '200':
          $ref: '#/components/responses/resumeSubscriptionSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /subscriptions/{subscription-id}/pause:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/subscriptionId'
    post:
      summary: Pause Subscription
      description: |
        Temporarily pauses subscription billing.
        While a transaction is on hold, it is not billed for the subscription amount.                 
        However, the number of remaining recurs continues to be decremented during that time.
      operationId: pauseSubscription
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pauseSubscriptionRequest'
      responses:
        '200':
          $ref: '#/components/responses/pauseSubscriptionSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /subscriptions/{subscription-id}/cancel:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/subscriptionId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Cancel Subscription
      description: Cancel a Subscription.
      operationId: cancelSubscription
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cancelSubscriptionRequest'
      responses:
        '200':
          $ref: '#/components/responses/cancelSubscriptionSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /subscriptions/{subscription-id}/extend:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/subscriptionId'
    post:
      summary: Extend Subscription
      description: |
        Adds the given number of subscription transactions to the current (remaining) number.

        This can be used if a customer decides to extend a membership/subscription. 
        However, because this must be a positive number, it cannot be used to decrease the current number of subscription transactions. 
        For that, use Update Subscription.
      operationId: extendSubscription
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extendSubscriptionRequest'
      responses:
        '200':
          $ref: '#/components/responses/extendSubscriptionSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /customers:
    description: |
      This API allows to manage past and recurring customers.
      Very useful when tracking and managing charges belonging to the same customer.
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: List Customers
      description: Returns a paginated list of customers.
      operationId: getCustomers
      security:
        - OAuth2:
            - customer.read
        - OAuth2:
            - customer.write
        - ApiKeyAuth: []
      tags:
        - Customers
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listCustomersSuccessResponse'
        '400':
          $ref: '#/components/responses/invalidListbadRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    post:
      summary: Create Customer
      description: This operation is used to created a new customer.
      operationId: createCustomers
      security:
        - OAuth2:
            - customer.write
        - ApiKeyAuth: []
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/createCustomerSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /customers/{customer-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/customerId'
      - $ref: '#/components/parameters/merchantId'
    get:
      summary: Retrieve Customer
      description: Retrieve a customer by their Id.
      operationId: getCustomer
      security:
        - OAuth2:
            - customer.read
        - OAuth2:
            - customer.write
        - ApiKeyAuth: []
      tags:
        - Customers
      responses:
        '200':
          $ref: '#/components/responses/retrieveCustomerSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/customerNotFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    put:
      summary: Update Customer
      description: Updates customer's details such as name, address etc...
      operationId: updateCustomer
      security:
        - OAuth2:
            - customer.write
        - ApiKeyAuth: []
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerRequest'
      responses:
        '200':
          $ref: '#/components/responses/customerUpdateSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/customerNotFoundResponse'
        '409':
          $ref: '#/components/responses/concurrencyConflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    delete:
      summary: Delete Customer
      description: Delete a customer by their Id
      operationId: deleteCustomer
      security:
        - OAuth2:
            - customer.write
        - ApiKeyAuth: []
      tags:
        - Customers
      responses:
        '204':
          $ref: '#/components/responses/customerDeleteSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/customerNotFoundResponse'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /three-d-secure/authentications:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Create Authentication
      description: |
        This operation is used to create an Authentication request. 
        The authentication request is used to start the validation process of the card. 
        The result of this request determines whether 3DS is supported by the card and what type of authentication is required.
      operationId: createAuthentication
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - 3D Secure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticationRequest'
            examples:
              threeDSecureBrowserChannelWithPaymentMethodId:
                $ref: '#/components/examples/threeDSecureBrowserChannelWithPaymentMethodId'
              threeDSecureBrowserChannelWithCardPaymentMethod:
                $ref: '#/components/examples/threeDSecureBrowserChannelWithCardPaymentMethod'
              threeDSecureBrowserChannelWithTemporaryToken:
                $ref: '#/components/examples/threeDSecureBrowserChannelWithTemporaryToken'
              threeDSecureBrowserChannelWithPermanentToken:
                $ref: '#/components/examples/threeDSecureBrowserChannelWithPermanentToken'
      responses:
        '201':
          $ref: '#/components/responses/createThreeDSecureAuthenticationSuccessResponse'
        '202':
          $ref: '#/components/responses/createThreeDSecureAuthenticationChallengeResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /three-d-secure/authentications/{authentication-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/authenticationId'
    get:
      summary: Retrieve Authentication
      description: Retrieve an authentication by its authentication Id
      operationId: getAuthentication
      security:
        - OAuth2:
            - payment.read
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - 3D Secure
      responses:
        '200':
          $ref: '#/components/responses/retrieveThreeDSecureAuthenticationSuccessResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /three-d-secure/authentications/{authentication-id}/lookup:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/authenticationId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Authentication Value Lookup
      description: The point of the 3-D Secure flow is to verify that the true cardholder is a part of the authorization. The challenge flow is used to present a way of authenticating the cardholder using e.g. OTP or a federated identification method.
      operationId: authenticationValueLookup
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - 3D Secure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lookupRequest'
      responses:
        '200':
          $ref: '#/components/responses/threeDSecureAuthenticationLookupSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /three-d-secure/card-lookups:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: 3DS Card Lookup
      operationId: cardLookup
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      tags:
        - 3D Secure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardLookupRequest'
      responses:
        '201':
          $ref: '#/components/responses/createThreeDSecureCardLookupSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /kount-inquiries:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
    post:
      summary: Create Kount Inquiry
      operationId: createKountInquiry
      security:
        - OAuth2:
            - kount.write
        - ApiKeyAuth: []
      tags:
        - Kount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kountInquiryRequest'
      responses:
        '201':
          $ref: '#/components/responses/createKountInquirySuccessResponse'
        '202':
          $ref: '#/components/responses/createKountInquiryAcceptedResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    get:
      summary: List Kount Inquiries
      operationId: getKountInquiries
      security:
        - OAuth2:
            - kount.read
        - ApiKeyAuth: []
      tags:
        - Kount
      parameters:
        - $ref: '#/components/parameters/pageBeforeCursor'
        - $ref: '#/components/parameters/pageLimit'
        - $ref: '#/components/parameters/createdFrom'
        - $ref: '#/components/parameters/createdTo'
      responses:
        '200':
          $ref: '#/components/responses/listKountInquiriesSuccessResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /kount-inquiries/{kount-inquiry-id}:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/kountInquiryId'
    get:
      summary: Get Kount Inquiry by Id
      operationId: getKountInquiryById
      security:
        - OAuth2:
            - kount.read
        - ApiKeyAuth: []
      tags:
        - Kount
      responses:
        '200':
          $ref: '#/components/responses/retrieveKountInquiryResponse'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /kount-inquiries/{kount-inquiry-id}/assert:
    parameters:
      - $ref: '#/components/parameters/merchantId'
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/kountInquiryId'
    post:
      summary: Kount Inquiry Assert
      operationId: kountInquiryAssert
      security:
        - OAuth2:
            - kount.write
        - ApiKeyAuth: []
      tags:
        - Kount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kountAssertRequest'
      responses:
        '200':
          $ref: '#/components/responses/assertKountInquirySuccessResponse'
        '202':
          $ref: '#/components/responses/assertKountInquiryAcceptedResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /installments/plans:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantId'
    post:
      summary: Installment Plan Lookup
      description: Returns list of installment plans the cardholder is eligible for.
      operationId: installmentLookup
      tags:
        - Installments
      security:
        - OAuth2:
            - payment.write
        - ApiKeyAuth: []
      requestBody:
        description: Installment Plan Lookup request"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/installmentEligibilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/installmentLookupResponse'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /onboarding/merchants:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
    post:
      summary: Create Merchant
      description: Submit a merchant payload to create a merchant
      operationId: createMerchant
      security:
        - OAuth2:
            - onboarding.merchant.write
        - ApiKeyAuth: []
      tags:
        - Merchants
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    idempotencyKey:
                      $ref: '#/components/schemas/idempotencyKey'
                - $ref: '#/components/schemas/MerchantPayload'
      responses:
        '201':
          description: Successful response
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
            Location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantDetailsResponse'
              example:
                value: |
                  {
                    "merchantId": "0030211900875",
                    "businessDetails": {
                        "merchantCategoryCode": "0742",
                        "averageTicketSize": 3,
                        "maximumTransactionVolume": 3,
                        "directSellingTransactionVolume": 86,
                        "motoTransactionVolume": 14,
                        "ecommerceTransactionVolume": 0,
                        "businessUrl": "www.test.io",
                        "serviceProvider": "moneris.com",
                        "serviceDeliverToCanadaAvailable": true,
                        "serviceDeliverToUSAvailable": true,
                        "creditTransactionVolume": 250000,
                        "masterCardTransactionVolume": 100000,
                        "visaTransactionVolume": 100000,
                        "visaDebitTransactionVolume": 0,
                        "amexTransactionVolume": 25000,
                        "interacTransactionVolume": 50000,
                        "masterCardDebitTransactionVolume": 0,
                        "category": "CONTRACTED_SERVICES",
                        "subCategory": "VETERINARY_SERVICES_0742",
                        "offeredProductsAndServicesDescription": "food"
                    },
                    "merchantDetails": {
                        "contactInformation": {
                            "firstName": "Joe",
                            "lastName": "Test",
                            "phone": "1234567890"
                        },
                        "merchantInformation": {
                            "language": "EN",
                            "legalName": "Joe",
                            "operatingAsName": "Joe OPS",
                            "yearsOfOwnership": 3,
                            "monthsOfOwnership": 2,
                            "customerServicePhoneNumber": "1234567890",
                            "email": "qa-test@moneris.com",
                            "merchantType": "NATIONAL"
                        },
                        "locationAddress": {
                            "postalCode": "M5T2G2",
                            "city": "TORONTO",
                            "province": "ON",
                            "streetName": "SPADINA AVE",
                            "country": "CA"
                        }
                    },
                    "businessActivity": {
                        "dropShipping": true
                    },
                    "securityDetails": {
                        "legalEntity": {
                            "businessType": "PRIVATE_CORPORATION"
                        },
                        "signingOfficers": [
                            {
                                "creditReportAllowed": true,
                                "firstName": "DOMEMIC",
                                "lastName": "TESTPOTKIDIS",
                                "address": {
                                    "postalCode": "K1M1N8",
                                    "city": "OTTAWA",
                                    "province": "ON",
                                    "streetName": "STANLEY",
                                    "country": "CA"
                                },
                                "ownershipPercentage": 100,
                                "title": "VICE_PRESIDENT"
                            }
                        ]
                    },
                    "riskDetails": {
                        "merchantRiskRate": "A_PLUS"
                    },
                    "pointOfSaleOptions": {
                        "settlementOption": "MERCHANT_CLOSE",
                        "settlementTime": "23:00",
                        "debitPerTransactionRefundLimit": {
                            "amount": 0
                        },
                        "dailyRefundLimit": {
                            "amount": 0
                        },
                        "dailyCancellationLimit": {
                            "amount": 0
                        }
                    },
                    "bankingDetails": {
                        "creditDepositAccount": {
                            "currency": "CAD",
                            "institutionNumber": "00809",
                            "transitNumber": "00160",
                            "accountNumber": 333333333333
                        },
                        "additionalBankingAccounts": []
                    },
                    "chainId": "0030600062664"
                  }
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /onboarding/merchants/{merchant-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/prm-merchants_merchantId'
    get:
      summary: Get the details of a Merchant
      operationId: getMerchantDetailsByMerchantId
      tags:
        - Merchants
      description: |
        Get merchant details by ID
      security:
        - OAuth2:
            - onboarding.merchant.read
        - OAuth2:
            - onboarding.merchant.write
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful response corresponding to the provided merchant id parameter
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantDetailsResponse'
              example:
                Sample response:
                  value: |
                    {}
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    put:
      summary: Submit a merchant payload to update a merchant
      operationId: updateMerchant
      security:
        - OAuth2:
            - onboarding.merchant.write
        - ApiKeyAuth: []
      tags:
        - Merchants
      description: |
        Update merchant based on the supplied payload.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantPayload'
      parameters:
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/correlationId'
      responses:
        '204':
          description: Successful response
          headers:
            createdAt:
              schema:
                type: string
              description: Date of the request
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /onboarding/merchants/{merchant-id}/supplies:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/prm-merchants_merchantId'
    get:
      summary: List merchant supplies
      operationId: listMerchantSupplies
      security:
        - OAuth2:
            - onboarding.merchant.read
        - OAuth2:
            - onboarding.merchant.write
        - ApiKeyAuth: []
      tags:
        - Merchants
      description: |
        Get merchant supplies by merchant ID
      responses:
        '200':
          description: Successful response corresponding to the provided payload
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantSuppliesResponse'
              example:
                data:
                  - device: iWL220 + Communication Base
                    carrier:
                      - null
                      - null
                    software:
                      - null
                      - DataCandy
                    serviceCode: '0010'
                    unitPrice:
                      amount: 10
                      currency: CAD
                    type: wireless
                    supplies:
                      - supply: Manual Flatbed Imprinter and Plate
                        unitPrice:
                          amount: 1600
                          currency: CAD
                      - supply: Manual Flatbed Imprinter Replacement Plate
                        unitPrice:
                          amount: 2000
                          currency: CAD
                      - supply: Paper Rolls - 2.25"x1.64"x62 (15)
                        unitPrice:
                          amount: 1650
                          currency: CAD
                      - supply: Torx 25 Security Wrench and Screws
                        unitPrice:
                          amount: 950
                          currency: CAD
                      - supply: Paper Rolls - Thermal 2.25"x1.64" (100)
                        unitPrice:
                          amount: 7080
                          currency: CAD
                      - supply: 'Paper Rolls - Phenol-free: 62'' (100)'
                        unitPrice:
                          amount: 7080
                          currency: CAD
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /onboarding/merchants/{merchant-id}/orders:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/prm-merchants_merchantId'
    post:
      summary: Create Order
      description: Submit an order payload to create an order for the merchant
      operationId: createOrder
      security:
        - OAuth2:
            - order.write
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrderPayload'
                - $ref: '#/components/schemas/OrderPayloadPartnerBank'
            examples:
              OrderPayload:
                $ref: '#/components/examples/OrderPayload'
              OrderPayloadPartnerBank:
                $ref: '#/components/examples/OrderPayloadPartnerBank'
      tags:
        - Orders
      responses:
        '201':
          description: Successful response corresponding to the provided payload
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              examples:
                OrderDetails:
                  $ref: '#/components/examples/OrderDetails'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    get:
      summary: List orders
      description: Query multiple order status by giving the order ID within a single request
      operationId: getOrdersByOrderIds
      security:
        - OAuth2:
            - onboarding.order.read
        - OAuth2:
            - onboarding.order.write
        - ApiKeyAuth: []
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/orderIdentifiers'
      responses:
        '200':
          description: Successful response
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOrderStatusResponse'
              example:
                data:
                  - merchantOrderId: 1334343
                    merchantId: '0030210482347'
                    adjudicationApprovalStatus: AUTO
                    status: DEPLOYMENT
                  - merchantOrderId: 1334346
                    merchantId: '0030210482370'
                    adjudicationApprovalStatus: AUTO
                    status: DEPLOYMENT
                  - merchantOrderId: 1334350
                    merchantId: '0030210482412'
                    adjudicationApprovalStatus: AUTO
                    status: COMPLETE
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /onboarding/merchants/{merchant-id}/orders/{merchant-order-id}:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/merchantOrderId'
      - $ref: '#/components/parameters/prm-merchants_merchantId'
    get:
      summary: Retrieve order by Id
      operationId: getOrderDetailsByOrderId
      security:
        - OAuth2:
            - onboarding.order.read
        - OAuth2:
            - onboarding.order.write
        - ApiKeyAuth: []
      tags:
        - Orders
      description: |
        Get order details by ID
      responses:
        '200':
          description: Successful response corresponding to the provided order id parameter
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              example:
                merchantDetails:
                  merchantId: '0889900986875'
                  email: john.doe@moneris.com
                calculationMethod: TIRR
                serviceDetails:
                  - serviceCode: '8025'
                    frequency: MONTHLY
                    quantity: 1
                    unitPrice:
                      amount: 9995
                      currency: CAD
                cardTransactionDetails:
                  - cardTypeCode: DRCD
                    paymentModeCode: 'ALL '
                    feeValuePercentage: 2.6
                    feeFixedAmt: 0.15
                    currencyCode: CAD
                    cardOriginCode: ALL
                    tierId: ELEC
                    transactionFeeTypeCode: PRIM
                    feeProgramCode: ALL
                deliveryAddress:
                  addressNumber: '123'
                  postalCode: V6Y1M3
                  city: ST. JOHN'S
                  province: BC
                  streetName: GENERAL DELIVERY
                  country: CA
                  firstName: First
                  lastName: Last
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
    put:
      summary: Update an order by ID
      operationId: updateOrder
      security:
        - OAuth2:
            - order.write
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/OrderPayload'
                - $ref: '#/components/schemas/OrderPayloadPartnerBank'
            examples:
              OrderPayload:
                $ref: '#/components/examples/OrderPayload'
              OrderPayloadPartnerBank:
                $ref: '#/components/examples/OrderPayloadPartnerBank'
      tags:
        - Orders
      responses:
        '200':
          description: Successful response corresponding to the provided payload
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              examples:
                OrderDetails:
                  $ref: '#/components/examples/OrderDetails'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /onboarding/product-recommendations:
    parameters:
      - $ref: '#/components/parameters/apiVersion'
      - $ref: '#/components/parameters/correlationId'
      - $ref: '#/components/parameters/acceptLanguage'
    post:
      summary: List Recommended Products
      operationId: getRecommenderProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommenderProductsPayload'
      tags:
        - Products
      description: |
        Get recommender products to fetch multiple items related to a client
      security:
        - OAuth2:
            - onboarding.order.read
        - OAuth2:
            - onboarding.order.write
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful response corresponding to the provided payload
          headers:
            Api-Version:
              $ref: '#/components/headers/apiVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/correlationId'
            Sunset:
              $ref: '#/components/headers/sunset'
            X-RateLimit-Limit:
              $ref: '#/components/headers/rateLimitCount'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/rateLimitRemaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResponse'
              example:
                allowToSell: true
                solutions:
                  - solutionId: 1
                    solutionName: Moneris&#7481;&#7472; Go
                    solutionDescription: Le terminal Moneris Go convient aux commerçants qui cherchent des fonctions dynamiques au sein d'un appareil blanc et élégant à écran tactile.
                    solutionImageUrl: https://ordernow.moneris.com/landing/moneris_go/PAX_3QU.webp
                    prices:
                      - pricingLabel: Frais de traitement des transactions par carte de crédit
                        pricingText: 2,65 % + 0,10 $
                      - pricingLabel: Transactions saisies manuellement
                        pricingText: 2,85 % + 0,30 $
                      - pricingLabel: Frais de traitement des transactions par carte de débit Interac
                        pricingText: 0,10 $
                      - pricingLabel: Frais mensuels par terminal
                        pricingText: 9,99 $/mois
                    features:
                      - description: Connectivité sans fil
                      - description: Crédit et débit
                      - description: Terminaux intelligents
                      - description: Boîtier élégant
                    additionalSolutionDetailsUrl: https://ordernow.moneris.com/landing/moneris-go
                    maximumQuantity: 1
                    carrierOptions:
                      - Rogers
                      - Telus
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/unprocessableContent'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
x-webhooks:
  eventNotification:
    post:
      summary: Moneris event notification
      security: []
      operationId: onMonerisEvent
      tags:
        - Events
      description: Moneris event notification
      requestBody:
        description: Information about the triggered event.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookEventBase'
      responses:
        '200':
          description: |
            Your server implementation should return this HTTP status code
            if the data was received successfully
        '400':
          description: |
            Your server implementation should return this HTTP status code
            if the server failed to process the callback event
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
      description: |
        An API key is a token that a client provides when making API calls.

        API keys are supposed to be a secret that only the client and server know about.
    OAuth2:
      type: oauth2
      description: |
        OAuth 2.0 is an authorization protocol that gives an API client limited access to user data on a web server.

        OAuth relies on authentication scenarios, that allows the resource owner (user) to share the protected content from the server, hosting the resource, without sharing their credentials. For that purpose, an OAuth 2.0 server issues access tokens that the client applications can use to access protected resources on behalf of the resource owner.

        Moneris recommends the use of OAuth 2.0 as it provides fine grained authorization levels.
      flows:
        clientCredentials:
          tokenUrl: https://api.moneris.io/oauth2/token
          scopes:
            payment.read: Grants read access to payment related APIs
            payment.write: Grants read & write access to payment related APIs
            refund.read: Grants read access to refunds
            refund.write: Grants read & write access to refunds
            customer.read: Grants read access to customer data
            customer.write: Grants read & write access to customer data
            kount.read: Grants read access to Kount inquiries
            kount.write: Grants read & write access to Kount inquiries
            onboarding.merchant.read: Grants read access to merchant onboarding related APIs
            onboarding.merchant.write: Grants read & write access to merchant onboarding related APIs
            onboarding.order.read: Grants read access to onboarding orders related APIs
            onboarding.order.write: Grants read & write access to onboarding orders related APIs
            field-services.request.read: Grants read access to field services related APIs
            field-services.request.write: Grants read & write access to field services related APIs
  schemas:
    apiVersion:
      description: |
        The endpoint's API Version. 

        Must be provided through headers.
      type: string
      example: '2024-09-17'
    merchantId:
      type: string
      description: |
        Thirteen character long identification provided to merchants by Moneris. 
      minLength: 13
      maxLength: 13
      example: '0123456789101'
    dateTime:
      type: string
      format: date-time
      example: '2019-07-30T06:43:40.252Z'
      description: Date & Time
    paymentId:
      type: string
      description: Unique Identification for the Payment
      pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
      minLength: 30
      maxLength: 30
      example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    orderId:
      type: string
      description: |
        Indicates the merchant-defined transaction identifer or order ID. Identifiers are unique for every Purchase, Pre-Authorization and Independent Refund transaction

        **Note**: No two transactions of these types may have the same order ID. Field only accepts alphanumerical characters, dashes and underscores.
      minLength: 1
      maxLength: 50
      example: 1q2w3e4r5t6t78
      pattern: ^[a-zA-Z0-9-_]+$
      nullable: true
    invoiceNumber:
      type: string
      description: |
        Submits a unique value to identify a transaction that is logged by Moneris Solutions.
      minLength: 1
      maxLength: 17
      example: 1a2s3d45v6
      nullable: true
    transactionDateTime:
      description: Indicates the date and time of the transaction.
      type: string
      format: date-time
      example: '2019-07-30T06:43:40.252Z'
    createdAt:
      description: Time at which the object was created
      type: string
      format: date-time
      example: '2019-07-30T06:43:40.252Z'
    modifiedAt:
      nullable: true
      description: Time at which the object was modified
      type: string
      format: date-time
      example: '2019-07-30T06:43:40.252Z'
    amount:
      type: integer
      format: int32
      minimum: 0
      maximum: 999999999
      example: 10000
      description: Amount
    currency:
      type: string
      description: |
        Provides the three letter currency code according the ISO 4217 standard. 

        For a complete list of currency codes, visit: https://en.wikipedia.org/wiki/ISO_4217
      minLength: 3
      maxLength: 4
      example: CAD
      format: iso-4217
    subTotalAmount:
      type: object
      description: |
        Sub total amount for the transaction. 
        Note: The value must be in cents. Therefore $10.59 must be sent as 1059.
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
      nullable: true
      required:
        - amount
        - currency
      example:
        amount: 2000
        currency: CAD
    tipAmount:
      type: object
      description: |
        Total tip amount for the transaction. 
        Note: The value must be in cents. Therefore $10.59 must be sent as 1059
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
      required:
        - amount
        - currency
      nullable: true
      example:
        amount: 1200
        currency: CAD
    amountDetails:
      description: Amount Details breakdown
      type: object
      nullable: true
      properties:
        subTotalAmount:
          $ref: '#/components/schemas/subTotalAmount'
        tipAmount:
          $ref: '#/components/schemas/tipAmount'
    paymentMethodId:
      type: string
      description: Unique Identifier of the payment method.
      pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
      minLength: 30
      maxLength: 30
      example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    cardholderName:
      type: string
      description: Cardholder name
      minLength: 1
      maxLength: 60
      example: John Doe
    companyName:
      type: string
      description: Identifies the associated company name
      minLength: 1
      maxLength: 50
      example: SP Ltd
      nullable: true
    cardholderInformation:
      type: object
      description: Information about the holder of the card.
      nullable: true
      properties:
        cardholderName:
          $ref: '#/components/schemas/cardholderName'
        companyName:
          $ref: '#/components/schemas/companyName'
      required:
        - cardholderName
    contactDetails:
      type: object
      description: Contact details
      nullable: true
      properties:
        phoneNumber:
          nullable: true
          type: string
          description: Phone number.
          pattern: ^\+[1-9]\d{1,14}$
          minLength: 3
          maxLength: 16
          example: '+18663197450'
        email:
          nullable: true
          type: string
          format: email
          description: |
            Contains the customer's email address.

            For standard email protocols, visit: https://www.rfc-editor.org/rfc/rfc5322
          minLength: 1
          maxLength: 320
          example: moneris@moneris.com
      example:
        phoneNumber: '+18663197450'
        email: moneris@moneris.com
    expiryMonth:
      type: integer
      format: int32
      description: Card expiration month. Format must be MM
      minimum: 1
      maximum: 12
      example: 1
    expiryYear:
      type: integer
      format: int32
      description: 'Displays the card expiration year. Accepted format: YYYY'
      minimum: 2022
      maximum: 9999
      example: 2023
    cardBrand:
      type: string
      description: Displays the card brand name associated with the card type.
      enum:
        - MASTERCARD
        - VISA
        - AMERICAN_EXPRESS
        - JCB
        - DISCOVER
        - INTERAC
        - UNIONPAY
        - GIFT_MONERIS
        - GIFT_DATACANDY
        - GIFT_GIVEX
        - null
      nullable: true
      example: MASTERCARD
    cardFingerprint:
      type: string
      description: |
        Unique card identifier. 

        Fingerprinting randomly assigns identfiers for cards that share the same Primary Account Number (PAN) to easily identify when multiple payments methods are attached to the same underlying card, and assists merchants identify individual customers across various channels; i.e.  loyalty programs.
      maxLength: 255
      example: 1Q2W3E4r5t6rfwewerwewrrw
      nullable: true
    issuer:
      type: string
      description: Card issuer.
      minLength: 1
      maxLength: 100
      example: RBC
      nullable: true
    cardInformation:
      type: object
      description: Information about the card being used for the transaction
      properties:
        bankIdentificationNumber:
          nullable: true
          type: string
          description: |
            **BIN**: Bank Identification Number 

            Consists of the first six to eight digits of the Primary Account Number (PAN) and identifies the relevant payment network and the specific payment issuing institution.
          minLength: 6
          maxLength: 8
          example: '123456'
        lastFour:
          nullable: true
          type: string
          description: Last 4 digits of the card.
          minLength: 4
          maxLength: 4
          example: '1234'
        expiryMonth:
          $ref: '#/components/schemas/expiryMonth'
        expiryYear:
          $ref: '#/components/schemas/expiryYear'
        cardBrand:
          $ref: '#/components/schemas/cardBrand'
        cardType:
          nullable: true
          type: string
          description: Specifies the intended card use; i.e. debit or credit.
          enum:
            - CREDIT
            - DEBIT
            - DOMESTIC_DEBIT
            - PREPAID_RELOADABLE
            - PREPAID_NON_RELOADABLE
            - UNKNOWN
            - GIFT
            - LOYALTY
            - FLEET
            - CORPORATE
          example: CREDIT
        cardFingerprint:
          $ref: '#/components/schemas/cardFingerprint'
        issuer:
          $ref: '#/components/schemas/issuer'
    paymentAccountReference:
      type: string
      nullable: true
      description: |
        Used to link Primary Account Number (PAN) based transactions and transactions on associated payment tokens without using the PAN as the linking mechanism.
      minLength: 1
      maxLength: 29
      example: '11112222333344445555666677778'
    storePaymentMethod:
      description: |
        Store this payment method created through this payment for future use. 
        - DO_NOT_STORE: Payment method will not be stored.
        - CARDHOLDER_INITIATED: Payment method to be stored and can only re-used with cardholder's consent. Limited to store, pre-authorisation, and card validations."
        - MERCHANT_INITIATED: Payment method to be stored and can be reused without the cardholder's consent. For example, subscriptions.
      type: string
      default: DO_NOT_STORE
      enum:
        - DO_NOT_STORE
        - CARDHOLDER_INITIATED
        - MERCHANT_INITIATED
    cardPaymentMethodInformation:
      title: Card Payment Method Information
      description: Details about the card used in the payment method.
      type: object
      properties:
        paymentMethodType:
          type: string
          description: |
            The type of Payment Method being used. It can be:
              - Card.
          enum:
            - CARD
        paymentMethodSource:
          type: string
          description: |
            The source of Payment Method being used. It can be:
              - The Id of a Payment Method already created.
              - Permanent Token.
              - Temporary Token.
              - Card.
              - E-Wallet.
          enum:
            - CARD
            - TEMPORARY_TOKEN
            - PERMANENT_TOKEN
            - APPLE_PAY_ENCRYPTED
            - APPLE_PAY_DECRYPTED
            - GOOGLE_PAY_ENCRYPTED
            - GOOGLE_PAY_DECRYPTED
          example: TEMPORARY_TOKEN
        cardInformation:
          $ref: '#/components/schemas/cardInformation'
        paymentAccountReference:
          $ref: '#/components/schemas/paymentAccountReference'
        storePaymentMethod:
          $ref: '#/components/schemas/storePaymentMethod'
      required:
        - paymentMethodType
        - paymentMethodSource
        - cardInformation
        - storePaymentMethod
    customData:
      description: Merchant can send custom meta data with the transaction in this object. Moneris will echo these values back in response.
      type: object
      additionalProperties:
        type: string
        minLength: 1
        maxLength: 50
      maxProperties: 10
      nullable: true
    paymentMethod:
      title: paymentMethod
      description: Payment method response object
      type: object
      properties:
        paymentMethodId:
          $ref: '#/components/schemas/paymentMethodId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        cardholderInformation:
          $ref: '#/components/schemas/cardholderInformation'
        contactDetails:
          $ref: '#/components/schemas/contactDetails'
        billingAddress:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        paymentMethodInformation:
          $ref: '#/components/schemas/cardPaymentMethodInformation'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - paymentMethodId
        - merchantId
        - paymentMethodInformation
        - createdAt
    paymentStatus:
      type: string
      description: Payment Status description.
      enum:
        - CANCELED
        - DECLINED
        - DECLINED_RETRY
        - AUTHORIZED
        - PROCESSING
        - SUCCEEDED
      example: SUCCEEDED
    iso:
      type: string
      description: Represents the Moneris response code for the equivalent International Organization for Standardization (ISO) response code.
      minLength: 2
      maxLength: 2
      example: '00'
    responseCode:
      type: string
      description: |
        "Details Transaction Response Codes:
        - **< 50**: Transaction approved
        - **> 50**: Transaction declined
        NULL: Transaction not sent for authorization
        For a complete list of definitions, refer to the Response Codes Table"
      minLength: 3
      maxLength: 3
      example: '001'
    authorizationCode:
      type: string
      maxLength: 8
      nullable: true
      pattern: ^[a-zA-Z0-9]*$
      description: |
        Contains a value generated by the authorizer for an approved financial transactions. 
        This operates as the authorizing host's transaction identification.
      example: '11223344'
    message:
      type: string
      description: |
        Displays response description returned from issuing institution.

        **NOTE**: This message should not be displayed on any cardholder facing materials.  

        For receipt purposes, please refer to the Receipt Requirements"
      minLength: 1
      maxLength: 100
      example: SUCCESS
      nullable: true
    ecommerceIndicator:
      type: string
      description: |
        The ecommerce indicator (ECI) specifies the level of security that was used to obtain the cardholder's payment data. 
        It is sent by the merchant and returned by the issuer.
        When returned in the response, it can be different from the value sent in the request in case transaction was downgraded by the issuer.
      enum:
        - MAIL_TELEPHONE_ORDER_SINGLE
        - MAIL_TELEPHONE_ORDER_RECURRING
        - MAIL_TELEPHONE_ORDER_INSTALMENT
        - MAIL_TELEPHONE_ORDER_UNKNOWN
        - AUTHENTICATED_ECOMMERCE
        - NON_AUTHENTICATED_ECOMMERCE
        - SSL_MERCHANT
      example: AUTHENTICATED_ECOMMERCE
      default: SSL_MERCHANT
    statusDetails:
      type: object
      description: Additional details about the transaction outcome.
      properties:
        transactionUniqueId:
          type: string
          description: Realtime transaction identifier from the host.
          nullable: true
        isoResponseCode:
          $ref: '#/components/schemas/iso'
        responseCode:
          $ref: '#/components/schemas/responseCode'
        authorizationCode:
          $ref: '#/components/schemas/authorizationCode'
        message:
          $ref: '#/components/schemas/message'
        ecommerceIndicator:
          $ref: '#/components/schemas/ecommerceIndicator'
      required:
        - isoResponseCode
        - responseCode
        - ecommerceIndicator
    addressVerificationServiceResultCode:
      title: AVS Result Description
      type: string
      nullable: true
      description: |
        Indicates the address verification result. 
      enum:
        - FULL_MATCH
        - PARTIAL_MATCH
        - NO_MATCH
        - UNAVAILABLE
        - null
      example: FULL_MATCH
    cardSecurityCodeResult:
      type: string
      nullable: true
      description: |
        Indicates the Card Security Code validation result.
        - **MATCH**
        - **NO_MATCH**
        - **NOT_PROCESSED**
        - **CVD_NOT_PRESENT**
        - **NOT_CVD_PRESENT**
        - **AMEX_JCB_MATCH**
        - **AMEX_JCB_INVALID**
        - **OTHER**"
      enum:
        - MATCH
        - NO_MATCH
        - NOT_PROCESSED
        - CVD_NOT_PRESENT
        - NOT_CVD_PARTICIPANT
        - AMEX_JCB_MATCH
        - AMEX_JCB_INVALID
        - OTHER
        - null
      example: MATCH
    threeDSecureAuthenticationValueResult:
      type: string
      nullable: true
      description: |
        The Cardholder Authentication Verification Value (CAVV), the Account holder Authentication Value (AAV), and the American Express Verification Value (AEVV),  are the values that allows Visa, Mastercard and American Express to validate the integrity of the Visa Secure,  Mastercard Identity Check and American Express SafeKey transaction data.  These values are passed back from the issuer to the merchant after the authentication has taken place.  The merchant then integrates the CAVV/AAV/AEVV value into the authorization request using the Payment request with 3-D Secure transaction data.
      enum:
        - AMEX_AEVV_FAILED_ATTEMPT_ISSUER_KEY
        - AMEX_AEVV_FAILED_ATTEMPT_ISSUER_NOT_PARTICIPATING_NETWORK_KEY
        - AMEX_AEVV_FAILED_ATTEMPT_PARTICIPATING_NOT_AVAILABLE_NETWORK_KEY
        - AMEX_AEVV_FAILED_AUTHENTICATION_ISSUER_KEY
        - AMEX_AEVV_PASSED_ATTEMPT_ISSUER_KEY
        - AMEX_AEVV_PASSED_ATTEMPT_ISSUER_NOT_PARTICIPATING_NETWORK_KEY
        - AMEX_AEVV_PASSED_ATTEMPT_PARTICIPATING_NOT_AVAILABLE_NETWORK_KEY
        - AMEX_AEVV_PASSED_AUTHENTICATION_ISSUER_KEY
        - AMEX_AEVV_UNCHECKED
        - VISA_CAVV_NOT_PRESENT_OR_NOT_VERIFIED
        - MASTERCARD_AUTHENTICATION_ATTEMPTED
        - MASTERCARD_AUTHENTICATION_FAILED
        - MASTERCARD_AUTHENTICATION_SUCCESSFUL
        - VISA_CAVV_AUTHENTICATION_RESULTS_INVALID
        - VISA_CAVV_FAILED_VALIDATION_ATTEMPTED
        - VISA_CAVV_FAILED_VALIDATION_AUTHENTICATION
        - VISA_CAVV_NOT_VALIDATED_ISSUER_NOT_PARTICIPATING
        - VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
        - VISA_CAVV_PASSED_VALIDATION_AUTHENTICATION
        - VISA_CAVV_PASSED_VALIDATION_INFO_ONLY
        - VISA_CAVV_WAS_NOT_VALIDATED_ATTEMPTED
        - VISA_CAVV_WAS_NOT_VALIDATED_AUTHENTICATION
        - null
      example: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
    verificationDetails:
      description: Result Codes for CVD, AVS, 3DS
      type: object
      properties:
        addressVerificationServiceResultCode:
          $ref: '#/components/schemas/addressVerificationServiceResultCode'
        cardSecurityCodeResultCode:
          $ref: '#/components/schemas/cardSecurityCodeResult'
        threeDSecureAuthenticationValueResultCode:
          $ref: '#/components/schemas/threeDSecureAuthenticationValueResult'
    originalAmount:
      type: object
      nullable: true
      description: |
        Original amount for the first transaction in the series. 
        Note: The value must be in cents. Therefore $10.59 must be sent as 1059
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
      required:
        - amount
        - currency
      example:
        amount: 15000
        currency: CAD
    issuerId:
      type: string
      description: |
        Displays a unique identifier for the card holder's stored credentials. 

        This information is returned from the card brand when processing a Credential on File transaction.
      minLength: 1
      maxLength: 15
      example: A
      nullable: true
    credentialOnFileResponse:
      type: object
      nullable: true
      description: 'Contains fields related to the Credential on File (CoF) '
      properties:
        originalAmount:
          $ref: '#/components/schemas/originalAmount'
        issuerId:
          $ref: '#/components/schemas/issuerId'
    refundId:
      type: string
      pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
      minLength: 30
      maxLength: 30
      description: Unique Identification for the Refund
      example: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
    refundUri:
      title: Refund URI
      description: Refund Reference URL
      type: string
      nullable: true
      format: uri-reference
      example: /refunds/ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
    refundReference:
      description: Refund reference.
      type: object
      nullable: true
      properties:
        refundId:
          $ref: '#/components/schemas/refundId'
        href:
          $ref: '#/components/schemas/refundUri'
      required:
        - refundId
    money:
      type: object
      description: |
        Monetary amount. 
        Note: The value must be in cents. Therefore $10.59 must be sent as 1059.
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
      required:
        - amount
        - currency
      example:
        amount: 16000
        currency: CAD
    refundDetails:
      description: Refund details if any has occured.
      type: object
      nullable: true
      properties:
        refunds:
          description: List of Refunds associated with this Payment
          type: array
          items:
            $ref: '#/components/schemas/refundReference'
        refundedAmount:
          $ref: '#/components/schemas/money'
      required:
        - refundedAmount
    subscriptionId:
      type: string
      pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
      minLength: 30
      maxLength: 30
      description: Unique Identification for the Subscription
      example: si0105ARZ3NDEKTSV4RRFFQ69G5FAV
    subscriptionUri:
      title: SubscriptionUri
      description: Subscription Reference URL
      type: string
      format: uri-reference
      example: /subscriptions/rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
    subscriptionReference:
      description: |
        Subscription reference, if this transaction is related to a subscription. 
      type: object
      nullable: true
      properties:
        subscriptionId:
          $ref: '#/components/schemas/subscriptionId'
        href:
          $ref: '#/components/schemas/subscriptionUri'
    installmentId:
      type: string
      description: Visa-generated identifier for an Installment plan.
      minLength: 36
      maxLength: 36
      example: 130d93f9-8a5d-a78c-4741-14905057ce01
    installmentIdReference:
      type: string
      description: A Visa-generated, alphanumeric, unique, and short human-readable friendly name for Installment Plan.
      minLength: 10
      maxLength: 10
      example: '0000000063'
    installmentTermsAndConditionsVersion:
      type: string
      description: Installment Plan Terms and Conditions Version. Version of the Terms & Conditions accepted by the consumer. The version is auto-incremented every time an update is made to the Plan by the issuer.
      minLength: 1
      maxLength: 2147483647
      example: '1'
    installmentAcceptanceId:
      type: string
      description: Visa-generated identifier for a plan acceptance.
      minimum: 36
      maximum: 36
      example: 56d58423-ea25-64e0-ddf3-1e1133549801
    installmentStatus:
      type: string
      description: Status of the Installment Plan.
      enum:
        - ACCEPTED
        - NEW
        - CANCELED
      example: ACCEPTED
    installmentPlanProcessingResponseMessage:
      type: string
      description: Installment plan processing response
      minLength: 2
      maxLength: 50
    installmentPlanDetails:
      type: object
      description: Installment plan application results.
      nullable: true
      properties:
        planId:
          $ref: '#/components/schemas/installmentId'
        planIdReference:
          $ref: '#/components/schemas/installmentIdReference'
        planTermsAndConditionsVersion:
          $ref: '#/components/schemas/installmentTermsAndConditionsVersion'
        planAcceptanceId:
          $ref: '#/components/schemas/installmentAcceptanceId'
        planStatus:
          $ref: '#/components/schemas/installmentStatus'
        planProcessingResponseMessage:
          $ref: '#/components/schemas/installmentPlanProcessingResponseMessage'
    payment:
      title: payment
      type: object
      description: Returns a processed payment
      properties:
        paymentId:
          $ref: '#/components/schemas/paymentId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        orderId:
          $ref: '#/components/schemas/orderId'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        transactionDateTime:
          $ref: '#/components/schemas/transactionDateTime'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        amount:
          description: This amount excludes surcharge, application and convenience fee.
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        authorizedAmount:
          description: This represents the funds that are held by the authorization on the payment method.
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        capturableAmount:
          description: Remaining amount that can still be captured.
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        amountDetails:
          $ref: '#/components/schemas/amountDetails'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        paymentStatus:
          $ref: '#/components/schemas/paymentStatus'
        transactionDetails:
          $ref: '#/components/schemas/statusDetails'
        verificationDetails:
          $ref: '#/components/schemas/verificationDetails'
        credentialOnFileResponse:
          $ref: '#/components/schemas/credentialOnFileResponse'
        refundDetails:
          $ref: '#/components/schemas/refundDetails'
        subscription:
          $ref: '#/components/schemas/subscriptionReference'
        installmentPlanDetails:
          $ref: '#/components/schemas/installmentPlanDetails'
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - paymentId
        - merchantId
        - transactionDateTime
        - createdAt
        - amount
        - authorizedAmount
        - capturableAmount
        - paymentMethod
        - paymentStatus
        - transactionDetails
        - verificationDetails
    self:
      description: Pagination link pointing to the current page.
      type: string
      format: uri-reference
      nullable: true
    first:
      description: Pagination link pointing to the first page.
      type: string
      format: uri-reference
      nullable: true
    last:
      description: Pagination link pointing to the last page.
      type: string
      format: uri-reference
      nullable: true
    next:
      description: Pagination link pointing to the next page.
      type: string
      format: uri-reference
      nullable: true
    previous:
      description: Pagination link pointing to the previous page.
      type: string
      format: uri-reference
      nullable: true
    paymentList:
      title: paymentList
      type: object
      description: Response body, returns a paginated list of payments
      properties:
        data:
          description: Payments list.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/payment'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    parameterError:
      title: Parameter error
      description: Request property or header related error.
      type: object
      properties:
        parameterName:
          type: string
          description: Property or header name. Can contain nested path separated by '.'
          example: address.postalCode
        parameterValue:
          type: string
          nullable: true
          description: Property or header value string representation.
          example: MAP3J8
        reasonCode:
          type: string
          description: Reason that triggered the error.
          enum:
            - INVALID_FORMAT
            - REQUIRED_FIELD
            - INVALID_VALUE
          example: INVALID_FORMAT
        errorMessage:
          type: string
          description: Human readable description of the error.
          nullable: true
          example: String 'MAP3J8' does not match the postal code pattern.
      required:
        - parameterName
        - reasonCode
    error:
      description: Error response details.
      properties:
        type:
          description: |
            A URI reference that identifies the problem type.  Ideally it should be a stable URL to the documentation of the details about this type of error but it also can be a URN.  If nothing can be provided, a "about:blank" value is returned.
          type: string
          format: uri
          example: https://api-developer.moneris.com/responsehandling
        title:
          description: |
            A short, human-readable summary of the problem type.   It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization
          type: string
          example: INSUFFICIENT_FUNDS
          nullable: true
        status:
          description: |
            it conveys the HTTP status code used for the convenience of the consumer.
          type: integer
          format: int32
          minimum: 100
          maximum: 505
          nullable: true
        detail:
          description: |
            A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
          type: string
          example: Funds are insufficient to execute the operation.
          nullable: true
        instance:
          description: |
            A URI reference that identifies the specific occurrence of the problem. Typically, this resolves to a resource that might include more details about the problem.
          type: string
          example: /payments/12f3e0a8-1d68-2b86-dd30-4ca51bb66e10
          format: uri-reference
          nullable: true
        category:
          description: |
            The type of error returned. 
             - `API_ERROR`: This occurs due to an intermittent issue.  
             - `IDEMPOTENCY_ERROR`: The idempotency key has already been used.
             - `INVALID_REQUEST_ERROR`: The data provided in the request is invalid.
             - `DECLINED_ERROR`: Transaction was declined by the issuer.
             - `UNAUTHORIZED_ERROR`: Caller not authenticated, or not allowed to execute the current operation.
             - `INTERNAL_SERVER_ERROR`: An internal issue with our servers has occured.
          enum:
            - API_ERROR
            - IDEMPOTENCY_ERROR
            - INVALID_REQUEST_ERROR
            - DECLINED_ERROR
            - UNAUTHORIZED_ERROR
            - INTERNAL_SERVER_ERROR
            - null
          type: string
          nullable: true
          example: DECLINED_ERROR
        errors:
          type: array
          description: List of validation errors when error category is INVALID_REQUEST_ERROR.
          items:
            type: object
            $ref: '#/components/schemas/parameterError'
          example:
            - parameterName: address.postalCode
              parameterValue: MAP3J8
              errorMessage: address.Postal code does not match regular expression
              reasonCode: INVALID_FORMAT
      title: API Error
      type: object
      required:
        - type
    idempotencyKey:
      type: string
      description: |
        A Unique Identifier that is required for handling idempotent requests. 

        Note: Moneris encourages the use of UUID Version 4 in APIs as an idempotency key."    
      minLength: 1
      maxLength: 36
      example: 6q5w4e7r8t9y
    paymentMethodRequestSource:
      type: string
      description: |
        The source of Payment Method being used. It can be:
          - The Id of a Payment Method already created.
          - Permanent Token.
          - Temporary Token.
          - Card.
          - E-Wallet.
      enum:
        - PAYMENT_METHOD_ID
        - CARD
        - TEMPORARY_TOKEN
        - PERMANENT_TOKEN
        - APPLE_PAY_ENCRYPTED
        - APPLE_PAY_DECRYPTED
        - GOOGLE_PAY_ENCRYPTED
        - GOOGLE_PAY_DECRYPTED
    paymentMethodWithId:
      title: paymentMethodWithId
      description: Use existing unique payment method identifier.
      properties:
        paymentMethodSource:
          $ref: '#/components/schemas/paymentMethodRequestSource'
        paymentMethodId:
          $ref: '#/components/schemas/paymentMethodId'
      required:
        - paymentMethodSource
        - paymentMethodId
    paymentIndicator:
      type: string
      description: |
        Indicates the current or intended use of the credentials
        - **UNSCHEDULED_CREDENTIAL_ON_FILE**: unscheduled Credential on File (first transactions only)
        - **RECURRING**: recurring transaction
        - **MERCHANT_INITIATED**: unscheduled merchant-initiated transaction
        - **VARIABLE_RECURRING**: recurring variable payment transaction
        - **CUSTOMER_INITIATED**: unscheduled customer-initiated transaction
      enum:
        - UNSCHEDULED_CREDENTIAL_ON_FILE
        - RECURRING
        - MERCHANT_INITIATED
        - VARIABLE_RECURRING
        - CUSTOMER_INITIATED
      example: UNSCHEDULED_CREDENTIAL_ON_FILE
    paymentInformation:
      type: string
      description: Describes whether the transaction is the first or subsequent in the series
      enum:
        - FIRST
        - SUBSEQUENT
      example: FIRST
    storePaymentMethodIdRequest:
      title: storePaymentMethodIdRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodWithId'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    cardNumber:
      type: string
      description: Identifies the customer's credit or debit card number (Primary Account Number).
      minLength: 13
      maxLength: 19
      example: '4242424242424242'
    cardSecurityCode:
      type: string
      pattern: '[0-9]*'
      description: CVD value located on credit card. The CVD value (supplied by the cardholder) must only be passed to the payment gateway. Under no circumstances may it be stored for subsequent use or displayed as part of the receipt information.
      minLength: 3
      maxLength: 4
      example: '123'
    card:
      type: object
      description: Card details
      properties:
        cardNumber:
          $ref: '#/components/schemas/cardNumber'
        expiryMonth:
          $ref: '#/components/schemas/expiryMonth'
        expiryYear:
          $ref: '#/components/schemas/expiryYear'
        cardSecurityCode:
          $ref: '#/components/schemas/cardSecurityCode'
      required:
        - cardNumber
        - expiryMonth
        - expiryYear
        - cardSecurityCode
    paymentMethodRequestBase:
      description: |
        Payment Method details.

        Note: If defined, this will result in the creation of Payment Method as defined in the Payment Method API.
      type: object
      properties:
        cardholderInformation:
          $ref: '#/components/schemas/cardholderInformation'
        contactDetails:
          $ref: '#/components/schemas/contactDetails'
        billingAddress:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        paymentMethodSource:
          $ref: '#/components/schemas/paymentMethodRequestSource'
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - paymentMethodSource
    paymentMethodCard:
      title: paymentMethodCard
      description: Credit/Debit/Gift Card payment method details.
      allOf:
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/card'
          required:
            - card
        - $ref: '#/components/schemas/paymentMethodRequestBase'
      required:
        - paymentMethodSource
        - card
    storePaymentMethodCardRequest:
      title: storePaymentMethodCardRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodCard'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    token:
      type: string
      description: Created when a temporary token is created and returned. This acts as a unique profile identifier, and is a required value for temporary token transactions.
      minLength: 25
      maxLength: 28
      example: ot-HCUeCFtXJfEZSSUqvUJkS0
    paymentMethodTemporaryToken:
      title: paymentMethodTemporaryToken
      description: |
        A Temporary Token is issued by Moneris to the merchant and represents the card details. Please review the Hosted Tokenization feature documentation to learn how to issue such a token.
      allOf:
        - type: object
          properties:
            temporaryToken:
              $ref: '#/components/schemas/token'
          required:
            - paymentMethodSource
            - temporaryToken
        - $ref: '#/components/schemas/paymentMethodRequestBase'
      required:
        - paymentMethodSource
        - temporaryToken
    storePaymentMethodTemporaryTokenRequest:
      title: storePaymentMethodTemporaryTokenRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodTemporaryToken'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    paymentMethodPermanentToken:
      title: paymentMethodPermanentToken
      description: |
        A Permanent Token is issued by Moneris to the merchant and represents the card details. This option is used for legacy purposes.
      allOf:
        - type: object
          properties:
            permanentToken:
              $ref: '#/components/schemas/token'
          required:
            - permanentToken
        - $ref: '#/components/schemas/paymentMethodRequestBase'
      required:
        - paymentMethodSource
        - permanentToken
    storePermanentToken:
      description: |
        Store this payment method created through this payment for future use. 
        - CARDHOLDER_INITIATED: Payment method to be stored and can only re-used with cardholder's consent. Limited to store, pre-authorisation, and card validations."
        - MERCHANT_INITIATED: Payment method to be stored and can be reused without the cardholder's consent. For example, subscriptions.
      type: string
      default: MERCHANT_INITIATED
      enum:
        - CARDHOLDER_INITIATED
        - MERCHANT_INITIATED
    credentialOnFileInformation:
      type: object
      description: 'Contains fields related to the Credential on File (CoF) '
      properties:
        paymentIndicator:
          $ref: '#/components/schemas/paymentIndicator'
        paymentInformation:
          $ref: '#/components/schemas/paymentInformation'
        issuerId:
          $ref: '#/components/schemas/issuerId'
        originalAmount:
          $ref: '#/components/schemas/originalAmount'
      required:
        - paymentIndicator
        - paymentInformation
      example:
        paymentIndicator: CUSTOMER_INITIATED
        paymentInformation: FIRST
        issuerId: 123asd
    storePaymentMethodPermanentTokenRequest:
      title: storePaymentMethodPermanentTokenRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodPermanentToken'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePermanentToken'
            credentialOnFileInformation:
              $ref: '#/components/schemas/credentialOnFileInformation'
          required:
            - credentialOnFileInformation
    walletIndicator:
      type: string
      description: |
        Only available to Canada integrations.
        Applies to merchants using their own API for transaction payload encryptions for Apple Pay and Google Pay transactions.
        **NOTE**: This field is mandatory for wallet transactions and is case senstive."
      enum:
        - IN_APPLICATION
        - IN_BROWSER
    applePayEncryptedWallet:
      title: applePayEncryptedWallet
      description: Apple Pay encrypted wallet details.
      allOf:
        - $ref: '#/components/schemas/paymentMethodRequestBase'
        - type: object
          properties:
            displayName:
              type: string
              description: Display Name
              example: MasterCard 4079
            cardBrand:
              type: string
              description: Card Brand.
              enum:
                - MASTERCARD
                - VISA
                - AMERICAN_EXPRESS
                - INTERAC
                - DISCOVER
              example: MASTERCARD
            applePayVersion:
              type: string
              description: |
                Version information about the payment token.
                  - EC_V1: For ECC-encrypted data
                  - RSA_V1: For RSA-encrypted data
              enum:
                - EC_V1
                - RSA_V1
              example: EC_V1
            data:
              type: string
              description: |
                Encrypted payment data. Base64 encoded as a string.
              format: byte
              example: MTIzNDU2Njc4OQ==
            signature:
              type: string
              description: |
                Signature of the payment and header data, Base64 encoded as a string. The signature includes the signing certificate, its intermediate CA certificate, and information about the signing algorithm. Can be a detached PKCS #7 signature, Base64 encoded as a string
            publicKeyHash:
              type: string
              description: |
                Hash of the X.509 encoded public key bytes of the merchant’s certificate. Can be either a base64 encoded or SHA-256 Hash string.
            ephemeralPublicKey:
              type: string
              description: |
                Ephemeral public key bytes. Only for RSA_v1. Can be either a base64 encoded string or X.509 bytes.
              format: byte
            applePayTransactionId:
              type: string
              description: The Apple Pay unique identifier for a transaction such as an in-app purchase, restored in-app purchase, or subscription renewal.
            walletIndicator:
              $ref: '#/components/schemas/walletIndicator'
          required:
            - displayName
            - cardBrand
            - applePayVersion
            - data
            - signature
            - publicKeyHash
            - ephemeralPublicKey
            - applePayTransactionId
            - walletIndicator
      required:
        - paymentMethodSource
    storeApplePayEncryptedWalletRequest:
      title: storeApplePayEncryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/applePayEncryptedWallet'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    deviceManufacturerIdentifier:
      type: string
      description: Hex-encoded device manufacturer identifier
      nullable: true
    dataType:
      type: string
      description: |
        Only available to Canada integrations.

        Applies to merchants using their own API for transaction payload encryptions and is mandatory for INTERAC® e-Commerce Apple Pay and Google Pay transactions.
      enum:
        - THREE_D_SECURE
        - EMV
    walletCryptogram:
      type: string
      description: Token cryptogram or encoded Base64 for Interac Wallets.
      maxLength: 500
      example: 8YGKgiD0iJic84fBLVj3QuwuclqLp7QvizbKnGRYAMVfVwBobYMBAIQBAIUBAIZTWgpQdgQQKZkZFHGfXySDKRAxXyoCASSfAgYAAAAQAABfIAIgL58ZBgSSSSSSSL9JIoEgAAMj1qj1U9jsORa1qxqAEAHOBAAEAECKALEAAAADEACHCAAAAAAAAAAAkAA=
    walletEcommerceIndicator:
      type: string
      description: ECI Indicator as provided by the Wallet.
      nullable: true
    applePayDecryptedWallet:
      title: applePayDecryptedWallet
      description: Apple Pay wallet details after decrypting the token.
      allOf:
        - $ref: '#/components/schemas/paymentMethodRequestBase'
        - type: object
          properties:
            applicationPrimaryAccountNumber:
              description: The unique identifier for the primary account number for the payment card.
              type: string
              minLength: 13
              maxLength: 19
              example: '4242424242424242'
            expiryMonth:
              $ref: '#/components/schemas/expiryMonth'
            expiryYear:
              $ref: '#/components/schemas/expiryYear'
            deviceManufacturerIdentifier:
              $ref: '#/components/schemas/deviceManufacturerIdentifier'
            dataType:
              $ref: '#/components/schemas/dataType'
            cryptogram:
              $ref: '#/components/schemas/walletCryptogram'
            cardBrand:
              type: string
              description: Card Brand.
              enum:
                - MASTERCARD
                - VISA
                - AMERICAN_EXPRESS
                - INTERAC
                - DISCOVER
            walletEcommerceIndicator:
              $ref: '#/components/schemas/walletEcommerceIndicator'
            walletIndicator:
              $ref: '#/components/schemas/walletIndicator'
          required:
            - applicationPrimaryAccountNumber
            - expiryMonth
            - expiryYear
            - dataType
            - cryptogram
            - cardBrand
            - walletIndicator
      required:
        - paymentMethodSource
    storeApplePayDecryptedWalletRequest:
      title: storeApplePayDecryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/applePayDecryptedWallet'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    googlePayEncryptedWallet:
      title: googlePayEncryptedWallet
      description: Apple Pay encrypted wallet details.
      allOf:
        - $ref: '#/components/schemas/paymentMethodRequestBase'
        - type: object
          properties:
            cardBrand:
              type: string
              description: Card Brand.
              enum:
                - MASTERCARD
                - VISA
                - AMERICAN_EXPRESS
                - INTERAC
              example: INTERAC
            signature:
              type: string
              description: |
                Verifies that the message came from Google.  It's base64-encoded, and created with ECDSA by the intermediate signing key.
            googlePayProtocolVersion:
              type: string
              description: |
                Identifies the encryption or signing scheme under which the message is created. 
                It allows the protocol to evolve over time, if needed.
                Must be fowarded as provided by Google Pay.
              example: ECv1
            signedMessage:
              type: string
              description: |
                A JSON object serialized as an HTML-safe string that contains the encryptedMessage, ephemeralPublicKey, and tag.  It's serialized to simplify the signature verification process.
            walletIndicator:
              $ref: '#/components/schemas/walletIndicator'
          required:
            - cardBrand
            - signature
            - googlePayProtocolVersion
            - signedMessage
            - walletIndicator
      required:
        - paymentMethodSource
    storeGooglePayEncryptedWalletRequest:
      title: storeGooglePayEncryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/googlePayEncryptedWallet'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    googlePayDecryptedCardDetails:
      description: |
        The payment credential itself.  The format of this object is determined by the paymentMethod
      type: object
      properties:
        personalAccountNumber:
          description: The personal account number charged. This string contains only digits.
          type: string
          minLength: 13
          maxLength: 19
          example: '4242424242424242'
        expiryMonth:
          $ref: '#/components/schemas/expiryMonth'
        expiryYear:
          $ref: '#/components/schemas/expiryYear'
        authenticationMethod:
          description: |
            The authentication method of the card transaction.
            Must be forwarded as provided by Google Pay.
          type: string
          nullable: true
        cryptogram:
          nullable: true
          type: string
          description: Token cryptogram or encoded Base64 for Interac Wallets.
          maxLength: 500
          example: 8YGKgiD0iJic84fBLVj3QuwuclqLp7QvizbKnGRYAMVfVwBobYMBAIQBAIUBAIZTWgpQdgQQKZkZFHGfXySDKRAxXyoCASSfAgYAAAAQAABfIAIgL58ZBgSSSSSSSL9JIoEgAAMj1qj1U9jsORa1qxqAEAHOBAAEAECKALEAAAADEACHCAAAAAAAAAAAkAA=
        walletEcommerceIndicator:
          $ref: '#/components/schemas/walletEcommerceIndicator'
      required:
        - personalAccountNumber
        - expiryMonth
        - expiryYear
    googlePayDecryptedWallet:
      title: googlePayDecryptedWallet
      description: Google Pay wallet details after decrypting the token.
      allOf:
        - $ref: '#/components/schemas/paymentMethodRequestBase'
        - type: object
          properties:
            gatewayMerchantId:
              nullable: true
              type: string
              description: Gateway unique store id
              example: cagw123456
            messageExpiration:
              type: string
              nullable: true
              format: date-time
              description: |
                Date and time at which the message expires. Integrators should reject any message that's expired.
              example: '2024-09-19T00:00:00Z'
            messageId:
              type: string
              nullable: true
              description: A unique ID that identifies the message in case it needs to be revoked or located at a later time.
            walletSource:
              type: string
              description: |
                The type of the payment credential. Supported values are:
                  - CARD
                  - TOKENIZED_CARD
              enum:
                - CARD
                - TOKENIZED_CARD
            cardBrand:
              type: string
              description: Card Network.
              enum:
                - MASTERCARD
                - VISA
                - AMERICAN_EXPRESS
                - INTERAC
            walletIndicator:
              $ref: '#/components/schemas/walletIndicator'
            cardDetails:
              $ref: '#/components/schemas/googlePayDecryptedCardDetails'
          required:
            - walletSource
            - cardBrand
            - cardDetails
            - walletIndicator
      required:
        - paymentMethodSource
    storeGooglePayDecryptedWalletRequest:
      title: storeGooglePayDecryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/googlePayDecryptedWallet'
        - type: object
          properties:
            storePaymentMethod:
              $ref: '#/components/schemas/storePaymentMethod'
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    storePaymentMethodRequest:
      title: storePaymentMethodRequest
      description: |
        Used to collect payment data needed to execute the transaction. 
        Can also be used to collect and save customer payment instruments on file. 
      oneOf:
        - $ref: '#/components/schemas/storePaymentMethodIdRequest'
        - $ref: '#/components/schemas/storePaymentMethodCardRequest'
        - $ref: '#/components/schemas/storePaymentMethodTemporaryTokenRequest'
        - $ref: '#/components/schemas/storePaymentMethodPermanentTokenRequest'
        - $ref: '#/components/schemas/storeApplePayDecryptedWalletRequest'
        - $ref: '#/components/schemas/storeApplePayEncryptedWalletRequest'
        - $ref: '#/components/schemas/storeGooglePayDecryptedWalletRequest'
        - $ref: '#/components/schemas/storeGooglePayEncryptedWalletRequest'
      discriminator:
        propertyName: paymentMethodSource
        mapping:
          PAYMENT_METHOD_ID: '#/components/schemas/storePaymentMethodIdRequest'
          CARD: '#/components/schemas/storePaymentMethodCardRequest'
          TEMPORARY_TOKEN: '#/components/schemas/storePaymentMethodTemporaryTokenRequest'
          PERMANENT_TOKEN: '#/components/schemas/storePaymentMethodPermanentTokenRequest'
          APPLE_PAY_ENCRYPTED: '#/components/schemas/storeApplePayEncryptedWalletRequest'
          APPLE_PAY_DECRYPTED: '#/components/schemas/storeApplePayDecryptedWalletRequest'
          GOOGLE_PAY_ENCRYPTED: '#/components/schemas/storeGooglePayEncryptedWalletRequest'
          GOOGLE_PAY_DECRYPTED: '#/components/schemas/storeGooglePayDecryptedWalletRequest'
      required:
        - paymentMethodSource
    automaticCapture:
      type: boolean
      description: |
        - **true**: (Default) will prompt Moneris to capture the payment when it is authorized. This performs a Purchase transaction.
        - **false**: will prompt Moneris to place a hold on the funds when the payment is authorized. This performs a Pre-Authorization transaction.
      default: true
    resourceId:
      type: string
      description: Used to identify API resources which may be required for future follow-on transactions; i.e. Refunds, Corrections, Completions, Reversals, etc.
      pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
      minLength: 30
      maxLength: 30
      example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    threeDSecureWithAuthenticationId:
      title: Three DS Authentication Id
      type: object
      properties:
        threeDSecureAuthenticationId:
          $ref: '#/components/schemas/resourceId'
      required:
        - threeDSecureAuthenticationId
    threeDSecureAuthenticationValue:
      type: string
      description: |
        **CAVV**: Cardholder Authentication Verification Value
        Provided during a payment request to authenticate the card user.
      maxLength: 50
      example: '00000109260000719349'
      nullable: true
    threeDSecureVersion:
      type: string
      description: Required when sending a 3-D Secure version 2.0+ transaction. If no value is provided, default to V1.
      maxLength: 10
      example: '2.2'
    threeDSecureServerTransactionId:
      type: string
      description: "Indicates information required when sending a version 3-D Secure 2.0+ transaction. \n\nThis data is obtained from a CAVV Lookup Request or MPI\_3DS\_Authentication Request transaction.\n"
      format: uuid
      example: ad9b0eda-bf9b-4288-b188-9467993603e1
    threeDSecureDirectoryServerTransactionId:
      type: string
      description: Universally unique transaction identifier assigned by the 3DS Directory Server (DS) to identify a single transaction.
      format: uuid
      example: ad9b0eda-bf9b-4288-b188-9467993603e1
    threeDSecureWithAuthenticationData:
      type: object
      title: Three DS Authentication Data
      properties:
        threeDSecureAuthenticationValue:
          $ref: '#/components/schemas/threeDSecureAuthenticationValue'
        threeDSecureVersion:
          $ref: '#/components/schemas/threeDSecureVersion'
        threeDSecureServerTransactionId:
          $ref: '#/components/schemas/threeDSecureServerTransactionId'
        threeDSecureDirectoryServerTransactionId:
          $ref: '#/components/schemas/threeDSecureDirectoryServerTransactionId'
      required:
        - threeDSecureAuthenticationValue
        - threeDSecureVersion
        - threeDSecureServerTransactionId
        - threeDSecureDirectoryServerTransactionId
    threeDSecureData:
      description: Data related to 3-D Secure
      type: object
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/threeDSecureWithAuthenticationId'
        - $ref: '#/components/schemas/threeDSecureWithAuthenticationData'
    installmentPlanInformation:
      type: object
      description: Installment plan details, if an installment plan is selected
      nullable: true
      properties:
        planId:
          $ref: '#/components/schemas/installmentId'
        planIdReference:
          $ref: '#/components/schemas/installmentIdReference'
        planTermsAndConditionsVersion:
          $ref: '#/components/schemas/installmentTermsAndConditionsVersion'
      required:
        - planId
        - planIdReference
        - planTermsAndConditionsVersion
    ipv4:
      type: string
      format: ipv4
      description: Internet Protocol version 4 (IPv4).
      example: 104.75.173.179
      nullable: true
    ipv6:
      type: string
      format: ipv6
      description: Internet Protocol version 6 (IPv6).
      example: 2600:1401:2::8a
      nullable: true
    createPaymentRequest:
      title: paymentRequest
      type: object
      description: Request body, used to initiate a payment
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        orderId:
          $ref: '#/components/schemas/orderId'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        amount:
          description: This amount excludes surcharge, application and converience fee.
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        amountDetails:
          $ref: '#/components/schemas/amountDetails'
        customerId:
          nullable: true
          description: The unique identifier of the customer.
          type: string
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        paymentMethod:
          $ref: '#/components/schemas/storePaymentMethodRequest'
        ecommerceIndicator:
          description: Describes the category of e-commerce transaction being processed.
          type: string
          enum:
            - MAIL_TELEPHONE_ORDER_SINGLE
            - MAIL_TELEPHONE_ORDER_RECURRING
            - MAIL_TELEPHONE_ORDER_INSTALMENT
            - MAIL_TELEPHONE_ORDER_UNKNOWN
            - AUTHENTICATED_ECOMMERCE
            - NON_AUTHENTICATED_ECOMMERCE
            - SSL_MERCHANT
          example: AUTHENTICATED_ECOMMERCE
          default: SSL_MERCHANT
        automaticCapture:
          $ref: '#/components/schemas/automaticCapture'
        customData:
          nullable: true
          description: Merchant can send custom meta data with the transaction in this object. Moneris will echo these values back in response.
          type: object
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 50
          maxProperties: 10
        dynamicDescriptor:
          nullable: true
          type: string
          description: |
            Merchant defined description sent on a per-transaction basis that will appear on the credit card statement.  

            Dependent on the card Issuer, the statement will typically show the dynamic descriptor appended to the merchant's existing business name separated by the '/' character.  

            **Note**: The combined length of the merchant's business name, forward slash '/' character, and the dynamic descriptor may not exceed 22 characters.
          minLength: 1
          maxLength: 20
          example: moneris
        threeDSecureData:
          $ref: '#/components/schemas/threeDSecureData'
        installmentPlanInformation:
          $ref: '#/components/schemas/installmentPlanInformation'
        ipv4:
          $ref: '#/components/schemas/ipv4'
        ipv6:
          $ref: '#/components/schemas/ipv6'
      required:
        - idempotencyKey
        - paymentMethod
        - amount
    cancelPaymentRequest:
      title: cancelPaymentRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        customData:
          $ref: '#/components/schemas/customData'
        reason:
          nullable: true
          description: |
            Reason for canceling the payment.

            Note: This is a notational field.
          type: string
          minLength: 1
          maxLength: 100
          example: Defective product
      required:
        - idempotencyKey
    completionRequest:
      title: completionRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        customData:
          $ref: '#/components/schemas/customData'
        amount:
          nullable: true
          title: completionAmount
          type: object
          description: |
            Monetary amount. 
            Note: The value must be in cents. Therefore $10.59 must be sent as 1059.
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
      required:
        - idempotencyKey
    paymentMethodList:
      description: List of Payment Methods
      type: object
      title: paymentMethodList
      properties:
        data:
          description: Payment Method list
          type: array
          items:
            $ref: '#/components/schemas/paymentMethod'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    createCardPaymentMethodRequest:
      title: createCardPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/paymentMethodCard'
    createTemporaryTokenPaymentMethodRequest:
      title: createTemporaryTokenPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/paymentMethodTemporaryToken'
    createPermanentTokenPaymentMethodRequest:
      title: createPermanentTokenPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/paymentMethodPermanentToken'
    createApplePayEncryptedWalletPaymentMethodRequest:
      title: createApplePayEncryptedWalletPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/applePayEncryptedWallet'
    createApplePayDecryptedWalletPaymentMethodRequest:
      title: createApplePayDecryptedWalletPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/applePayDecryptedWallet'
    createGooglePayEncryptedWalletPaymentMethodRequest:
      title: createGooglePayEncryptedWalletPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/googlePayEncryptedWallet'
    createGooglePayDecryptedWalletPaymentMethodRequest:
      title: createGooglePayDecryptedWalletPaymentMethodRequest
      allOf:
        - type: object
          properties:
            idempotencyKey:
              $ref: '#/components/schemas/idempotencyKey'
          required:
            - idempotencyKey
        - $ref: '#/components/schemas/googlePayDecryptedWallet'
    createPaymentMethodRequest:
      title: createPaymentMethodRequest
      oneOf:
        - $ref: '#/components/schemas/createCardPaymentMethodRequest'
        - $ref: '#/components/schemas/createTemporaryTokenPaymentMethodRequest'
        - $ref: '#/components/schemas/createPermanentTokenPaymentMethodRequest'
        - $ref: '#/components/schemas/createApplePayEncryptedWalletPaymentMethodRequest'
        - $ref: '#/components/schemas/createApplePayDecryptedWalletPaymentMethodRequest'
        - $ref: '#/components/schemas/createGooglePayEncryptedWalletPaymentMethodRequest'
        - $ref: '#/components/schemas/createGooglePayDecryptedWalletPaymentMethodRequest'
      discriminator:
        propertyName: paymentMethodSource
        mapping:
          CARD: '#/components/schemas/createCardPaymentMethodRequest'
          TEMPORARY_TOKEN: '#/components/schemas/createTemporaryTokenPaymentMethodRequest'
          PERMANENT_TOKEN: '#/components/schemas/createPermanentTokenPaymentMethodRequest'
          APPLE_PAY_ENCRYPTED: '#/components/schemas/createApplePayEncryptedWalletPaymentMethodRequest'
          APPLE_PAY_DECRYPTED: '#/components/schemas/createApplePayDecryptedWalletPaymentMethodRequest'
          GOOGLE_PAY_ENCRYPTED: '#/components/schemas/createGooglePayEncryptedWalletPaymentMethodRequest'
          GOOGLE_PAY_DECRYPTED: '#/components/schemas/createGooglePayDecryptedWalletPaymentMethodRequest'
      required:
        - paymentMethodSource
    updatePaymentMethodRequest:
      title: updatePaymentMethodRequest
      oneOf:
        - $ref: '#/components/schemas/paymentMethodCard'
        - $ref: '#/components/schemas/paymentMethodTemporaryToken'
        - $ref: '#/components/schemas/paymentMethodPermanentToken'
        - $ref: '#/components/schemas/applePayEncryptedWallet'
        - $ref: '#/components/schemas/applePayDecryptedWallet'
        - $ref: '#/components/schemas/googlePayEncryptedWallet'
        - $ref: '#/components/schemas/googlePayDecryptedWallet'
      discriminator:
        propertyName: paymentMethodSource
        mapping:
          CARD: '#/components/schemas/paymentMethodCard'
          TEMPORARY_TOKEN: '#/components/schemas/paymentMethodTemporaryToken'
          PERMANENT_TOKEN: '#/components/schemas/paymentMethodPermanentToken'
          APPLE_PAY_ENCRYPTED: '#/components/schemas/applePayEncryptedWallet'
          APPLE_PAY_DECRYPTED: '#/components/schemas/applePayDecryptedWallet'
          GOOGLE_PAY_ENCRYPTED: '#/components/schemas/googlePayEncryptedWallet'
          GOOGLE_PAY_DECRYPTED: '#/components/schemas/googlePayDecryptedWallet'
      required:
        - paymentMethodSource
    paymentUri:
      title: Payment URI
      description: Payment Reference URL
      type: string
      format: uri-reference
      example: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    paymentReference:
      description: Payment reference. Can be expanded into full payment details using the expand query parameter.
      type: object
      nullable: true
      properties:
        paymentId:
          $ref: '#/components/schemas/paymentId'
        href:
          $ref: '#/components/schemas/paymentUri'
      required:
        - paymentId
    refundAmount:
      type: object
      description: |
        Refund amount for the transaction. 
        Note: The value must be in cents. Therefore $10.59 must be sent as 1059
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
      required:
        - amount
        - currency
      example:
        amount: 17500
        currency: CAD
    refundStatus:
      type: string
      description: Refund Status description.
      enum:
        - DECLINED
        - DECLINED_RETRY
        - PROCESSING
        - SUCCEEDED
      example: SUCCEEDED
    refund:
      title: refundResponse
      type: object
      properties:
        refundId:
          $ref: '#/components/schemas/refundId'
        payment:
          $ref: '#/components/schemas/paymentReference'
        orderId:
          $ref: '#/components/schemas/orderId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        refundAmount:
          $ref: '#/components/schemas/refundAmount'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        refundStatus:
          $ref: '#/components/schemas/refundStatus'
        transactionDetails:
          $ref: '#/components/schemas/statusDetails'
        reason:
          description: Reason for the refund.
          type: string
          minLength: 1
          maxLength: 100
          example: Defective product
          nullable: true
        credentialOnFileResponse:
          $ref: '#/components/schemas/credentialOnFileResponse'
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - refundId
        - merchantId
        - paymentMethod
        - createdAt
        - refundAmount
        - refundStatus
        - transactionDetails
    refundList:
      title: refundList
      type: object
      properties:
        data:
          description: List of refunds.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/refund'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    dynamicDescriptor:
      type: string
      description: |
        Merchant defined description sent on a per-transaction basis that will appear on the credit card statement.  

        Dependent on the card Issuer, the statement will typically show the dynamic descriptor appended to the merchant's existing business name separated by the '/' character.  

        **Note**: The combined length of the merchant's business name, forward slash '/' character, and the dynamic descriptor may not exceed 22 characters.
      minLength: 1
      maxLength: 20
      example: moneris
      nullable: true
    createRefundRequestBase:
      title: Create Refund Request Base
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        refundAmount:
          $ref: '#/components/schemas/refundAmount'
        customerId:
          nullable: true
          description: Unique Customer Identifier.
          type: string
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        customData:
          $ref: '#/components/schemas/customData'
        dynamicDescriptor:
          $ref: '#/components/schemas/dynamicDescriptor'
        ipv4:
          $ref: '#/components/schemas/ipv4'
        ipv6:
          $ref: '#/components/schemas/ipv6'
        ecommerceIndicator:
          $ref: '#/components/schemas/ecommerceIndicator'
        reason:
          description: Reason for the refund.
          type: string
          minLength: 1
          maxLength: 100
          example: Defective product
          nullable: true
      required:
        - idempotencyKey
        - refundAmount
    createMatchingRefundRequest:
      title: Matching Refund
      description: Matching Refund
      allOf:
        - type: object
          properties:
            paymentId:
              $ref: '#/components/schemas/paymentId'
          required:
            - paymentId
        - $ref: '#/components/schemas/createRefundRequestBase'
    createIndependentRefundRequest:
      title: Independent Refund
      description: Independent Refund
      allOf:
        - type: object
          properties:
            orderId:
              $ref: '#/components/schemas/orderId'
            paymentMethod:
              $ref: '#/components/schemas/storePaymentMethodRequest'
          required:
            - paymentMethod
        - $ref: '#/components/schemas/createRefundRequestBase'
    createRefundRequest:
      title: Create Refund Request
      oneOf:
        - $ref: '#/components/schemas/createMatchingRefundRequest'
        - $ref: '#/components/schemas/createIndependentRefundRequest'
    validationStatus:
      type: string
      description: Validation Status description.
      enum:
        - DECLINED
        - DECLINED_RETRY
        - PROCESSING
        - SUCCEEDED
      example: SUCCEEDED
    validationVerificationDetails:
      description: CVD, AVS, 3DS, ITD Result Codes
      type: object
      properties:
        addressVerificationServiceResultCode:
          $ref: '#/components/schemas/addressVerificationServiceResultCode'
        cardSecurityCodeResultCode:
          $ref: '#/components/schemas/cardSecurityCodeResult'
    validation:
      title: validation
      type: object
      properties:
        validationId:
          description: The unique identifier of the Validation
          type: string
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
          example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId:
          $ref: '#/components/schemas/merchantId'
        orderId:
          $ref: '#/components/schemas/orderId'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        validationStatus:
          $ref: '#/components/schemas/validationStatus'
        transactionDetails:
          $ref: '#/components/schemas/statusDetails'
        verificationDetails:
          $ref: '#/components/schemas/validationVerificationDetails'
        credentialOnFileResponse:
          $ref: '#/components/schemas/credentialOnFileResponse'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - validationId
        - merchantId
        - createdAt
        - paymentMethod
        - validationStatus
        - transactionDetails
        - verificationDetails
    validationList:
      title: validationsList
      type: object
      properties:
        data:
          description: List of validations.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/validation'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    createValidationRequest:
      title: Creates a Validation Request
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        orderId:
          $ref: '#/components/schemas/orderId'
        paymentMethod:
          $ref: '#/components/schemas/storePaymentMethodRequest'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        dynamicDescriptor:
          $ref: '#/components/schemas/dynamicDescriptor'
        ecommerceIndicator:
          description: Describes the category of e-commerce transaction being processed.
          type: string
          enum:
            - MAIL_TELEPHONE_ORDER_SINGLE
            - MAIL_TELEPHONE_ORDER_RECURRING
            - MAIL_TELEPHONE_ORDER_INSTALMENT
            - MAIL_TELEPHONE_ORDER_UNKNOWN
            - AUTHENTICATED_ECOMMERCE
            - NON_AUTHENTICATED_ECOMMERCE
            - SSL_MERCHANT
          example: AUTHENTICATED_ECOMMERCE
          default: SSL_MERCHANT
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - idempotencyKey
        - paymentMethod
    subscriptionType:
      type: string
      description: |
        Subscription Type.
        - RECURRING: Recurring Subscription.
      enum:
        - RECURRING
      example: RECURRING
    billingIntervalUnit:
      type: string
      description: |
        Controls whether the recurring series occurs on a: daily (`DAY`), weekly (`WEEK`), or monthly (`MONTH`) basis. 

        To ensure regular schedules, use `END_OF_MONTH` for schedules occurring on the last day of each month.
      enum:
        - DAY
        - WEEK
        - MONTH
        - END_OF_MONTH
    billingIntervalFrequency:
      type: integer
      format: int32
      description: |
        Number of interval units passing between subscribed payments. Frequencies higher than 1 cause the subscription to skip intervals, such as bi-weekly (2 weeks) or annual subscriptions (12 months).
      minimum: 1
      maximum: 999
      example: 1
    subscriptionIntervalCount:
      type: integer
      format: int32
      description: |
        How many payments are scheduled in the series. Payments related to the oneTimeAmount field are not included in the initial count.
      minimum: 1
      maximum: 99
      example: 12
    billingInformation:
      type: object
      description: Subscriptions allows you to set up payments whereby Moneris automatically processes the transactions and bills customers on your behalf based on the billing cycle information you provide.
      properties:
        billingIntervalUnit:
          $ref: '#/components/schemas/billingIntervalUnit'
        billingIntervalFrequency:
          $ref: '#/components/schemas/billingIntervalFrequency'
        billingIntervalCount:
          $ref: '#/components/schemas/subscriptionIntervalCount'
        billingAmount:
          description: The amount of the subscription transaction. The value must be in cents. Therefore $10.59 must be sent as 1059
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        billingStartDate:
          description: Date of the first future subscription billing transaction. This value must be a date in the future.
          type: string
          format: date
          example: '2019-07-30'
        nextBillingDate:
          description: Date on which the next payment will occur
          nullable: true
          type: string
          format: date
          example: '2019-07-30'
        billingEndDate:
          description: Date on which the subscription will end.
          nullable: true
          type: string
          format: date
          example: '2019-07-30'
      required:
        - billingIntervalUnit
        - billingIntervalFrequency
        - billingIntervalCount
        - billingStartDate
        - billingAmount
      example:
        billingIntervalUnit: WEEK
        billingIntervalFrequency: 2
        billingIntervalCount: 2
        billingAmount:
          amount: 2500
          currency: CAD
        billingStartDate: '2025-02-01'
        nextBillingDate: '2025-02-14'
        billingEndDate: '2025-02-28'
    callbackUrl:
      type: string
      minLength: 1
      maxLength: 256
      nullable: true
      description: URI on which to receive Subscription notification
      example: https://myserver.com/send/callback/here
    subscriptionStatus:
      type: string
      description: Subscription Status description.
      enum:
        - DECLINED
        - DECLINED_RETRY
        - PAUSED
        - ACTIVE
        - CANCELED
        - COMPLETED
      example: ACTIVE
    subscription:
      title: subscription
      type: object
      properties:
        subscriptionId:
          $ref: '#/components/schemas/subscriptionId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        orderId:
          $ref: '#/components/schemas/orderId'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        subscriptionType:
          $ref: '#/components/schemas/subscriptionType'
        billingInformation:
          $ref: '#/components/schemas/billingInformation'
        callbackUrl:
          $ref: '#/components/schemas/callbackUrl'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        subscriptionStatus:
          $ref: '#/components/schemas/subscriptionStatus'
        oneTimeAmount:
          nullable: true
          description: The amount for the first subscription transaction. The value must be in cents. Therefore $10.59 must be sent as 1059
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        credentialOnFileResponse:
          $ref: '#/components/schemas/credentialOnFileResponse'
        customData:
          $ref: '#/components/schemas/customData'
        payments:
          type: array
          description: List of payments
          items:
            $ref: '#/components/schemas/paymentReference'
      required:
        - subscriptionId
        - merchantId
        - orderId
        - createdAt
        - subscriptionType
        - billingInformation
        - paymentMethod
        - subscriptionStatus
    subscriptionList:
      title: subscriptionList
      type: object
      description: Paginated List of subscriptions.
      properties:
        data:
          type: array
          description: List of subscriptions.
          items:
            type: object
            $ref: '#/components/schemas/subscription'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    billingDetails:
      type: object
      description: Subscriptions allows you to set up payments whereby Moneris automatically processes the transactions and bills customers on your behalf based on the billing cycle information you provide.
      properties:
        billingIntervalUnit:
          $ref: '#/components/schemas/billingIntervalUnit'
        billingIntervalFrequency:
          $ref: '#/components/schemas/billingIntervalFrequency'
        billingIntervalCount:
          $ref: '#/components/schemas/subscriptionIntervalCount'
        billingAmount:
          description: The amount of the subscription transaction. The value must be in cents. Therefore $10.59 must be sent as 1059
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        billingStartDate:
          description: Date of the first future subscription billing transaction. This value must be a date in the future.
          type: string
          format: date
          example: '2019-07-30'
      required:
        - billingIntervalUnit
        - billingIntervalFrequency
        - billingIntervalCount
        - billingStartDate
        - billingAmount
    subscriptionPaymentMethodIdRequest:
      title: subscriptionPaymentMethodIdRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodWithId'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodCardRequest:
      title: subscriptionPaymentMethodCardRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodCard'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodTemporaryTokenRequest:
      title: subscriptionPaymentMethodTemporaryTokenRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodTemporaryToken'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodPermanentTokenRequest:
      title: subscriptionPaymentMethodPermanentTokenRequest
      allOf:
        - $ref: '#/components/schemas/paymentMethodPermanentToken'
        - type: object
          properties:
            credentialOnFileInformation:
              $ref: '#/components/schemas/credentialOnFileInformation'
          required:
            - credentialOnFileInformation
    subscriptionPaymentMethodApplePayEncryptedWalletRequest:
      title: subscriptionPaymentMethodApplePayEncryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/applePayEncryptedWallet'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodApplePayDecryptedWalletRequest:
      title: subscriptionPaymentMethodApplePayDecryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/applePayDecryptedWallet'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodGooglePayEncryptedWalletRequest:
      title: subscriptionPaymentMethodGooglePayEncryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/googlePayEncryptedWallet'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodGooglePayDecryptedWalletRequest:
      title: subscriptionPaymentMethodGooglePayDecryptedWalletRequest
      allOf:
        - $ref: '#/components/schemas/googlePayDecryptedWallet'
        - type: object
          properties:
            credentialOnFileInformation:
              nullable: true
              type: object
              description: 'Contains fields related to the Credential on File (CoF) '
              properties:
                paymentIndicator:
                  $ref: '#/components/schemas/paymentIndicator'
                paymentInformation:
                  $ref: '#/components/schemas/paymentInformation'
                issuerId:
                  $ref: '#/components/schemas/issuerId'
                originalAmount:
                  $ref: '#/components/schemas/originalAmount'
              required:
                - paymentIndicator
                - paymentInformation
              example:
                paymentIndicator: CUSTOMER_INITIATED
                paymentInformation: FIRST
                issuerId: 123asd
    subscriptionPaymentMethodRequest:
      title: subscriptionPaymentMethodRequest
      description: |
        Subscription Payment method details.

        Note: If defined, this will result in the creation of a Permanent Payment Method as defined in the Payment Method API.
      oneOf:
        - $ref: '#/components/schemas/subscriptionPaymentMethodIdRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodCardRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodTemporaryTokenRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodPermanentTokenRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodApplePayEncryptedWalletRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodApplePayDecryptedWalletRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodGooglePayEncryptedWalletRequest'
        - $ref: '#/components/schemas/subscriptionPaymentMethodGooglePayDecryptedWalletRequest'
      discriminator:
        propertyName: paymentMethodSource
        mapping:
          PAYMENT_METHOD_ID: '#/components/schemas/subscriptionPaymentMethodIdRequest'
          CARD: '#/components/schemas/subscriptionPaymentMethodCardRequest'
          TEMPORARY_TOKEN: '#/components/schemas/subscriptionPaymentMethodTemporaryTokenRequest'
          PERMANENT_TOKEN: '#/components/schemas/subscriptionPaymentMethodPermanentTokenRequest'
          APPLE_PAY_ENCRYPTED: '#/components/schemas/subscriptionPaymentMethodApplePayEncryptedWalletRequest'
          APPLE_PAY_DECRYPTED: '#/components/schemas/subscriptionPaymentMethodApplePayDecryptedWalletRequest'
          GOOGLE_PAY_ENCRYPTED: '#/components/schemas/subscriptionPaymentMethodGooglePayEncryptedWalletRequest'
          GOOGLE_PAY_DECRYPTED: '#/components/schemas/subscriptionPaymentMethodGooglePayDecryptedWalletRequest'
    createSubscriptionRequest:
      title: subscriptionRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        orderId:
          $ref: '#/components/schemas/orderId'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        subscriptionType:
          $ref: '#/components/schemas/subscriptionType'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
        callbackUrl:
          $ref: '#/components/schemas/callbackUrl'
        oneTimeAmount:
          nullable: true
          description: The amount for the first subscription transaction. The value must be in cents. Therefore $10.59 must be sent as 1059
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        paymentMethod:
          $ref: '#/components/schemas/subscriptionPaymentMethodRequest'
        ecommerceIndicator:
          $ref: '#/components/schemas/ecommerceIndicator'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        customData:
          $ref: '#/components/schemas/customData'
        dynamicDescriptor:
          $ref: '#/components/schemas/dynamicDescriptor'
        threeDSecureData:
          $ref: '#/components/schemas/threeDSecureData'
        ipv4:
          $ref: '#/components/schemas/ipv4'
        ipv6:
          $ref: '#/components/schemas/ipv6'
      required:
        - idempotencyKey
        - paymentMethod
        - subscriptionType
        - billingDetails
    customerId:
      type: string
      description: Unique Identification for the Customer
      example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
      pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
      minLength: 30
      maxLength: 30
    updateSubscriptionDetails:
      type: object
      description: Update Subscription details such as the subscription billing cycle, amount, and payment method.
      properties:
        paymentMethod:
          $ref: '#/components/schemas/subscriptionPaymentMethodIdRequest'
        totalSubscriptionIntervalCount:
          $ref: '#/components/schemas/subscriptionIntervalCount'
        subscriptionAmount:
          description: The amount of the subscription transaction. The value must be in cents. Therefore $10.59 must be sent as 1059
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        callbackUrl:
          $ref: '#/components/schemas/callbackUrl'
        customerId:
          $ref: '#/components/schemas/customerId'
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        customData:
          $ref: '#/components/schemas/customData'
    resumeSubscriptionRequest:
      title: resumeSubscriptionRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - idempotencyKey
    pauseSubscriptionRequest:
      title: pauseSubscriptionRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - idempotencyKey
    cancelSubscriptionRequest:
      title: cancelSubscriptionRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        customData:
          $ref: '#/components/schemas/customData'
        reason:
          description: Reason for the cancellation.
          type: string
          minLength: 1
          maxLength: 100
          example: Defective product
          nullable: true
      required:
        - idempotencyKey
    extendSubscriptionRequest:
      type: object
      description: Adds the given number of subscription transactions to the current (remaining) number. This can be used if a customer decides to extend a membership/subscription. However, because this must be a positive number, it cannot be used to decrease the current number of subscription transactions.
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        additionalSubscriptionIntervalCount:
          description: Adds the given number of subscription transactions to the current (remaining) number. This can be used if a customer decides to extend a membership/subscription. However, because this must be a positive number, it cannot be used to decrease the current number of subscription transactions.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 12
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - idempotencyKey
        - additionalSubscriptionIntervalCount
    firstName:
      type: string
      description: First name.
      minLength: 1
      maxLength: 30
      example: John
      nullable: true
    middleName:
      type: string
      description: Customer's middle name.
      minLength: 1
      maxLength: 30
      example: J.
      nullable: true
    lastName:
      type: string
      description: Last name.
      minLength: 1
      maxLength: 30
      example: Doe
      nullable: true
    customer:
      title: customer
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/customerId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        companyName:
          $ref: '#/components/schemas/companyName'
        address:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        shippingAddress:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        phoneNumber:
          nullable: true
          type: string
          description: Phone number.
          pattern: ^\+[1-9]\d{1,14}$
          minLength: 3
          maxLength: 16
          example: '+18663197450'
        email:
          nullable: true
          type: string
          format: email
          description: |
            Contains the customer's email address.

            For standard email protocols, visit: https://www.rfc-editor.org/rfc/rfc5322
          minLength: 1
          maxLength: 320
          example: moneris@moneris.com
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - customerId
        - merchantId
        - createdAt
    customerList:
      title: customerList
      type: object
      properties:
        data:
          description: List of customers.
          type: array
          items:
            $ref: '#/components/schemas/customer'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    createCustomerRequest:
      title: customerRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        companyName:
          $ref: '#/components/schemas/companyName'
        address:
          nullable: true
          title: customerAddress
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        shippingAddress:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        phoneNumber:
          nullable: true
          type: string
          description: Phone number.
          pattern: ^\+[1-9]\d{1,14}$
          minLength: 3
          maxLength: 16
          example: '+18663197450'
        email:
          nullable: true
          type: string
          format: email
          description: |
            Contains the customer's email address.

            For standard email protocols, visit: https://www.rfc-editor.org/rfc/rfc5322
          minLength: 1
          maxLength: 320
          example: moneris@moneris.com
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - idempotencyKey
    customerRequest:
      title: customerRequest
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        companyName:
          $ref: '#/components/schemas/companyName'
        address:
          nullable: true
          title: customerAddress
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        shippingAddress:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        phoneNumber:
          nullable: true
          type: string
          description: Phone number.
          pattern: ^\+[1-9]\d{1,14}$
          minLength: 3
          maxLength: 16
          example: '+18663197450'
        email:
          nullable: true
          type: string
          format: email
          description: |
            Contains the customer's email address.

            For standard email protocols, visit: https://www.rfc-editor.org/rfc/rfc5322
          minLength: 1
          maxLength: 320
          example: moneris@moneris.com
        customData:
          $ref: '#/components/schemas/customData'
    email:
      type: string
      format: email
      description: |
        Contains the customer's email address.

        For standard email protocols, visit: https://www.rfc-editor.org/rfc/rfc5322
      minLength: 1
      maxLength: 320
      example: moneris@moneris.com
    phoneNumber:
      type: string
      description: Phone number.
      pattern: ^\+[1-9]\d{1,14}$
      minLength: 3
      maxLength: 16
      example: '+18663197450'
    streetNumber:
      type: string
      description: Street number
      minLength: 1
      maxLength: 19
      example: '3300'
    streetName:
      type: string
      description: Street name
      minLength: 1
      maxLength: 100
      example: Bloor
    city:
      type: string
      description: |
        Identifies the city.
      minLength: 1
      maxLength: 50
      example: Toronto
    province:
      type: string
      description: 'Province or state ISO 3166-2 code '
      minLength: 1
      maxLength: 3
      format: iso-3166-2
      example: 'ON'
    postalCode:
      type: string
      description: Postal or zip code
      minLength: 1
      maxLength: 30
      example: M8X 2X2
    country:
      type: string
      description: |
        Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
        For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
      minLength: 2
      maxLength: 2
      example: CA
      format: iso-3166
    threeDSecureAuthenticationBillingAddress:
      type: object
      title: threeDSecureAuthenticationRequestBillingAddress
      description: The postal address including street, town/city, province, and postal code.
      properties:
        unitNumber:
          nullable: true
          type: string
          description: Unit number
          minLength: 1
          maxLength: 19
          example: 123A
        streetNumber:
          $ref: '#/components/schemas/streetNumber'
        streetName:
          $ref: '#/components/schemas/streetName'
        city:
          $ref: '#/components/schemas/city'
        province:
          $ref: '#/components/schemas/province'
        postalCode:
          $ref: '#/components/schemas/postalCode'
        country:
          $ref: '#/components/schemas/country'
      example:
        unitNumber: 123A
        streetNumber: '3300'
        streetName: Bloor Street West
        city: Toronto
        province: 'ON'
        postalCode: M8X 2X2
        country: CA
      required:
        - streetNumber
        - streetName
        - city
        - province
        - postalCode
        - country
    paymentMethodRequest:
      title: paymentMethodRequest
      description: Payment method details
      oneOf:
        - $ref: '#/components/schemas/paymentMethodWithId'
        - $ref: '#/components/schemas/paymentMethodCard'
        - $ref: '#/components/schemas/paymentMethodTemporaryToken'
        - $ref: '#/components/schemas/paymentMethodPermanentToken'
        - $ref: '#/components/schemas/applePayDecryptedWallet'
        - $ref: '#/components/schemas/applePayEncryptedWallet'
        - $ref: '#/components/schemas/googlePayDecryptedWallet'
        - $ref: '#/components/schemas/googlePayEncryptedWallet'
      discriminator:
        propertyName: paymentMethodSource
        mapping:
          PAYMENT_METHOD_ID: '#/components/schemas/paymentMethodWithId'
          CARD: '#/components/schemas/paymentMethodCard'
          TEMPORARY_TOKEN: '#/components/schemas/paymentMethodTemporaryToken'
          PERMANENT_TOKEN: '#/components/schemas/paymentMethodPermanentToken'
          APPLE_PAY_ENCRYPTED: '#/components/schemas/applePayEncryptedWallet'
          APPLE_PAY_DECRYPTED: '#/components/schemas/applePayDecryptedWallet'
          GOOGLE_PAY_ENCRYPTED: '#/components/schemas/googlePayEncryptedWallet'
          GOOGLE_PAY_DECRYPTED: '#/components/schemas/googlePayDecryptedWallet'
      required:
        - paymentMethodSource
    threeDSecureMessageCategory:
      type: string
      description: Identifies the category of the message for a specific use case.
      enum:
        - PAYMENT
        - NON_PAYMENT
      example: PAYMENT
    threeDSecureDeviceChannel:
      type: string
      description: Indicates the type of channel interface being used to initiate the transaction.
      enum:
        - BROWSER
        - THREE_D_SECURE_REQUESTOR_INITIATED
      example: BROWSER
    threeDSecureRequestType:
      type: string
      nullable: true
      description: |
        Type of payment that triggered the verification.
          - **CARDHOLDER**: Cardholder initiated payment.
          - **RECURRING**: Recurring payment.
      enum:
        - CARDHOLDER
        - RECURRING
        - null
      example: CARDHOLDER
    threeDSecureRecurringFrequency:
      type: integer
      format: int32
      description: Indicates the minimum number of days between authorisations.
      minimum: 1
      maximum: 9999
      example: 1
      nullable: true
    threeDSecureRecurringExpiry:
      type: string
      description: Date after which no further authorisations shall be performed. This is a required field for recurring transactions, we suggest setting it at a reasonably high value if you don't have a defined expiry date.
      format: date
      example: '2019-07-30'
      nullable: true
    threeDSecureRequestorInitiatedIndicator:
      type: string
      description: Indicates the type of 3RI request. This data element provides additional information to the ACS to determine the best approach for handing a 3RI request.
      enum:
        - RECURRING_TRANSACTION
        - INSTALMENT_TRANSACTION
        - ADD_CARD
        - MAINTAIN_CARD_INFORMATION
        - ACCOUNT_VERIFICATION
        - SPLIT_DELAYED_SHIPMENT
        - TOP_UP
        - MAIL_ORDER
        - TELEPHONE_ORDER
        - WHITELIST_STATUS_CHECK
        - OTHER_PAYMENT
        - null
      example: RECURRING_TRANSACTION
      nullable: true
    threeDSecurePriorAuthenticationData:
      type: string
      description: Data that documents and supports a specific authentication process. In the current version of the specification this data element is not defined in detail, however the intention is that for each 3DS Requestor Authentication Method, this field carry data that the ACS can use to verify the authentication process. In future versions of the specification, these details are expected to be included.
      maxLength: 2048
      example: '12345678'
      nullable: true
    threeDSecurePriorAuthenticationMethod:
      type: string
      description: Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor.
      enum:
        - FRICTIONLESS_AUTHENTICATION_OCCURRED_BY_ACS
        - CARDHOLDER_CHALLENGE_OCCURRED_BY_ACS
        - AVS_VERIFIED
        - OTHER_ISSUER_METHODS
        - null
      example: AVS_VERIFIED
      nullable: true
    threeDSecurePriorAuthenticationTimestamp:
      type: string
      description: Date and time in UTC of the prior cardholder authentication.
      format: date-time
      example: '2019-07-30T06:43:40.252Z'
      nullable: true
    threeDSecurePriorAuthenticationReference:
      type: string
      description: This data element provides additional information to the ACS to determine the best approach for handing a request.
      maxLength: 36
      example: '12345678'
      nullable: true
    threeDSecurePriorAuthenticationInformation:
      type: object
      description: Information about how the 3DS Requestor authenticated the cardholder as part of a previous 3DS transaction.
      nullable: true
      properties:
        threeDSecurePriorAuthenticationData:
          $ref: '#/components/schemas/threeDSecurePriorAuthenticationData'
        threeDSecurePriorAuthenticationMethod:
          $ref: '#/components/schemas/threeDSecurePriorAuthenticationMethod'
        threeDSecurePriorAuthenticationTimestamp:
          $ref: '#/components/schemas/threeDSecurePriorAuthenticationTimestamp'
        threeDSecurePriorAuthenticationReference:
          $ref: '#/components/schemas/threeDSecurePriorAuthenticationReference'
    threeDSecureCompletionIndicator:
      type: string
      description: |
        Indicates whether 3DS Card Lookup was successfully completed.  A successful Card Lookup increases the chances of a frictionless card authentication.
          - **SUCCESS**: Successfully completed.
          - **FAILURE**: 3DS Card Lookup attempted, but failed.
          - **UNAVAILABLE**: Unavailable or not attempted.
      enum:
        - SUCCESS
        - FAILURE
        - UNAVAILABLE
        - null
      example: SUCCESS
      nullable: true
    threeDSecureChallengeRequested:
      type: string
      description: Indicates whether a browser-based challenge is requested for this transaction. Standard is 'No Preference'
      enum:
        - NO_PREFERENCE
        - NO_CHALLENGE_REQUESTED
        - CHALLENGE_REQUESTED_MANDATE
        - null
      example: NO_PREFERENCE
      nullable: true
      default: NO_PREFERENCE
    threeDSecureChallengeWindowSize:
      type: string
      description: |
        Relates to the rendering of the challenge within the browser.
          - **X_SMALL**: 250 x 400
          - **SMALL**: 390 x 400
          - **MEDIUM**: 500 x 600
          - **LARGE**: 600 x 400
          - **FULL_SCREEN**: Full Screen
      enum:
        - X_SMALL
        - SMALL
        - MEDIUM
        - LARGE
        - FULL_SCREEN
        - null
      example: FULL_SCREEN
      nullable: true
    browserUserAgent:
      type: string
      description: |
        Exact content of the HTTP user-agent header.
        Note, when total length exceeds 2048 characters, truncate the excess portion.
      maxLength: 2048
      example: Mozilla/5.0 (Linux; {Android Version}; {Build Tag etc.})
      nullable: true
    browserJavaEnabled:
      type: boolean
      description: Indicates whether Java is enabled in the browser
      example: true
    browserJavascriptEnabled:
      type: boolean
      description: Indicates whether Javascript is enabled in the browser
      example: true
    browserScreenHeight:
      type: integer
      format: int32
      description: Defines the pixel height of the cardholder's screen.
      minimum: 0
      maximum: 999999
      example: 1080
    browserScreenWidth:
      type: integer
      format: int32
      description: Defines the pixel width of the cardholder's screen.
      minimum: 0
      maximum: 999999
      example: 1920
    authenticationRequest:
      title: authenticationRequest
      description: Use the 3DS Authentication request to start the validation process of the card and cardholder identity. This request supports all 3DS authentication methods, including 3DS Requestor Initiated (3RI) and Decoupled Authentication. The fields device_channel and message_category control the type of 3DS request made. To perform a standard 3DS Authentication with a cardholder browser experience, send device_channel = 02 for BRW. The result of this request determines whether the card supports 3DS features and, if supported, whether the transaction uses a frictionless or challenge flow. To perform a 3DS Requestor Initiated Authentication without a cardholder browser experience, send device_channel = 03 for 3RI. Any fields related to the browser’s challenge prompt are no longer required, but other conditional fields for 3RI become mandatory.
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        cardLookupId:
          nullable: true
          type: string
          description: Used to identify API resources which may be required for future follow-on transactions; i.e. Refunds, Corrections, Completions, Reversals, etc.
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
          example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        orderId:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/money'
        cardholderName:
          $ref: '#/components/schemas/cardholderName'
        cardholderEmail:
          $ref: '#/components/schemas/email'
        cardholderPhoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        shippingAddress:
          nullable: true
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        billingAddress:
          $ref: '#/components/schemas/threeDSecureAuthenticationBillingAddress'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethodRequest'
        threeDSecureMessageCategory:
          $ref: '#/components/schemas/threeDSecureMessageCategory'
        threeDSecureDeviceChannel:
          $ref: '#/components/schemas/threeDSecureDeviceChannel'
        threeDSecureRequestType:
          $ref: '#/components/schemas/threeDSecureRequestType'
        threeDSecureRecurringFrequency:
          $ref: '#/components/schemas/threeDSecureRecurringFrequency'
        threeDSecureRecurringExpiry:
          $ref: '#/components/schemas/threeDSecureRecurringExpiry'
        threeDSecureRequestorInitiatedIndicator:
          $ref: '#/components/schemas/threeDSecureRequestorInitiatedIndicator'
        threeDSecurePriorAuthenticationInformation:
          $ref: '#/components/schemas/threeDSecurePriorAuthenticationInformation'
        threeDSecureNotificationUrl:
          nullable: true
          type: string
          description: Fully qualified Encode URL of the system that receives the Response message or Error Message.
          minLength: 1
          maxLength: 256
          example: https%3A%2F%2Fdeveloper.moneris.com%2F
        threeDSecureCompletionIndicator:
          $ref: '#/components/schemas/threeDSecureCompletionIndicator'
        threeDSecureChallengeRequested:
          $ref: '#/components/schemas/threeDSecureChallengeRequested'
        threeDSecureChallengeWindowSize:
          $ref: '#/components/schemas/threeDSecureChallengeWindowSize'
        browserIpAddress:
          description: IP address the browser is connecting from.
          type: string
          format: ipv4
          example: 104.75.173.179
          nullable: true
        browserUserAgent:
          $ref: '#/components/schemas/browserUserAgent'
        browserJavaEnabled:
          $ref: '#/components/schemas/browserJavaEnabled'
        browserJavascriptEnabled:
          $ref: '#/components/schemas/browserJavascriptEnabled'
        browserScreenHeight:
          $ref: '#/components/schemas/browserScreenHeight'
        browserScreenWidth:
          $ref: '#/components/schemas/browserScreenWidth'
        browserLanguage:
          nullable: true
          type: string
          format: iso-639
          description: |
            Provides the two letter language code according the ISO 639-1 standard. 

            For a complete list of language codes, visit: https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.
          minLength: 2
          maxLength: 2
          example: en
      required:
        - amount
        - billingAddress
        - browserIpAddress
        - browserScreenHeight
        - browserScreenWidth
        - cardholderEmail
        - cardholderName
        - cardholderPhoneNumber
        - idempotencyKey
        - threeDSecureDeviceChannel
        - threeDSecureMessageCategory
    threeDSecureMessageType:
      type: string
      description: Indicates the response type in 3DS flow.
      nullable: true
      enum:
        - AUTHENTICATION_RESPONSE_MESSAGE
        - AUTHENTICATION_REQUEST_MESSAGE
        - PREPARATION_RESPONSE_MESSAGE
        - PREPARATION_REQUEST_MESSAGE
        - CHALLENGE_RESPONSE_MESSAGE
        - CHALLENGE_REQUEST_MESSAGE
        - RESULTS_REQUEST_MESSAGE
        - RESULTS_RESPONSE_MESSAGE
        - ERROR_MESSAGE
        - null
      example: CHALLENGE_RESPONSE_MESSAGE
    threeDSecureTransactionStatus:
      type: string
      description: |
        Indicates the Transaction result.  For more information about this field, please review https://docs.3dsecure.io/3dsv2/specification_220.html#attr-ARes-transStatus
          - **AUTHENTICATED**: Authentication/ Account Verification Successful.
          - **AUTHENTICATION_ATTEMPTED**: Attempts Processing Performed; Not Authenticated/Verified , but a proof of attempted authentication/verification is provided.
          - **CHALLENGE_AUTHENTICATION_REQUIRED**: Challenge Required; Additional authentication is required using the `challengeUrl` and `challengeData`.
          - **CHALLENGE_DECOUPLED_AUTHENTICATION_CONFIRMED**: Challenge Required; Decoupled Authentication confirmed. 
          - **TECHNICAL_ISSUE**: Authentication/ Account Verification Could Not Be Performed; Technical or other problem.
          - **NOT_AUTHENTICATED**: Not Authenticated /Account Not Verified; Transaction denied.
          - **REJECTED**: Authentication/ Account Verification Rejected; Issuer is rejecting authentication/verification and request that authorisation not be attempted.
          - **CHALLENGE_PREFERENCE_ACKNOWLEDGED**: Informational Only; 3DS Requestor challenge preference acknowledged.
      enum:
        - AUTHENTICATED
        - AUTHENTICATION_ATTEMPTED
        - CHALLENGE_AUTHENTICATION_REQUIRED
        - CHALLENGE_DECOUPLED_AUTHENTICATION_CONFIRMED
        - TECHNICAL_ISSUE
        - NOT_AUTHENTICATED
        - REJECTED
        - CHALLENGE_PREFERENCE_ACKNOWLEDGED
    threeDSecureTransactionStatusReason:
      type: string
      nullable: true
      description: |
        Provides information on why the Transaction Status field has the specified value.
      example: 01 - Card authentication failed
    threeDSecureChallengeUrl:
      type: string
      description: If the transStatus is “C” this field will be populated with the URL to POST the challengeData to create the cardholder challenge screen
      format: uri
      minLength: 1
      maxLength: 2048
      example: https://developer.moneris.com/
      nullable: true
    threeDSecureChallengeData:
      type: string
      description: String that must be POSTed to the Challenge URL to create challenge screen
      minLength: 1
      maxLength: 2048
      nullable: true
    threeDSecureChallengeCompletionIndicator:
      type: string
      nullable: true
      description: |
        Indicates if Challenge was completed. This is returned in CAVV Lookup Request.
      enum:
        - 'YES'
        - 'NO'
        - null
    threeDSecureCardholderInformation:
      nullable: true
      type: string
      description: Text provided by the ACS/Issuer to Cardholder during a Frictionless or Decoupled transaction. The Issuer can provide information to Cardholder.
      maxLength: 128
      example: Additional authentication is needed for this transaction, please contact (Issuer Name) at xxx-xxx-xxxx.
    threeDSecureAuthenticationType:
      type: string
      nullable: true
      description: Indicates the type of authentication method the Issuer will use to challenge the Cardholder, whether in the ARes message or what was used by the ACS when in the RReq message.
      enum:
        - STATIC
        - DYNAMIC
        - OUT_OF_BAND
        - DECOUPLED
        - null
      example: DYNAMIC
    threeDSecureAuthenticationTimestamp:
      type: string
      description: Date and time in UTC of the cardholder authentication.
      format: date-time
      example: '2019-07-30T06:43:40.252Z'
      nullable: true
    threeDSecureAuthentication:
      title: authenticationResponse
      type: object
      properties:
        threeDSecureAuthenticationId:
          $ref: '#/components/schemas/resourceId'
        cardLookupId:
          nullable: true
          type: string
          description: Used to identify API resources which may be required for future follow-on transactions; i.e. Refunds, Corrections, Completions, Reversals, etc.
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
          example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId:
          $ref: '#/components/schemas/merchantId'
        orderId:
          $ref: '#/components/schemas/orderId'
        threeDSecureMessageType:
          $ref: '#/components/schemas/threeDSecureMessageType'
        threeDSecureTransactionStatus:
          $ref: '#/components/schemas/threeDSecureTransactionStatus'
        threeDSecureTransactionStatusReason:
          $ref: '#/components/schemas/threeDSecureTransactionStatusReason'
        ecommerceIndicator:
          $ref: '#/components/schemas/ecommerceIndicator'
        threeDSecureChallengeUrl:
          $ref: '#/components/schemas/threeDSecureChallengeUrl'
        threeDSecureChallengeData:
          $ref: '#/components/schemas/threeDSecureChallengeData'
        threeDSecureAuthenticationValue:
          $ref: '#/components/schemas/threeDSecureAuthenticationValue'
        threeDSecureChallengeCompletionIndicator:
          $ref: '#/components/schemas/threeDSecureChallengeCompletionIndicator'
        threeDSecureServerTransactionId:
          nullable: true
          type: string
          description: "Indicates information required when sending a version 3-D Secure 2.0+ transaction. \n\nThis data is obtained from a CAVV Lookup Request or MPI\_3DS\_Authentication Request transaction.\n"
          format: uuid
          example: ad9b0eda-bf9b-4288-b188-9467993603e1
        threeDSecureDirectoryServerTransactionId:
          nullable: true
          type: string
          description: Universally unique transaction identifier assigned by the 3DS Directory Server (DS) to identify a single transaction.
          format: uuid
          example: ad9b0eda-bf9b-4288-b188-9467993603e1
        threeDSecureAccessControlServerTransactionId:
          nullable: true
          type: string
          description: "Required if sending a version 3-D Secure 2.0+ transaction. Data is obtained from a Cavv Lookup Request or MPI\_3DS\_Authentication Request transaction"
          format: uuid
          example: ad9b0eda-bf9b-4288-b188-9467993603e1
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        threeDSecureCardholderInformation:
          $ref: '#/components/schemas/threeDSecureCardholderInformation'
        threeDSecureVersion:
          $ref: '#/components/schemas/threeDSecureVersion'
        threeDSecureAuthenticationType:
          $ref: '#/components/schemas/threeDSecureAuthenticationType'
        threeDSecureAuthenticationTimestamp:
          $ref: '#/components/schemas/threeDSecureAuthenticationTimestamp'
      required:
        - threeDSecureAuthenticationId
        - merchantId
        - threeDSecureTransactionStatus
        - ecommerceIndicator
        - paymentMethod
        - threeDSecureVersion
    threeDSecureChallengeResponseData:
      type: string
      description: Provides the response data from the challenge.
      example: TBD
    lookupRequest:
      title: challengeFlowRequest
      description: The point of the 3-D Secure flow is to verify that the true cardholder is a part of the authorization. The challenge flow is used to present a way of authenticating the cardholder using e.g. OTP or a federated identification method.
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        threeDSecureChallengeResponseData:
          $ref: '#/components/schemas/threeDSecureChallengeResponseData'
      required:
        - idempotencyKey
        - threeDSecureChallengeResponseData
    threeDSecureNotificationUrl:
      type: string
      description: Fully qualified Encode URL of the system that receives the Response message or Error Message.
      minLength: 1
      maxLength: 256
      example: https%3A%2F%2Fdeveloper.moneris.com%2F
    cardLookupRequest:
      title: cardLookupRequest
      description: The card_lookup request verifies the applicability of 3DS on the card and returns the 3DS version supported by the card. It also returns the 3DS Method URL and 3DS Method Data for submitting a device fingerprinting POST to issuer’s ACS.
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        orderId:
          $ref: '#/components/schemas/orderId'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethodRequest'
        threeDSecureNotificationUrl:
          $ref: '#/components/schemas/threeDSecureNotificationUrl'
      required:
        - idempotencyKey
        - paymentMethod
        - threeDSecureNotificationUrl
    threeDSecureMethodUrl:
      type: string
      format: uri
      description: Returns the URL for the Device Fingerprinting step.
      minLength: 1
      maxLength: 256
      example: https://developer.moneris.com/
    threeDSecureMethodData:
      type: string
      description: Data that must be posted to 3DS Method URL for the Device Fingerprinting step.
      minLength: 1
      maxLength: 254
    cardLookup:
      title: cardLookup
      type: object
      properties:
        cardLookupId:
          $ref: '#/components/schemas/resourceId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        orderId:
          $ref: '#/components/schemas/orderId'
        threeDSecureServerTransactionId:
          $ref: '#/components/schemas/threeDSecureServerTransactionId'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        threeDSecureVersion:
          $ref: '#/components/schemas/threeDSecureVersion'
        threeDSecureMethodUrl:
          $ref: '#/components/schemas/threeDSecureMethodUrl'
        threeDSecureMethodData:
          $ref: '#/components/schemas/threeDSecureMethodData'
      required:
        - cardLookupId
        - merchantId
        - paymentMethod
        - threeDSecureServerTransactionId
        - threeDSecureVersion
        - threeDSecureMethodUrl
        - threeDSecureMethodData
    kountResult:
      description: Auto-decision response
      type: string
      enum:
        - APPROVED
        - DECLINED
        - UNDER_REVIEW
    fraudScore:
      description: Final risk score returned from Kount system
      type: integer
      format: int32
      maxLength: 3
      example: 99
      nullable: true
    kountTransactionId:
      description: Kount Transaction ID
      type: string
      maxLength: 12
      example: '123456789012'
    kountTriggeredCounter:
      type: object
      description: Kount Counter that was triggered
      properties:
        name:
          type: string
          description: Counter Name
          maxLength: 64
        value:
          type: number
          format: double
          description: The sum of the number of times a counter was triggered.
          nullable: true
      required:
        - name
    kountPiercedAddress:
      type: object
      description: Pierced IP Address details.
      nullable: true
      properties:
        latitude:
          description: Latitude of pierced IP address
          type: number
          format: double
          example: -90.1922
          nullable: true
        longitude:
          description: Longitude of pierced IP address
          type: number
          format: double
          example: 38.6312
          nullable: true
        city:
          nullable: true
          type: string
          description: |
            Identifies the city.
          minLength: 1
          maxLength: 50
          example: Toronto
        region:
          description: State/Region of pierced IP address
          type: string
          example: Ontario
          maxLength: 255
          nullable: true
        owner:
          description: Owner of pierced IP address or address block
          type: string
          maxLength: 64
          nullable: true
        country:
          nullable: true
          type: string
          description: |
            Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
            For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
          minLength: 2
          maxLength: 2
          example: CA
          format: iso-3166
    kountTriggeredRule:
      type: object
      description: Kount rule that was triggered
      properties:
        id:
          description: Rule ID associated with merchant-created rules
          type: integer
          format: int64
          example: 8
        description:
          description: Rule descriptions associated with the Id
          type: string
          maxLength: 255
          nullable: true
          example: Rule description example
    kountInfo:
      description: Object of Kount response parameters
      type: object
      properties:
        browser:
          description: Web Browser
          type: string
          maxLength: 64
          example: Google Chrome
          nullable: true
        cardBrand:
          nullable: true
          type: string
          description: Displays the card brand name associated with the card type.
          enum:
            - MASTERCARD
            - VISA
            - AMERICAN_EXPRESS
            - JCB
            - DISCOVER
            - INTERAC
            - UNIONPAY
            - GIFT_MONERIS
            - GIFT_DATACANDY
            - GIFT_GIVEX
            - null
          example: MASTERCARD
        associatedCardCount:
          description: Total number of credit cards associated to persona as seen by Kount
          type: integer
          format: int32
          example: 3
          nullable: true
        cookiesEnabled:
          description: A flag to indicate if device placing order has cookies enabled or not
          type: boolean
          example: true
          nullable: true
        countersTriggered:
          type: array
          description: Counters triggered during rules evaluation
          items:
            $ref: '#/components/schemas/kountTriggeredCounter'
        country:
          description: Two-character ISO country code associated with the physical device
          nullable: true
          type: string
          minLength: 2
          maxLength: 2
          example: CA
          format: iso-3166
        deviceFirstSeenAt:
          description: Date device first seen
          nullable: true
          type: string
          format: date
          example: '2019-07-30'
        deviceLayers:
          description: 5 device layers that comprise the device's fingerprint, representing OS, browser, Javascript, cookies and Flash settings
          type: string
          maxLength: 55
          minLength: 55
          nullable: true
        deviceCount:
          description: Total number of unique devices associated to persona as seen by Kount
          type: integer
          format: int32
          example: 2
          nullable: true
        deviceScreenResolution:
          description: Device Screen Resolution
          type: string
          maxLength: 10
          example: 1920x1080
          nullable: true
        emailCount:
          description: Total number of unique email addresses associated to persona as seen by Kount
          type: integer
          format: int32
          example: 3
          nullable: true
        errorCount:
          description: Number of errors the Kount request generated
          type: integer
          format: int32
          example: 3
          nullable: true
        errorCode:
          description: Error Code displayed in Risk Inquiry Service response
          type: string
          maxLength: 4
          example: '1080'
          nullable: true
        kountFingerprint:
          description: The unique fingerprint of the device placing the order
          type: string
          maxLength: 32
          example: 123456789h123456789p123456789g12
          nullable: true
        flashEnabled:
          description: A flag to indicate if the device placing the order has Flash enabled
          type: boolean
          example: true
          nullable: true
        riskiestAssociatedCountry:
          description: |
            Persona related country with highest probability of fraud
            Refers to Kount's GEOX field.
          nullable: true
          type: string
          minLength: 2
          maxLength: 2
          example: CA
          format: iso-3166
        userDefinedHomeCountry:
          description: |
            User home country the device owner has set in the device's control panel
            Refers to Kount's HTTP_COUNTRY
          nullable: true
          type: string
          minLength: 2
          maxLength: 2
          example: CA
          format: iso-3166
        proxyAddress:
          description: IP address of proxy
          type: string
          format: ipv4
          example: 104.75.173.179
          nullable: true
        javascriptEnabled:
          description: A flag to indicate if the device placing order has JavaScript enabled
          type: boolean
          example: true
          nullable: true
        deviceDataCollectedByDataCollector:
          description: Flag indicating whether or not device data was collected by the Data Collector process
          type: boolean
          example: true
          nullable: true
        knowYourCustomerFlag:
          description: Know Your Customer Flag
          type: boolean
          example: true
          nullable: true
        deviceLanguage:
          description: The two-character ISO language the device owner has set in the device control panel
          nullable: true
          type: string
          format: iso-639
          minLength: 2
          maxLength: 2
          example: en
        localTime:
          description: The local time the device owner has set in the device control panel
          nullable: true
          type: string
          format: date-time
          example: '2019-07-30T06:43:40.252Z'
        isMobileDevice:
          description: Flag to indicate if the device placing the order is a mobile device
          type: boolean
          example: true
          nullable: true
        usesMobileForwarder:
          description: If device is mobile, is it using a forwarder to process the carriers service
          type: boolean
          example: true
          nullable: true
        mobileType:
          description: Type of mobile device, e.g., iPhone, Android, Blackberry, iPad, etc.
          type: string
          maxLength: 32
          example: iPhone
          nullable: true
        kountNetwork:
          description: 'Riskiest network type associated with persona within last 14 days:'
          type: string
          nullable: true
          enum:
            - ANONYMOUS
            - HIGH_SCHOOL
            - LIBRARY
            - NORMAL
            - OPEN_PROXY
            - PRISON
            - SATELLITE
            - null
        mode:
          nullable: true
          description: |
            Specifies the Risk Inquiry Service post mode type

            Risk Inquiry Service Modes

            Modes are used to specify what type of data is being submitted to Kount.
            Note that ALL FIELD NAMES for a RIS call must be UPPERCASE. They cannot be other case combinations
            such as sess, Merc, mOdE. However, the values for fields can be mixed case, such as
            SESS=UpperMixedCaseSessID95628.
            - QUERY = Mode Q
              Initial queries directed from the merchant to Kount that do not originate from a call center
              environment.
            - UPDATE = Mode U
              Update call to Kount, does not cause a reevaluation of the transaction but will update what is displayed
              in the Agent Web Console. This update call does not count towards the number of RIS transactions
              purchased. Only certain fields can be updated with MODE=U calls. The PTYP field can only be updated if
              the initial post to Kount was PTYP=NONE
          type: string
          enum:
            - QUERY
            - UPDATE
            - null
        operatingSystem:
          description: Operating system of the device
          type: string
          maxLength: 64
          example: macOS
          nullable: true
        pcRemoteEnabled:
          description: Flag indicating whether the device is enabled to use PC remote software
          type: boolean
          example: true
          nullable: true
        proxyEnabled:
          description: Flag indicating whether or not a proxy server is detected
          type: boolean
          example: true
          nullable: true
        piercedAddress:
          $ref: '#/components/schemas/kountPiercedAddress'
        reasonCode:
          description: Reason code associated with rule action
          type: string
          maxLength: 16
          example: Invalid Data
          nullable: true
        region:
          description: Region associated to device location
          type: string
          maxLength: 2
          example: CA
          nullable: true
        riskiestAssociatedRegion:
          description: |
            Indicates the riskiest geographical location associated with the Persona. 
            Refers to Kount's GEOX.
          type: string
          maxLength: 2
          example: CA
          nullable: true
        rulesTriggered:
          type: array
          description: Rules triggered by post to Kount
          items:
            $ref: '#/components/schemas/kountTriggeredRule'
        sessionId:
          nullable: true
          description: Unique Session ID; must be unique over a 30-day span
          type: string
          maxLength: 32
          example: xjudq804i1049jkjakdad
        websiteId:
          nullable: true
          description: Website identifier of where order originated
          type: string
          maxLength: 8
          example: DEFAULT
        timezone:
          description: The time zone of the device; In the ISO format of +|–hh:mm
          type: string
          maxLength: 6
          example: '-04:00'
          nullable: true
        deviceUserAgent:
          nullable: true
          type: string
          description: |
            Exact content of the HTTP user-agent header.
            Note, when total length exceeds 2048 characters, truncate the excess portion.
          maxLength: 2048
          example: Mozilla/5.0 (Linux; {Android Version}; {Build Tag etc.})
        velocity:
          description: Quantity of orders seen from persona within last 14 days
          type: integer
          format: int64
          example: 8
          nullable: true
        maximumVelocity:
          description: Quantity of orders from persona within the most active 6 hour window in last 14 days; payment_response field must be equal to ‘A’
          type: integer
          format: int64
          example: 8
          nullable: true
        kountVersion:
          description: Specifies version of Kount system being used
          type: string
          maxLength: 4
          example: '1.0'
          nullable: true
        deviceVoiceActivated:
          description: If it is a mobile device, flag indicating whether the device is voice activated
          type: boolean
          example: true
          nullable: true
        warningCount:
          description: Number of warnings the Kount Inquiry Service has generated
          type: integer
          format: int32
          example: 8
          nullable: true
        warningCode:
          description: Warning code displayed in the Risk Inquiry Service response
          type: string
          maxLength: 4
          example: '180'
          nullable: true
        warningDetail:
          description: Warning details
          type: string
          nullable: true
    kountInquiry:
      title: kountInquiry
      allOf:
        - type: object
          properties:
            kountInquiryId:
              $ref: '#/components/schemas/resourceId'
            orderId:
              $ref: '#/components/schemas/orderId'
            kountResult:
              $ref: '#/components/schemas/kountResult'
            fraudScore:
              $ref: '#/components/schemas/fraudScore'
            kountTransactionId:
              $ref: '#/components/schemas/kountTransactionId'
          required:
            - kountInquiryId
            - kountResult
            - kountTransactionId
        - $ref: '#/components/schemas/kountInfo'
      required:
        - orderId
        - kountTransactionId
        - kountResult
    kountInquiryList:
      title: kountInquiryList
      type: object
      properties:
        data:
          description: Kount Inquiries list.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/kountInquiry'
        self:
          $ref: '#/components/schemas/self'
        first:
          $ref: '#/components/schemas/first'
        last:
          $ref: '#/components/schemas/last'
        next:
          $ref: '#/components/schemas/next'
        previous:
          $ref: '#/components/schemas/previous'
      required:
        - data
    kountAccountId:
      description: 6 digit  local identifier used by the merchant to identify the kount inquiry request
      type: string
      minLength: 6
      maxLength: 6
      example: '760000'
    kountApiKey:
      description: The API key for the associated with the Kount Merchant ID
      type: string
      maxLength: 256
      example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiI3NjAwMDAiLCJhdWQiOiJLb3VudC4xIiwiaWF0IjoxNTU4MDQwODQ5LCJzY3AiOnsia2EiOm51bGwsImtjIjpmYWxzZSwiYXBpIjp0cnVlLCJyaXMiOnRydWV9fQ.y3_2yzd11-Y_F6_xzVsXI-NO1a7P6ldMjDnKzl5yBko
    originatedFromCallCenter:
      description: |
        Refers to Kount's Call center indicator. 

        Flag indicating whether risk inquiry request originates from a call center environment If the customer service agents navigate to a separate order entry page that does not collect iframe data: When sending the kount_inquiry request, set call_center_ind to Y If the customer service agents navigate to the same order entry page as the customer: When sending the kount_inquiry request, set call_center_ind to N If Risk Inquiry Service call does not originate from a call center environment, set call_center_ind to N

        True for YES, False fo NO
      type: boolean
    sessionId:
      description: Unique Session ID; must be unique over a 30-day span
      type: string
      maxLength: 32
      example: xjudq804i1049jkjakdad
    websiteId:
      description: Website identifier of where order originated
      type: string
      maxLength: 8
      example: DEFAULT
    kountPaymentId:
      title: Kount Payment Id
      type: object
      description: Payment Id
      properties:
        paymentId:
          $ref: '#/components/schemas/paymentId'
      required:
        - paymentId
    kountValidationId:
      title: Kount Validation Id
      type: object
      description: Validation Id
      properties:
        validationId:
          $ref: '#/components/schemas/resourceId'
        amount:
          $ref: '#/components/schemas/money'
      required:
        - validationId
        - amount
    paymentToken:
      description: |
        Payment token submitted by merchant for order (credit card, payer ID, routing/transit, MICR, and account number).

        If paymentType is set to NONE then the paymentToken value should be left empty (NULL).

        If the credit card information is not available and Moneris Tokenization is used to process payment set paymentType = CARD and send the token in the paymentToken field.
      type: string
      maxLength: 32
      example: '4242424242424242'
    paymentType:
      description: |
        Payment Type submitted by merchant. 

        If the credit card information is not available and Moneris Tokenization is used to process payment set paymentType = CARD and send the token in the paymentToken field.
      type: string
      enum:
        - APPLE_PAY
        - CARD
        - PAYPAL
        - CHECK
        - NONE
        - GREEN_DOT_MONEY_PACK
        - BILL_ME_LATER
        - GIFT_CARD
        - BPAY
        - NETELLER
        - GIROPAY
        - ELV
        - MERCADE_PAGO
        - SINGLE_EURO_PAYMENT_AREA
        - INTERAC
        - CARTE_BLEUE
        - POLI
        - SKRILL_MONEY_BOOKERS
        - SOFORT
    kountPaymentData:
      title: Kount Payment Data
      description: Payment Data
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/money'
        customerId:
          nullable: true
          type: string
          description: Unique Identification for the Customer
          example: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
        customerReference:
          nullable: true
          type: string
          description: Unique Identification for the Customer. This can be an identifier generated from a merchant-defined identifier.
          example: 911677-212
          minLength: 1
          maxLength: 50
        lastFour:
          nullable: true
          type: string
          description: Last 4 digits of the card.
          minLength: 4
          maxLength: 4
          example: '1234'
        paymentToken:
          $ref: '#/components/schemas/paymentToken'
        paymentType:
          $ref: '#/components/schemas/paymentType'
      required:
        - paymentToken
        - paymentType
        - amount
    kountPaymentDetails:
      title: kountPaymentDetails
      description: Payment Data
      oneOf:
        - $ref: '#/components/schemas/kountPaymentId'
        - $ref: '#/components/schemas/kountValidationId'
        - $ref: '#/components/schemas/kountPaymentData'
    itemId:
      type: string
      maxLength: 255
      description: Item unique identifier.
      example: e2ab873e-b295-11e9-9c02
    itemType:
      type: string
      description: High level description of an item
      maxLength: 255
      example: Phone
    kountProductItem:
      type: object
      description: Item part of the transaction
      properties:
        itemId:
          $ref: '#/components/schemas/itemId'
        itemType:
          $ref: '#/components/schemas/itemType'
        itemQuantity:
          type: integer
          format: int32
          description: Quantity invoiced for this line item.
          minimum: 0
          maximum: 999999999
          example: 82
          nullable: true
        itemName:
          nullable: true
          type: string
          description: Item Name
          minLength: 1
          maxLength: 50
          example: Canned Food
        itemAmount:
          title: kountProductItemamount
          nullable: true
          type: object
          description: Contains the individual item amount that is normally calculated as price multiplied by quantity. The value must be in cents. Therefore $10.59 must be sent as 1059
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 15000
            currency: CAD
      required:
        - itemId
        - itemType
    automaticNumberId:
      description: 'Automatic Number Identification (ANI) submitted with order If the ANI cannot be determined, merchant must pass 0123456789 as the ANID NOTE: This field is only valid for phone-to-web requests where customer service agents navigate to a separate order entry page that does not collect iframe data Risk Inquiry Service submissions'
      type: string
      maxLength: 32
      example: '0123456789'
      nullable: true
    gender:
      type: string
      nullable: true
      description: An individual's gender
      enum:
        - MALE
        - FEMALE
        - null
    fullName:
      type: string
      description: Customers full name
      minLength: 1
      maxLength: 64
      example: John Doe
      nullable: true
    financialOrderId:
      description: Unique identifier for transactions at Kount
      type: string
      maxLength: 32
      example: nqa-finorderid-1
      nullable: true
    shippingType:
      description: Shipping type. The following nomenclature is expected for shipping types to be passed to Kount. NOTE:These three attributes can be used to pass custom attribute data if you want to correlate some data with the returned response
      type: string
      nullable: true
      enum:
        - SAME_DAY
        - NEXT_DAY
        - SECOND_DAY
        - STANDARD
        - null
    kountInquiryRequest:
      title: kountInquiryRequest
      type: object
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        orderId:
          $ref: '#/components/schemas/orderId'
        kountAccountId:
          $ref: '#/components/schemas/kountAccountId'
        kountApiKey:
          $ref: '#/components/schemas/kountApiKey'
        originatedFromCallCenter:
          $ref: '#/components/schemas/originatedFromCallCenter'
        sessionId:
          $ref: '#/components/schemas/sessionId'
        websiteId:
          $ref: '#/components/schemas/websiteId'
        paymentDetails:
          $ref: '#/components/schemas/kountPaymentDetails'
        email:
          $ref: '#/components/schemas/email'
        products:
          type: array
          description: List of product items part of the transaction
          items:
            $ref: '#/components/schemas/kountProductItem'
        automaticNumberId:
          $ref: '#/components/schemas/automaticNumberId'
        billingAddress:
          nullable: true
          title: kountBillingAddress
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        shippingAddress:
          nullable: true
          title: kountShippingAddress
          type: object
          description: |
            The postal address including street, town/city, province, and postal code.
            Optionally an unit number can be provided.
          properties:
            unitNumber:
              nullable: true
              type: string
              description: Unit number
              minLength: 1
              maxLength: 19
              example: 123A
            streetNumber:
              nullable: true
              type: string
              description: Street number
              minLength: 1
              maxLength: 19
              example: '3300'
            streetName:
              nullable: true
              type: string
              description: Street name
              minLength: 1
              maxLength: 100
              example: Bloor
            city:
              nullable: true
              type: string
              description: |
                Identifies the city.
              minLength: 1
              maxLength: 50
              example: Toronto
            province:
              nullable: true
              type: string
              description: 'Province or state ISO 3166-2 code '
              minLength: 1
              maxLength: 3
              format: iso-3166-2
              example: 'ON'
            postalCode:
              nullable: true
              type: string
              description: Postal or zip code
              minLength: 1
              maxLength: 30
              example: M8X 2X2
            country:
              nullable: true
              type: string
              description: |
                Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
                For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
              minLength: 2
              maxLength: 2
              example: CA
              format: iso-3166
          example:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
        dateOfBirth:
          description: Date of Birth.
          nullable: true
          type: string
          format: date
          example: '2019-07-30'
        timestamp:
          description: This is timestamp associated with the creation of a user in Kount service.
          nullable: true
          type: string
          format: date-time
          example: '2019-07-30T06:43:40.252Z'
        gender:
          $ref: '#/components/schemas/gender'
        customerName:
          $ref: '#/components/schemas/fullName'
        financialOrderId:
          $ref: '#/components/schemas/financialOrderId'
        shippingType:
          $ref: '#/components/schemas/shippingType'
        ipv4:
          nullable: false
          type: string
          format: ipv4
          description: Internet Protocol version 4 (IPv4).
          example: 104.75.173.179
        customData:
          $ref: '#/components/schemas/customData'
      required:
        - idempotencyKey
        - kountAccountId
        - kountApiKey
        - paymentDetails
        - originatedFromCallCenter
        - sessionId
        - websiteId
        - ipv4
        - email
        - products
    kountRefundStatus:
      description: Refund/Chargeback status. R - Refund, C - Chargeback
      type: string
      nullable: true
      enum:
        - REFUND
        - CHARGEBACK
        - null
    evaluateKountResult:
      description: full re-evaluation will be performed with Kount. Default to false.
      type: boolean
      default: false
      example: false
    kountAssertRequest:
      title: kountAssertRequest
      type: object
      properties:
        kountAccountId:
          $ref: '#/components/schemas/kountAccountId'
        kountApiKey:
          $ref: '#/components/schemas/kountApiKey'
        paymentDetails:
          title: kountAssertPaymentDetails
          description: Kount Assert Payment Data
          oneOf:
            - $ref: '#/components/schemas/kountPaymentId'
            - type: object
              properties:
                validationId:
                  $ref: '#/components/schemas/resourceId'
              required:
                - validationId
            - type: object
              title: Kount Assert Payment Data
              description: Kount Assert Payment Data
              properties:
                lastFour:
                  nullable: true
                  type: string
                  description: Last 4 digits of the card.
                  minLength: 4
                  maxLength: 4
                  example: '1234'
                paymentToken:
                  nullable: true
                  description: |
                    Payment token submitted by merchant for order (credit card, payer ID, routing/transit, MICR, and account number).

                    If paymentType is set to NONE then the paymentToken value should be left empty (NULL).

                    If the credit card information is not available and Moneris Tokenization is used to process payment set paymentType = CARD and send the token in the paymentToken field.
                  type: string
                  maxLength: 32
                  example: '4242424242424242'
                paymentType:
                  $ref: '#/components/schemas/paymentType'
              required:
                - paymentType
        financialOrderId:
          nullable: true
          description: Unique identifier for transactions at Kount
          type: string
          maxLength: 32
          example: nqa-finorderid-1
        refundStatus:
          $ref: '#/components/schemas/kountRefundStatus'
        evaluateKountResult:
          $ref: '#/components/schemas/evaluateKountResult'
      required:
        - kountAccountId
        - kountApiKey
    installmentEligibilityRequest:
      type: object
      description: Installment Eligibility request.
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        orderId:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/money'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethodRequest'
      required:
        - idempotencyKey
        - amount
        - paymentMethod
    installmentName:
      type: string
      description: Name of the installment plan. This may not be unique.
      example: Plan6M
    installmentType:
      type: string
      description: Type of the installment plan.
      enum:
        - BILATERAL
        - ISSUER_DEFAULT
        - ISSUER_PROMOTION
        - MARKET
      example: ISSUER_PROMOTION
    installmentCount:
      type: integer
      format: int32
      minimum: 0
      maximum: 1000
      description: ' Maximum number of installments that can be in the Plan Acceptance created from this plan.'
      example: 6
    installmentFrequency:
      type: string
      description: Supported Tenure Types for a plan.
      enum:
        - WEEKLY
        - BIWEEKLY
        - MONTHLY
        - BIMONTHLY
      example: MONTHLY
    installmentTermsAndConditionsText:
      type: string
      description: Text of the Terms and Conditions for Installment Plan.
      minLength: 1
      maxLength: 2000
      example: You are selecting a 6-month installment plan.
    url:
      type: string
      format: uri
      description: |
        Provides the Uniform Resource Identifier based on the RFC 3986 standard.

        For additional details, visit: https://www.rfc-editor.org/rfc/rfc3986.
      minLength: 1
      maxLength: 256
      example: https://developer.moneris.com/
    language:
      type: string
      format: iso-639
      description: |
        Provides the two letter language code according the ISO 639-1 standard. 

        For a complete list of language codes, visit: https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.
      minLength: 2
      maxLength: 2
      example: en
    installmentTermsAndConditions:
      type: object
      properties:
        installmentTermsAndConditionsText:
          $ref: '#/components/schemas/installmentTermsAndConditionsText'
        installmentTermsAndConditionsUrl:
          $ref: '#/components/schemas/url'
        installmentTermsAndConditionsVersion:
          $ref: '#/components/schemas/installmentTermsAndConditionsVersion'
        installmentTermsAndConditionsLanguageCode:
          $ref: '#/components/schemas/language'
    installmentPromotionCode:
      type: string
      description: An external identifier to this plan provided by the issuer to Visa that identifies this Installment plan.
      nullable: true
      minLength: 1
      maxLength: 2
    installmentPromotionId:
      nullable: true
      type: string
      description: An external identifier provided by the issuer to Visa that identifies a program or promotion that is setup outside of Visa Installment Services.
      minLength: 1
      maxLength: 8
      example: 02226M1
    firstInstallment:
      type: object
      description: Cost details (fee and principal) for the first Installment.
      properties:
        installmentUpFrontFee:
          $ref: '#/components/schemas/money'
        installmentFee:
          $ref: '#/components/schemas/money'
        installmentAmount:
          $ref: '#/components/schemas/money'
    lastInstallment:
      type: object
      description: Cost details (fee and principal) for the last Installment.
      properties:
        installmentFee:
          $ref: '#/components/schemas/money'
        installmentAmount:
          $ref: '#/components/schemas/money'
    installmentPlan:
      type: object
      description: Installment plan details.
      properties:
        planId:
          $ref: '#/components/schemas/installmentId'
        planIdReference:
          $ref: '#/components/schemas/installmentIdReference'
        planName:
          $ref: '#/components/schemas/installmentName'
        planType:
          $ref: '#/components/schemas/installmentType'
        installmentCount:
          $ref: '#/components/schemas/installmentCount'
        installmentFrequency:
          $ref: '#/components/schemas/installmentFrequency'
        planTermsAndConditions:
          type: array
          description: Terms and Conditions for the Installment Plan.
          items:
            type: object
            $ref: '#/components/schemas/installmentTermsAndConditions'
        installmentPromotionCode:
          $ref: '#/components/schemas/installmentPromotionCode'
        installmentPromotionId:
          $ref: '#/components/schemas/installmentPromotionId'
        firstInstallment:
          $ref: '#/components/schemas/firstInstallment'
        lastInstallment:
          $ref: '#/components/schemas/lastInstallment'
        annualPercentageRate:
          description: Annual Percentage Rate (APR) as configured by the Issuer during plan creation. This is not used for calculations but used only for display purposes.
          type: number
          format: decimal
          minimum: 0
          maximum: 100
          example: 90.5
        installmentTotalFee:
          $ref: '#/components/schemas/money'
        totalPlanCost:
          $ref: '#/components/schemas/money'
    installmentEligibilityResponse:
      type: object
      description: Installment Eligibility response.
      properties:
        installmentPlans:
          description: List of eligible plans.
          type: array
          items:
            $ref: '#/components/schemas/installmentPlan'
        paymentMethod:
          $ref: '#/components/schemas/paymentMethod'
    ChainDetails:
      type: object
      description: An object containing information related to the chain to which the account belongs.
      nullable: true
      properties:
        chainProfile:
          type: object
          description: An object that contains details about the profile of an organization chain.
          nullable: true
          properties:
            chainId:
              type: string
              description: A unique identifier assigned to a specific organizational chain.
              nullable: true
              minLength: 13
              maxLength: 13
              example: '0030400001622'
    Bank:
      type: object
      description: An object that contains information about the bank associated with the account or transaction.
      required:
        - currency
        - institutionNumber
        - transitNumber
        - accountNumber
      properties:
        currency:
          $ref: '#/components/schemas/currency'
        institutionNumber:
          type: string
          description: The name or identifier of the financial institution.
          maxLength: 5
          example: 809
          pattern: ^\d{5}
        transitNumber:
          type: string
          description: The identifier of the transit bank associated.
          maxLength: 5
          example: '00160'
          pattern: ^\d{5}
        accountNumber:
          type: integer
          description: A unique identifier assigned to a bank account.
          format: int64
          example: 333333333333
    BankingDetails:
      type: object
      description: An object that contains the necessary banking information related to the account or transaction.
      required:
        - creditDepositAccount
      properties:
        creditDepositAccount:
          $ref: '#/components/schemas/Bank'
        additionalBankingAccounts:
          type: array
          description: A list of additional banking accounts associated with the merchant.
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/Bank'
              - type: object
                required:
                  - accountType
                properties:
                  accountType:
                    type: string
                    enum:
                      - POS_BILLING_ACCOUNT
                      - CHARGEBACK_ACCOUNT
                      - DEBIT_DEPOSIT_ACCOUNT
          maxItems: 10
    PointOfSaleOptions:
      description: An object containing details about the point of sale options available for processing transactions.
      required:
        - settlementOption
      properties:
        settlementOption:
          type: string
          description: The method for settling transactions.
          enum:
            - SYSTEM_CLOSE
            - MERCHANT_CLOSE
        settlementTime:
          type: string
          description: A timestamp indicating the time when a transaction is settled.
          format: time
          example: '18:10:00'
        debitPerTransactionRefundLimit:
          $ref: '#/components/schemas/money'
        dailyRefundLimit:
          $ref: '#/components/schemas/money'
        dailyCancellationLimit:
          $ref: '#/components/schemas/money'
    MerchantCategoryCode:
      type: string
      description: A four-digit code that classifies the type of business or service provided by the merchant, based on standard industry categories.
      minLength: 4
      maxLength: 4
      example: '0742'
    BusinessSubCategory:
      type: string
      description: The sub-category of the business.
      nullable: true
      enum:
        - A_1_RENT_A_CAR_3412
        - ACCOUNTING_8931
        - ACTION_RENT_A_CAR_3354
        - ADAMS_MARK_3681
        - ADRIA_3064
        - ADVANTAGE_RENT_A_CAR_3441
        - ADVERTISING_7311
        - AER_LINGUS_3043
        - AERO_COACH_AVIATION_3287
        - AERO_PERU_3285
        - AERO_SERVICO_CARABOBO_3263
        - AERO_VIRGIN_ISLANDS_3284
        - AEROLINEAS_ARGENTINAS_3030
        - AEROLINEAS_NICARAGUENSIS_3286
        - AEROMEXICO_3076
        - AFFILIATED_AUTO_RENTAL_3351
        - AGENCY_RENT_A_CAR_3364
        - AGRICULTURAL_COOPERATIVES_0763
        - AIR_AFRIQUE_3083
        - AIR_ALGERIE_3021
        - AIR_BRITISH_COLUMBIA_3071
        - AIR_CANADA_3009
        - AIR_CHINA_3261
        - AIR_CONDITIONER_7623
        - AIR_CONDITIONING_CONTRACTOR_1711
        - AIR_COURIER_4215
        - AIR_DJIBOUTI_3282
        - AIR_FRANCE_3007
        - AIR_INDIA_3020
        - AIR_JAMAICA_3280
        - AIR_LANKA_3044
        - AIR_LITTORAL_3148
        - AIR_MAURITIUS_3298
        - AIR_NEW_ZEALAND_3025
        - AIR_PANAMA_3267
        - AIR_SEYCHELLES_3266
        - AIR_ZAIRE_3151
        - AIR_ZIMBABWE_3096
        - AIRCRAFT_EQUIPMENT_5599
        - AIRINTER_3065
        - AIRPORT_TERMINALS_4582
        - AIRPORTS_4582
        - AIRWAYS_RENT_A_CAR_3361
        - AJAX_RENT_A_CAR_3376
        - ALAMO_RENT_A_CAR_3387
        - ALASKA_3256
        - ALCOHOL_STORE_5921
        - ALIMONY_9211
        - ALL_NIPPON_3161
        - ALLSTATE_RENT_A_CAR_3421
        - ALM_ANTILEAN_3252
        - ALOHA_3251
        - ALTERATIONS_5697
        - ALTRA_RENT_A_CAR_3362
        - AMBULANCE_SERVICES_4119
        - AMELIA_ISLAND_PLANTATION_3754
        - AMERICA_WEST_3253
        - AMERICAN_3001
        - AMERICAN_INT_RENT_A_CAR_3352
        - AMERICAN_TRANS_AIR_3259
        - AMERICANA_3517
        - AMERISUITES_3514
        - AMFAC_3536
        - AMUSEMENT_PARKS_7996
        - ANA_3537
        - ANSA_INTERNATIONAL_RENT_A_CAR_3420
        - ANSETT_3033
        - ANTIQUE_REPAIR_5932
        - ANTIQUE_REPRODUCTION_5937
        - ANTIQUE_RESTORATION_5932
        - ANTIQUES_5932
        - APPLIANCE_5722
        - AQUARIUMS_7998
        - ARABELLA_3511
        - ARCADE_3670
        - ARCADE_7994
        - ARCHITECTS_8911
        - ARCTIA_3671
        - ART_DEALERS_5971
        - ART_SUPPLIES_5970
        - ARTIFICIAL_LIMBS_5976
        - ASIANA_3098
        - ATHLETIC_FIELDS_7941
        - ATTORNEYS_8111
        - AUBERGE_DES_GOVERNMENTS_3549
        - AUDITING_8931
        - AUSTRIAN_3051
        - AUSTRIAN_AIR_SERVICE_3243
        - AUTO_BODY_7531
        - AUTO_CASH_FI_6011
        - AUTO_DEALER_USED_5521
        - AUTO_HOST_CAR_RENTAL_3400
        - AUTOHANSA_RENT_A_CAR_3436
        - AUTOMATE_RENT_A_CAR_3425
        - AUTOMATED_FUEL_DISPENSER_5542
        - AUTOMOBILE_ASSOCIATION_8675
        - AUTOMOTIVE_PAINT_7535
        - AUTOMOTIVE_SERVICE_7538
        - AUTOMOTIVE_SERVICE_SHOPS_7538
        - AVCAR_RENT_A_CAR_3423
        - AVENSA_3242
        - AVIANCA_3039
        - AVIATION_FUEL_5983
        - AVIS_RENT_A_CAR_3389
        - AVON_RENT_A_CAR_3427
        - AWNINGS_5998
        - BAHAMAS_AIR_3240
        - BAIL_PAYMENTS_9223
        - BAKERIES_5462
        - BALLYS_3728
        - BANDS_7929
        - BAR_HARBOUR_3239
        - BARBER_SHOP_7230
        - BARS_5813
        - BEAU_RIVAGE_3764
        - BEAUTY_SALON_7230
        - BEAUTY_SPA_7298
        - BEER_5921
        - BELLAGIO_3765
        - BEMIDJI_3238
        - BEST_WESTERN_3502
        - BICYCLE_SALES_5940
        - BICYCLE_SERVICE_5940
        - BIG_BOX_HOME_SUPPLIERS_5200
        - BILLIARD_AND_POOL_HALL_7932
        - BILTMORE_3743
        - BINIONS_HORSESHOE_CLUB_3620
        - BLINDS_5714
        - BLUEPRINTING_7338
        - BOAT_DEALER_5551
        - BOAT_LEASES_4457
        - BOAT_RENTALS_4457
        - BOCA_RATON_RESORT_3733
        - BOND_PAYMENTS_9223
        - BOOKKEEPING_8931
        - BOOKS_5192
        - BOOKS_5942
        - BOTANICAL_GARDENS_7991
        - BOWLING_ALLEYS_7933
        - BOYS_CLOTHING_5611
        - BRADBURY_SUITES_3683
        - BRIDGE_TOLLS_4784
        - BRITISH_AIRWAYS_3005
        - BRITISH_MIDLAND_3111
        - BROADMOOR_3727
        - BROCKWAY_3235
        - BROKERS_6211
        - BROOKS_RENT_A_CAR_3353
        - BUDGET_HOST_INNS_3684
        - BUDGET_RENT_A_CAR_3366
        - BUDGETEL_INNS_3685
        - BUFFALO_BILLS_3712
        - BUILDING_SUPPLIES_5211
        - BUS_LINES_4131
        - BUSES_LOCAL_4111
        - BUSINESS_SCHOOLS_8244
        - BUSINESS_SERVICES_OTHER_7399
        - BUTCHERS_5422
        - BUYING_SERVICES_7278
        - BWIA_INTERNATIONAL_3234
        - CABLE_SERVICES_4899
        - CABS_4121
        - CAESARS_3771
        - CALIFORNIA_3582
        - CAMERA_5946
        - CAMP_GROUNDS_7033
        - CAMPANILE_3672
        - CAMPER_DEALER_5561
        - CANADIAN_3171
        - CANDY_5441
        - CANYON_RANCH_3757
        - CAPTITOL_3233
        - CAR_ACCESSORIES_5533
        - CAR_AUTO_BODY_7531
        - CAR_PAINTING_7535
        - CAR_PARTS_5533
        - CAR_SERVICE_7538
        - CAR_SUPPLIES_5013
        - CAR_WASHERS_7542
        - CAREFREE_RESORTS_3744
        - CAREY_RENT_A_CAR_3428
        - CARLTON_3716
        - CARNIVAL_3086
        - CARNIVALS_7996
        - CARPENTER_1750
        - CARPET_5713
        - CARPET_CLEANING_7217
        - CATALOGUE_5964
        - CATALOGUE_AND_RETAIL_5965
        - CATERERS_5811
        - CATHAY_PACIFIC_3099
        - CHARITABLE_ORG_8398
        - CHATEAU_ELAN_RESORT_3763
        - CHEMICALS_OTHER_5169
        - CHILD_CARE_8351
        - CHILD_SUPPORT_9211
        - CHILDRENS_CLOTHING_5641
        - CHINA_3078
        - CHINA_EASTERN_3206
        - CHIROPODISTS_8049
        - CHIROPRACTORS_8041
        - CIGA_3544
        - CIGAR_STAND_5993
        - CIGARS_5993
        - CIRCUS_CIRCUS_3662
        - CIRCUSES_7996
        - CITE_RENT_A_CAR_3437
        - CITY_LODGE_3717
        - CIVIC_ASSOCIATIONS_8641
        - CLARION_3687
        - CLEANING_AND_MAINTENANCE_7349
        - CLEANING_PRODUCTS_2842
        - CLIMATE_DE_FRANCE_3677
        - CLOCK_5944
        - CLOCK_7631
        - CLUB_MED_3742
        - COAL_DEALER_5983
        - COAST_3552
        - COIN_5972
        - COLLECTION_AGENCIES_7322
        - COLLEGES_8220
        - COLORADO_BELLE_3736
        - COMAIR_3223
        - COMFORT_INNS_3562
        - COMMAND_3222
        - COMMERCIAL_CLOTHING_5137
        - COMMERCIAL_CONTRACTOR_1520
        - COMMERCIAL_EQUIPMENT_OTHER_5046
        - COMMERCIAL_FOOTWEAR_5139
        - COMMERCIAL_FURNITURE_5021
        - COMMERCIAL_LAUNDRY_7211
        - COMMERCIAL_PHOTOGRAPHER_7333
        - COMMERCIAL_SPORTS_7941
        - COMPANIA_FAUCETT_3220
        - COMPANIA_PANEMENA_3219
        - COMPRI_3688
        - COMPUTER_EQUIPMENT_5045
        - COMPUTER_INFORMATION_SERVICES_4816
        - COMPUTER_NETWORK_SERVICES_4816
        - COMPUTER_PROGRAMMING_7372
        - COMPUTER_SERVICES_7372
        - COMPUTER_SERVICES_OTHER_7379
        - COMPUTER_SOFTWARE_5045
        - COMPUTER_SOFTWARE_5734
        - CONCORDE_3538
        - CONCRETE_WORK_1771
        - CONFECTIONERY_5441
        - CONSORT_3689
        - CONSTRUCTION_MATERIALS_OTHER_5039
        - CONSULTING_SERVICES_7392
        - CONTINENTAL_3061
        - CONTRACTORS_SPECIAL_TRADE_1799
        - CORNER_STORE_5331
        - CORRESPONDENCE_SCHOOLS_8241
        - COSMETICS_5977
        - COUNTRY_CLUBS_7997
        - COUNTRY_INN_BY_CARLSON_3829
        - COURIER_SERVICES_4215
        - COURT_COSTS_9211
        - COURTYARD_INNS_3690
        - CP_3529
        - CRAFT_SHOWS_7991
        - CRAFT_SUPPLIES_5970
        - CREDIT_REPORTING_AGENCIES_7321
        - CREMATORIUMS_7261
        - CROATIA_3088
        - CROWN_3218
        - CROWNE_PLAZA_3750
        - CRUISE_LINES_4411
        - CRUZEIRO_3046
        - CRYSTAL_5950
        - CSA_3217
        - CUMBERLAND_3216
        - CUMULOS_3678
        - CUNARD_3593
        - CURTAIN_5714
        - CYPRUS_AIR_3292
        - DAIRY_PRODUCTS_5451
        - DAN_3629
        - DAN_AIR_3215
        - DANCE_HALLS_7911
        - DANCE_SCHOOL_7911
        - DANCE_STUDIO_7911
        - DATA_PROCESSING_SERVICES_7372
        - DATING_SERVICE_7273
        - DAY_CARE_CENTERS_8351
        - DAYS_INNS_3510
        - DE_VERA_3648
        - DEALERS_6211
        - DEBT_COUNSELING_7277
        - DELTA_3058
        - DELTA_3581
        - DENTAL_EQUIPMENT_5047
        - DENTAL_LABORATORIES_8071
        - DENTISTS_8021
        - DEPARTMENT_STORE_5311
        - DETECTIVE_AGENCY_7393
        - DIGITAL_APPLICATIONS_5817
        - DIGITAL_GAMES_5816
        - DIGITAL_MEDIA_BOOKS_MOVIES_MUSIC_5815
        - DILLON_INNS_3691
        - DIRECT_MARKETING_5965
        - DISCO_5813
        - DISCOUNT_STORE_5310
        - DISINFECTORS_7342
        - DISNEYLAND_3780
        - DOCTORS_OTHER_8011
        - DOLLAR_RENT_A_CAR_3390
        - DOLLAR_STORE_5310
        - DOLPHYINARIUMS_7998
        - DOOR_TO_DOOR_SALES_5963
        - DORAL_3587
        - DORNIT_3623
        - DOUBLETREE_3692
        - DOWNTOWER_PASSPORT_3527
        - DRAPERY_5714
        - DRIVE_IN_THEATER_7832
        - DRUG_5912
        - DRUG_SUPPLIES_5122
        - DRURY_INN_3693
        - DRY_CLEANER_7216
        - DRY_GOODS_5131
        - DUNFEY_3525
        - DURABLE_GOODS_OTHER_5099
        - DUTY_FREE_5309
        - DVD_RENTAL_7841
        - ECONO_CAR_RENT_A_CAR_3398
        - ECONOLODGES_3644
        - ECONOMY_INNS_3694
        - ECUATORIANA_3293
        - EGYPTAIR_3037
        - EL_AL_3032
        - ELDORADO_3669
        - ELECTRIC_CHARGING_STATION_5552
        - ELECTRIC_UTILITY_4900
        - ELECTRICAL_7629
        - ELECTRICAL_CONTRACTORS_1731
        - ELECTRICAL_PARTS_EQUIPMENT_5065
        - ELECTRONIC_7622
        - ELECTRONICS_5732
        - ELEMENTARY_SCHOOLS_8211
        - EMBASSY_3652
        - EMBASSY_SUITES_3695
        - EMIRATES_3026
        - ENGINEERS_8911
        - ENTERPRISE_RENT_A_CAR_3405
        - EQUESTRIAN_5655
        - ESCORT_SERVICE_7273
        - ETHIOPIAN_3294
        - EUROPE_BY_CAR_3391
        - EUROPE_CAR_3381
        - EVA_3084
        - EXCALIBUR_3628
        - EXCEL_INN_3696
        - EXPOSITIONS_7991
        - EXTERMINATORS_7342
        - FABRIC_5949
        - FAIRFIELD_3697
        - FAIRFIELD_INN_3715
        - FAIRMONT_3590
        - FAMILY_CLOTHING_5651
        - FAMILY_LAUNDRY_7211
        - FARM_EQUIPMENT_5599
        - FAST_FOOD_RESTAURANT_5814
        - FAX_PACKAGES_4814
        - FERRIES_4111
        - FI_AUTO_CASH_6011
        - FI_MANUAL_CASH_6010
        - FILM_DEVELOPING_7395
        - FINES_9222
        - FINNAIR_3042
        - FIREPLACE_5718
        - FIREPLACE_ACCESSORIES_5718
        - FLAG_INN_3664
        - FLOOR_COVERING_5713
        - FLORIST_5992
        - FLORIST_SUPPLIES_5193
        - FLOWER_SUPPLIES_5193
        - FLOWERS_5193
        - FLYING_FIELDS_4582
        - FOOD_STORES_OTHER_5499
        - FOOTWEAR_COMMERCIAL_5139
        - FORMAL_WEAR_7296
        - FORTE_3505
        - FORTUNE_TELLERS_7996
        - FORUM_3570
        - FOUR_POINTS_3778
        - FOUR_SEASONS_3543
        - FRATERNAL_ASSOCIATIONS_8641
        - FREEDOM_3204
        - FREEZER_5422
        - FREIGHT_CARRIERS_4214
        - FREIGHT_COURIER_4215
        - FREMONT_3766
        - FRIENDSHIP_INNS_3507
        - FRONTIER_3132
        - FUEL_DEALERS_5983
        - FUNERAL_HOMES_7261
        - FUR_STORE_5681
        - FURNITURE_7641
        - FURNITURE_EQUIPMENT_5712
        - FURNITURE_LEASING_7394
        - FURNITURE_OFFICE_COMMERCIAL_5021
        - FURNITURE_REFINISHING_7641
        - FURNITURE_RENTAL_7394
        - FURRIER_5681
        - GALLERY_5971
        - GAMBLING_TRANSACTIONS_7995
        - GAME_5945
        - GARAGES_7523
        - GARDENS_5261
        - GARMENT_CLEANING_7210
        - GARUDA_3103
        - GAS_STATION_AUTOMATED_5542
        - GAS_STATIONS_5541
        - GAS_UTILITY_4900
        - GENERAL_CONTRACTOR_1520
        - GENERAL_RENT_A_CAR_3409
        - GIFT_CARD_5947
        - GLASS_5231
        - GLASSES_8043
        - GLASSWARE_5950
        - GODFREY_RENT_A_CAR_3414
        - GOLDEN_NUGGET_3561
        - GOLDEN_PACIFIC_3203
        - GOLDEN_TULIP_3506
        - GOLF_COURSES_PUBLIC_7992
        - GOVERNMENTAL_SERVICES_OTHER_9399
        - GRAPHIC_ART_7333
        - GREENBRIAN_RESORT_3753
        - GROCERY_STORE_5411
        - GROUND_COURIER_4215
        - GULF_3040
        - GUYANA_3200
        - HALEKULANI_3760
        - HAMPTON_INN_3665
        - HARDWARE_EQUIPMENT_5072
        - HARDWARE_STORE_5251
        - HARLEY_3698
        - HARRAHS_3731
        - HARVEY_BRISTOL_3734
        - HAT_CLEANING_7251
        - HAVASU_3197
        - HAWAIIAN_3196
        - HEALTH_SPA_7298
        - HEARING_AID_SUPPLIES_5975
        - HEARING_AIDS_5975
        - HEATING_CONTRACTOR_1711
        - HEATING_EQUIPMENT_5074
        - HELMSLEY_3588
        - HERTZ_RENT_A_CAR_3357
        - HILTON_3504
        - HILTON_INTERNATIONAL_3535
        - HOBBY_SHOP_5945
        - HOLIDAY_INNS_3501
        - HOLIDAY_RENT_A_CAR_3368
        - HOME_FURNISHINGS_5712
        - HOME_FURNISHINGS_OTHER_5719
        - HOME_SUPPLY_WAREHOUSE_5200
        - HORTICULTURAL_SERVICES_0780
        - HOSPITAL_EQUIPMENT_5047
        - HOSPITALITY_INNS_3595
        - HOSPITALS_8062
        - HOTEL_IBIS_3533
        - HOTEL_MELIA_3548
        - HOTEL_MERCURE_3579
        - HOTEL_OKURA_3541
        - HOTEL_UNIVERSAL_3625
        - HOTELES_EL_PRESIDENTE_3663
        - HOUSEHOLD_APPLIANCES_5722
        - HOWARD_JOHNSON_INN_3638
        - HUDSON_HOTEL_3602
        - HUNGAR_3585
        - HUSA_3647
        - HYATT_3640
        - IBERTOL_3540
        - IBUSZ_3673
        - ICELANDIAR_3050
        - IMPERIAL_LONDON_3651
        - INBOUND_TELEMARKETING_5967
        - INDIAN_3193
        - INDUSTRIAL_SUPPLIES_OTHER_5085
        - INFANTS_CLOTHING_5641
        - INFORMATION_SERVICES_7375
        - INNKEEPERS_3597
        - INSTRUMENT_5733
        - INSURANCE_5960
        - INSURANCE_PREMIUMS_6300
        - INSURANCE_RENT_A_CAR_3429
        - INSURANCE_UNDERWRITING_6300
        - INTEGRATED_SYSTEMS_DESIGN_7372
        - INTERCONTINENTAL_3512
        - INTERENT_RENT_A_CAR_3438
        - INTERHOTEL_CLERK_3675
        - INTERNOR_HOTELS_3724
        - ISLAND_3191
        - ITA_AIRWAYS_3013
        - JANITORIAL_SERVICES_7349
        - JAPAN_3006
        - JEWELLERY_5094
        - JEWELLERY_5944
        - JEWELLERY_7631
        - JOHN_ASCUAGA;S_NUGGET_3729
        - JOLLY_3558
        - JOURNEYS_END_MOTELS_3563
        - JUGOSLAV_3190
        - KAHALA_MANDARIN_ORIENTAL_3758
        - KAROS_3718
        - KEMWELL_GROUP_RENT_A_CAR_3394
        - KENYA_3295
        - KLM_3010
        - KM_MALTA_AIRLINES_3028
        - KNIGHTS_INN_3660
        - KOREAN_3082
        - KUWAIT_3038
        - LA_MANSION_DEL_RIO_3701
        - LA_QUINTA_MOTOR_INNS_3516
        - LAB_BOLIVIA_3055
        - LABORATORIES_NON_MEDICAL_8734
        - LABORATORY_EQUIPMENT_5047
        - LACSA_COSTA_RICA_3187
        - LADBROKE_3568
        - LADECO_3054
        - LADY_LUCK_3624
        - LANCHILE_3052
        - LANDSCAPING_SERVICES_0780
        - LAP_3186
        - LAUNDROMATS_7211
        - LAUNDRY_CLEANING_7210
        - LAUNDRY_FAMILY_7211
        - LAV_LINEA_VENEZOLANA_3185
        - LAWN_AND_GARDEN_5261
        - LEASING_EQUIPMENT_7394
        - LEATHER_GOODS_5948
        - LEGAL_SERVICES_8111
        - LIAT_3184
        - LIMOUSINES_4121
        - LIQUOUR_5921
        - LOCAL_TELEPHONE_ACCESS_4814
        - LOCAL_TRANSPORTATION_4111
        - LOEWS_3654
        - LONG_DISTANCE_TELEPHONE_PACKAGES_4814
        - LOT_3182
        - LOTTERY_9406
        - LUFTHANSA_3008
        - LUGGAGE_5948
        - LUMBER_5211
        - LUXAIR_3146
        - LUXOR_3667
        - MAIN_STREET_STATION_3767
        - MAJOR_RENT_A_CAR_3430
        - MALAYSIAN_3100
        - MALEV_3181
        - MANAGEMENT_SERVICES_7392
        - MANDALAY_BAY_RESORT_3777
        - MANDARIN_ORIENTAL_3577
        - MANUAL_CASH_FI_6010
        - MARINAS_4468
        - MARINE_SERVICE_4468
        - MARINE_SUPPLIES_4468
        - MARITIM_3668
        - MARKETPLACES_5262
        - MARRIAGE_COUNSELING_7277
        - MARRIOTT_3509
        - MASONRY_1740
        - MASSAGE_PARLORS_7297
        - MASTERS_ECONOMY_INNS_3735
        - MEAT_FREEZERS_5422
        - MEAT_LOCKER_PROVISIONERS_5422
        - MEAT_MARKETS_5422
        - MEDICAL_EQUIPMENT_5047
        - MEDICAL_LABORATORIES_8071
        - MEDICAL_OTHER_8099
        - MEMBER_MERCHANDISE_6012
        - MEMBERSHIP_CLUBS_7997
        - MEMBERSHIP_OTHER_8699
        - MEN_AND_BOYS_CLOTHING_5611
        - MEN_AND_WOMENS_CLOTHING_5691
        - MENDING_5697
        - MERIDIAN_3520
        - MERLIN_3622
        - MESA_3178
        - METAL_SERVICES_CENTERS_5051
        - METAL_SERVICES_OFFICES_5051
        - METRO_3087
        - METROFLIGHT_3176
        - METROPOLE_3661
        - MEXICANA_3023
        - MGM_GRAND_3730
        - MICROFILM_EQUIPMENT_5044
        - MIDDLE_EAST_3175
        - MIDWAY_MOTOR_LODGE_3699
        - MIDWEST_EXPRESS_3085
        - MILLENNIUM_BROADWAY_3741
        - MILLEVILLE_RENT_A_CAR_3439
        - MIRGAGE_3551
        - MISC_ENTERTAINERS_7929
        - MIYAKO_3572
        - MOBILE_HOME_DEALER_5271
        - MONTE_CARLO_3676
        - MOTEL_6_3700
        - MOTION_PICTURE_PRODUCTION_7829
        - MOTION_PICTURE_THEATRES_7832
        - MOTOR_HOME_DEALER_5592
        - MOTOR_HOME_RENTAL_7519
        - MOTOR_VEHICLE_SUPPLIES_5013
        - MOTORCYCLE_DEALER_5571
        - MOTORCYCLE_SHOP_5571
        - MOUNT_CHARLOTTE_THISTLE_3639
        - MOUNT_COOK_3170
        - MOVENPICK_3612
        - MOVERS_TRUCKS_4214
        - MOVIE_PRODUCTION_7829
        - MOVIE_THEATER_7832
        - MUSEUMS_7991
        - MUSIC_5733
        - NANNIES_8351
        - NATIONAIR_3172
        - NATIONAL_CAR_RENTAL_3393
        - NEEDLEWORK_5949
        - NEVELE_GRAND_3776
        - NEW_AND_USED_TRUCK_DEALER_5511
        - NEW_OTANI_3658
        - NEW_PARTS_CARS_5013
        - NEW_YORK_NEW_YORK_3774
        - NEW_YORK_HELICOPTER_3165
        - NEWS_DEALERS_5994
        - NEWS_STANDS_5994
        - NEWSPAPERS_5192
        - NIGERIA_3045
        - NIGHTCLUB_5813
        - NOAHS_3603
        - NONDURABLE_GOODS_OTHER_5199
        - NON_FIN_INSTITUTION_(STORED_CARD_PURCHASE/LOAD)_6540
        - NON_MEDICAL_LABORATORIES_8734
        - NORONTAIR_3164
        - NORTHWEST_3060
        - NOVELTY_GOODS_5947
        - NOVOTEL_3642
        - NUMISMATIC_SUPPLIES_5972
        - NURSERY_5261
        - NURSERY_SCHOOLS_8351
        - NURSERY_STOCK_5193
        - NURSING_HOME_8050
        - NUTS_5441
        - OBEROI_3657
        - OFFICE_EQUIPMENT_5044
        - OFFICE_FURNITURE_5021
        - OFFICE_SUPPLIES_5111
        - OIL_DEALER_5983
        - OLYMPIC_3031
        - OMNI_3592
        - OPHTHALMIC_EQUIPMENT_5047
        - OPHTHALMOLOGISTS_8042
        - OPRYLAND_3732
        - OPTICAL_GOODS_8043
        - OPTICIANS_8043
        - OPTOMETRISTS_8042
        - ORCHESTRAS_7929
        - ORTHODONTISTS_8021
        - ORTHOPEDIC_GOODS_5976
        - OSTEOPATHS_8031
        - OTHER_AIRLINE_4511
        - OTHER_BUSINESS_SERVICES_7399
        - OTHER_CLOTHING_5699
        - OTHER_DIRECT_MARKETING_5969
        - OTHER_EQUIPMENT_5599
        - OTHER_HOTELS_7011
        - OTHER_PERSONAL_SERVICES_7299
        - OTHER_RENTAL_CAR_7512
        - OUTBOUND_TELEMARKETING_5966
        - PAINT_5231
        - PAINT_SUPPLIES_5198
        - PAKISTAN_3024
        - PAN_AMERICAN_3002
        - PANNONI_3599
        - PARK_INNS_INTERNATIONAL_3553
        - PARK_PLAZA_HOTEL_3830
        - PARKING_LOTS_7523
        - PATRICIA_GRAND_RESORTS_3781
        - PAWN_SHOP_5933
        - PAY_TV_SERVICES_4899
        - PAYLESS_CAR_RENTAL_3359
        - PEABODY_3752
        - PENINSULA_3523
        - PENTA_3653
        - PERIODICALS_5192
        - PERSONAL_CARE_FACILITY_8050
        - PERSONAL_COUNSELING_7277
        - PET_FOOD_5995
        - PET_STORE_5995
        - PET_SUPPLIES_5995
        - PETROLEUM_5172
        - PETROLEUM_DEALER_5983
        - PETROLEUM_PRODUCTS_5172
        - PHARMACY_5912
        - PHILATELIC_SUPPLIES_5972
        - PHILIPPINE_3022
        - PHOTO_DEVELOPING_7395
        - PHOTOCOPY_EQUIPMENT_5044
        - PHOTOCOPYING_SERVICES_7338
        - PHOTOGRAPHER_7221
        - PHOTOGRAPHER_COMMERCIAL_7333
        - PHOTOGRAPHIC_STUDIOS_7221
        - PHOTOGRAPHIC_SUPPLIES_5946
        - PHOTOGRAPHY_EQUIPMENT_5044
        - PIANO_5733
        - PIECE_GOODS_5949
        - PIECE_NOTIONS_5131
        - PLASTER_INSTALLATION_1740
        - PLUMBER_CONTRACTOR_1711
        - PLUMBING_EQUIPMENT_5074
        - PODIATRISTS_8049
        - POLISHING_PRODUCTS_2842
        - POLITICAL_ORGANIZATION_8651
        - POOL_HALL_7932
        - POOL_SUPPLIES_5996
        - POSTAL_SERVICES_GOVT_ONLY_9402
        - PRECIOUS_METALS_5094
        - PRECIOUS_STONES_5094
        - PRIMADONNA_3761
        - PRINCE_3526
        - PRINCESS_3584
        - PRINCEVILLE_3154
        - PRINTING_SERVICES_OTHER_2741
        - PRINTING_SUPPLIES_5111
        - PRIVATE_GOLF_CLUBS_7997
        - PROF_SPORTS_CLUB_7941
        - PROFESSIONAL_SCHOOLS_8220
        - PROSTHETICS_5976
        - PROTEA_3719
        - PROTECTIVE_AGENCY_7393
        - PUBLIC_GOLF_COURSES_7992
        - PUBLIC_RELATIONS_7392
        - PUBLIC_WAREHOUSING_4225
        - PUBLISHING_MISCELLANEOUS_2741
        - PULLMAN_INTERNATIONAL_3519
        - QANTAS_3012
        - QATAR_3136
        - QUALIFY_PACIFIC_3713
        - QUALITY_INNS_3508
        - QUASI_CASH_MERCHANT_6051
        - RADIO_SERVICES_4899
        - RADISSON_3649
        - RAILWAY_FREIGHT_4011
        - RAILWAYS_4112
        - RAMADA_INNS_3637
        - RANK_3633
        - RANTASIPI_3674
        - RAZOR_5997
        - RAZOR_SERVICE_5997
        - REAL_ESTATE_AGENTS_6513
        - RECORD_5735
        - RECREATIONAL_CAMP_7032
        - RECREATIONAL_TRAILER_DEALER_5561
        - RECREATIONAL_VEHICLE_RENTAL_7519
        - RED_ROOF_INNS_3650
        - REFRIGERATION_7623
        - REFRIGERATOR_7623
        - REGAL_8_INNS_3550
        - REGENT_INTERNATIONAL_3598
        - RELAX_INNS_3565
        - RELIGIOUS_ITEMS_5973
        - RELIGIOUS_ORGANIZATIONS_8661
        - RENAISSANCE_3530
        - RENO_3262
        - RENTAL_EQUIPMENT_7394
        - RENTAL_TRUCK_7513
        - RENTAL_UNIFORMS_7296
        - RENTAL_TRUCK_AND_UTILITY_TRAILER_7513
        - RENT_A_WRECK_3370
        - REPAIR_SHOPS_OTHER_7699
        - REPLACEMENT_RENT_A_CAR_3431
        - REPRODUCTIONS_7338
        - RESERVE_RENT_A_CAR_3432
        - RESIDENCE_INN_3703
        - RESIDENTIAL_CONTRACTOR_1520
        - RESO_3635
        - RESTAURANTS_5812
        - RETAIL_AND_CATALOGUE_5965
        - REUPHOLSTERER_7641
        - RICA_3723
        - RIDING_APPARELL_5655
        - RIO_HOTELS_3840
        - RIO_SUITES_3726
        - RIVIERA_3737
        - RIYADH_AIR_3169
        - ROAD_TOLLS_4784
        - ROADWAY_INNS_3515
        - ROOFER_1761
        - ROYAL_3542
        - ROYAL_AIR_MAROC_3048
        - ROYAL_DUTCH_AIRLINES_(KLM)_3010
        - ROYCE_3704
        - RUG_5713
        - SABENA_3029
        - SAETA_3229
        - SAHARA_3682
        - SALVAGE_YARDS_5935
        - SAMS_TOWN_3564
        - SAN_JUAN_3145
        - SANDMAN_3573
        - SANDMAN_INN_3705
        - SANDS_RESORT_3775
        - SANITATION_PRODUCTS_2842
        - SANITATION_UTILITY_4900
        - SARA_3656
        - SAROVA_3636
        - SAS_3016
        - SAS_3583
        - SASHA_3231
        - SATELLITE_SERVICES_4899
        - SAUDI_ARABIAN_3014
        - SCANDIC_3655
        - SCENIC_3143
        - SCHOOL_SUPPLIES_5943
        - SCHOOLS_OTHER_8299
        - SEA_AQUARIUMS_7998
        - SEA_PINES_RESORT_3725
        - SEAMSTRESSES_5697
        - SECOND_HAND_5931
        - SECONDARY_SCHOOLS_8211
        - SECRETARIAL_SCHOOLS_8244
        - SECRETARIAL_SUPPORT_7339
        - SECURITIES_6211
        - SECURITY_7393
        - SERVICE_SHOP_CAR_7538
        - SERVICE_STATION_AUTOMATED_5542
        - SEWING_5949
        - SHANGRI_LA_INTERNATIONAL_3545
        - SHEET_METAL_WORK_1761
        - SHEET_MUSIC_5733
        - SHERATON_3505
        - SHILO_INN_3706
        - SHOE_REPAIR_SHOP_7251
        - SHOE_SHINING_7251
        - SHOES_5661
        - SHONEYS_INNS_3707
        - SHOPPING_SERVICES_7278
        - SHOWCASE_RENT_A_CAR_3386
        - SIDER_1761
        - SIERRA_SUITES_3546
        - SILVER_LEGACY_3679
        - SILVER_STAR_3768
        - SILVERWARE_5944
        - SIMMONS_3138
        - SINGAPORE_3075
        - SINGLETON_3137
        - SLEEP_INN_3631
        - SMALL_APPLIANCE_7629
        - SNAPPY_CAR_RENTAL_3360
        - SNOWMOBILE_DEALER_5598
        - SOCIAL_ASSOCIATIONS_8641
        - SOCIAL_SERVICE_8398
        - SOFITEL_3641
        - SOKOS_3586
        - SOL_3518
        - SONESTA_3591
        - SOUTH_AFRICAN_3017
        - SOUTHERN_PACIFIC_3534
        - SOUTHERN_SUN_3720
        - SOUTHWEST_3066
        - SOUVENIR_5947
        - SPANAIR_3097
        - SPECIAL_TRADE_CONTRACTOR_1799
        - SPORTING_CAMP_7032
        - SPORTING_GOODS_5941
        - SPORTS_COMMERCIAL_7941
        - SPORTS_PROMOTERS_7941
        - SPRINGHILL_SUITES_3770
        - ST_REGIS_3745
        - STAKIS_3666
        - STAMP_5972
        - STARWOOD_RESORTS_3503
        - STATIONARY_5111
        - STATIONARY_5943
        - STEIGENBERGER_3643
        - STENOGRAPHY_7339
        - STONEWORK_1740
        - SUBSCRIPTION_5968
        - SUBWAYS_4111
        - SUDAN_3135
        - SUNBELT_3133
        - SUNWORLD_3130
        - SUPER_8_3709
        - SUPERMARKET_5411
        - SURINAM_3129
        - SURVEYORS_8911
        - SWIMMING_POOLS_5996
        - SWISSAIR_3015
        - SWISSOTEL_3634
        - TACA_INTERNATIONAL_3127
        - TAILORS_5697
        - TALAIR_3126
        - TAME_3221
        - TAN_3125
        - TAP_3035
        - TAROM_3297
        - TAVERN_5813
        - TAX_PAYMENTS_9311
        - TAX_PREPARATION_7276
        - TAXIS_4121
        - TELECOM_EQUIPMENT_4812
        - TELECOM_SVC_4814
        - TELEGRAPH_SERVICES_4821
        - TELEPHONE_EQUIPMENT_4812
        - TELEPHONE_SERVICES_4812
        - TEMPORARY_HELP_7361
        - TENTS_5998
        - THAI_3077
        - THE_RITZ_CARLTON_3710
        - THE_VENETIAL_3773
        - THEATER_TICKET_AGENCIES_7922
        - THEATRICAL_PRODUCERS_7922
        - THRIFT_5931
        - THRIFTY_CAR_RENTAL_3395
        - THUNDERBIRD_3528
        - THY_3047
        - TILDEN_RENT_A_CAR_3396
        - TILE_SETTING_1740
        - TIME_SHARES_7012
        - TIRE_RETREADING_AND_REPAIR_7534
        - TIRE_SHOPS_5532
        - TOKYO_3522
        - TOKYO_INN_3756
        - TOOL_LEASING_7394
        - TOOL_RENTAL_7394
        - TOUPEE_SHOP_5698
        - TOUR_OPERATORS_4722
        - TOURIST_ATTRACTIONS_7991
        - TOWER_3115
        - TOWING_7549
        - TOWNEPLACE_SUITES_3740
        - TOYS_5945
        - TRADE_SCHOOLS_8249
        - TRAILER_PARKS_7033
        - TRAILER_RENTALS_7513
        - TRAINS_LOCAL_4111
        - TRANSAERO_3089
        - TRANSPORTATION_OTHER_4789
        - TRANSWORLD_3004
        - TRAVEL_AGENCIES_4722
        - TRAVEL_RELATED_5962
        - TRAVELODGE_3615
        - TREASURE_ISLAND_3555
        - TROPICAL_RENT_A_CAR_3385
        - TROPICANA_3738
        - TRUCK_DEALER_NEW_AND_USED_5511
        - TRUCK_DEALER_USED_5521
        - TUNIS_3049
        - TYPESETTING_2791
        - U.S._AIR_SHUTLE_3254
        - UGLY_DUCKLING_RENT_A_CAR_3433
        - UNIFORMS_5137
        - UNITED_3000
        - UNIVERSITIES_8220
        - UPHOLSTERY_CLEANING_7217
        - US_AIRWAYS_3063
        - USA_RENT_A_CAR_3434
        - USED_AND_NEW_AUTO_DEALER_5511
        - USED_AND_NEW_TRUCK_DEALER_5511
        - USED_AUTO_DEALER_5521
        - USED_CLOTHING_5931
        - USED_TRUCK_DEALER_5521
        - UTA_3027
        - UTILITY_TRAILER_DEALER_5561
        - VAGABOND_3575
        - VALLEY_3118
        - VALUE_RENT_A_CAR_3435
        - VANGUARD_3067
        - VARIETY_STORE_5331
        - VARIG_3018
        - VARNISH_SUPPLIES_5198
        - VASP_3036
        - VENEZOLANA_INTERNATIONAL_3117
        - VENTURE_INNS_3574
        - VETERINARY_SERVICES_0742
        - VIDEO_GAME_ARCADES_7994
        - VIDEO_GAME_SUPPLIER_7993
        - VIDEO_GAME_SUPPLIES_7993
        - VIDEO_RENTAL_7841
        - VIDEO_TAPE_PRODUCTION_7829
        - VIRGIN_ATLANTIC_3144
        - VIRGIN_RIVER_3708
        - VOCATIONAL_SCHOOLS_8249
        - W_HOTELS_3779
        - WALDORF_3831
        - WALLPAPER_5231
        - WAREHOUSES_4225
        - WATCH_5944
        - WATCH_7631
        - WATCHES_5094
        - WATER_UTILITY_4900
        - WELCOMGROUP_3524
        - WELDING_7692
        - WELLESLEY_INNS_3748
        - WESTIN_3513
        - WHISKEY_PETES_3762
        - WHOLESALE_CLUBS_5300
        - WIDEROES_3299
        - WIG_SHOP_5698
        - WINDOW_COVERINGS_5714
        - WINDOW_UPHOLSTERY_5714
        - WINDWARD_ISLAND_3112
        - WINE_5921
        - WINERIES_7991
        - WINGS_3110
        - WOMEN_AND_MENS_CLOTHING_5691
        - WOMENS_ACCESSORIES_5631
        - WOMENS_READY_TO_WEAR_5621
        - WOMENS_SPECIALTY_SHOP_5631
        - WOOD_DEALER_5983
        - WOODSIDE_3739
        - WRAPPING_PAPER_5111
        - WRECKERS_5935
        - ZABO_3094
        - ZOOS_7998
    BusinessDetails:
      type: object
      description: An object containing key information about the business associated with the account or transaction.
      required:
        - merchantCategoryCode
        - isSeasonalMerchant
        - directSellingTransactionVolume
        - motoTransactionVolume
        - ecommerceTransactionVolume
      properties:
        merchantCategoryCode:
          $ref: '#/components/schemas/MerchantCategoryCode'
        averageTicketSize:
          type: integer
          description: A numeric value representing the average transaction amount for the business.
          format: int32
        isSeasonalMerchant:
          type: boolean
          description: A boolean value indicating whether the business operates seasonally.
        maximumTransactionVolume:
          type: integer
          description: A numeric value that represents the highest expected transaction volume.
          format: int32
        directSellingTransactionVolume:
          type: integer
          description: A numeric value that represents the total transaction volume generated from direct sales by the business.
          format: int32
        motoTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through mail order / telephone order.
          format: int32
        ecommerceTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through online sales via e-commerce.
          format: int32
        businessUrl:
          type: string
          description: The official website URL of the business.
          nullable: true
          format: uri
          maxLength: 255
          example: www.abc.com
        serviceProvider:
          type: string
          description: The name or identifier of the service provider associated to the business.
          nullable: true
          maxLength: 255
          example: moneris.com
        serviceDeliverToCanadaAvailable:
          type: boolean
          description: A boolean value indicating whether the business is available for delivery to Canada.
        serviceDeliverToUSAvailable:
          type: boolean
          description: A boolean value indicating whether the business is available for delivery to US.
        creditTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through credit-based payments.
          format: int32
        masterCardTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through MasterCard payments.
          format: int32
        visaTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through Visa payments.
          format: int32
        visaDebitTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through Visa Debit payments.
          format: int32
          example: 42
        amexTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through American Express payments.
          format: int32
          example: 1000
        interacTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through Interac payments.
          format: int32
          example: 1000
        masterCardDebitTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through MasterCard Debit payments.
          format: int32
          example: 1000
        unionPayTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through UnionPay payments.
          format: int32
          example: 1000
        discoverTransactionVolume:
          type: integer
          description: A numeric value representing the total transaction volume generated through Discover payments.
          format: int32
          example: 1000
        category:
          type: string
          description: The category of the business.
          nullable: true
          maxLength: 255
          example: Restaurants
          enum:
            - WHOLESALERS_MANUFACTURERS
            - AUTOMOBILES_AND_VEHICLES
            - BUSINESS_SERVICES
            - PROFES_SERVICES_AND_MEMBERSHIPS
            - RETAILER
            - MAIL_ORDER_TELEPHONE_ORDER_PROVIDERS
            - HOTELS_AND_MOTELS
            - AIRLINES
            - GOVERNMENT_SERVICES
            - ONE
            - PERS_SERVICE_PROVIDERS
            - RESTAURANTS
            - AUTOMOBILE_VEHICLE_RENTAL
            - REPAIR_SERVICES
            - CONTRACTED_SERVICES
            - TRANSPORTATION
            - UTILITIES
            - RETAILERS
            - AMUSEMENT_AND_ENTERTAINMENT
            - UNDEFINED
            - SERVICE_PROVIDERS
        subCategory:
          $ref: '#/components/schemas/BusinessSubCategory'
        offeredProductsAndServices:
          type: string
          description: The type of products and services offered by the business.
          nullable: true
          maxLength: 255
          example: food
        riskLevel:
          type: string
          description: The risk level associated with the business.
          nullable: true
          maxLength: 1
          example: L
    address:
      type: object
      description: |
        The postal address including street, town/city, province, and postal code.
        Optionally an unit number can be provided.
      properties:
        unitNumber:
          nullable: true
          type: string
          description: Unit number
          minLength: 1
          maxLength: 19
          example: 123A
        streetNumber:
          nullable: true
          type: string
          description: Street number
          minLength: 1
          maxLength: 19
          example: '3300'
        streetName:
          nullable: true
          type: string
          description: Street name
          minLength: 1
          maxLength: 100
          example: Bloor
        city:
          nullable: true
          type: string
          description: |
            Identifies the city.
          minLength: 1
          maxLength: 50
          example: Toronto
        province:
          nullable: true
          type: string
          description: 'Province or state ISO 3166-2 code '
          minLength: 1
          maxLength: 3
          format: iso-3166-2
          example: 'ON'
        postalCode:
          nullable: true
          type: string
          description: Postal or zip code
          minLength: 1
          maxLength: 30
          example: M8X 2X2
        country:
          nullable: true
          type: string
          description: |
            Provides the two letter country code according the ISO 3166-1 alpha-2 standard. 
            For a complete list of country codes, visit: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
          minLength: 2
          maxLength: 2
          example: CA
          format: iso-3166
      example:
        unitNumber: 123A
        streetNumber: '3300'
        streetName: Bloor Street West
        city: Toronto
        province: 'ON'
        postalCode: M8X 2X2
        country: CA
    MarketSegment:
      type: string
      description: Identifies the specific customer or business segment targeted by a product or service.
      nullable: true
      maxLength: 50
      enum:
        - PAYROC
        - ADVANCE_IT
        - ATB
        - ATB_8760
        - AYDEN
        - BRAINTREE
        - CYDCOR
        - DIRECT_CASH
        - INTUIT
        - MCA
        - OPTIMAL
        - PAYSAFE_RETAIL_RESELLER
        - PROTOCOL
        - SAGE
        - SONA
        - SOFT_TECH
        - TILL_PAYMENTS
        - UEAT
        - CLEVERPAYS
        - PAYLITE
        - ILIXIUM
        - LOYALTYSENSE
        - POWERPAYMENTS
        - PAYMENTEXPERTS
        - INTERNATIONAL_PAYMENT_SOLUTIONS
        - PAYOLOGY
        - NATIONALPAYMENTS
    MerchantDetails:
      type: object
      description: An object that contains key information about the merchant associated.
      required:
        - contactInformation
        - merchantInformation
        - locationAddress
      properties:
        contactInformation:
          type: object
          description: An object containing all the contact details.
          required:
            - firstName
            - lastName
            - phone
          properties:
            firstName:
              type: string
              description: The first name of the merchant.
              example: Louis
              maxLength: 30
            lastName:
              type: string
              description: the family name or surname of the merchant.
              example: Doe
              maxLength: 30
            phone:
              $ref: '#/components/schemas/phoneNumber'
        merchantInformation:
          type: object
          description: An object containing all information about the merchant.
          required:
            - merchantId
            - language
            - legalName
            - operatingAsName
            - cardHolderName
            - yearsOfOwnership
            - monthsOfOwnership
            - customerServicePhoneNumber
            - email
          properties:
            merchantId:
              $ref: '#/components/schemas/merchantId'
            language:
              type: string
              description: The preferred language of the merchant.
              format: iso-3166
              enum:
                - EN
                - FR
              example: EN
            legalName:
              type: string
              description: The registered name of the merchant.
              maxLength: 60
              example: Pizza 2 Go
            operatingAsName:
              type: string
              description: The trade name under which the merchant operates.
              maxLength: 30
              example: Pizza 2 Go
            cardHolderName:
              type: string
              description: The name of the person to whom the credit or debit card is issued.
              maxLength: 30
              example: Pizza 2 Go
            yearsOfOwnership:
              type: integer
              description: An integer representing the number of years the merchant has been in ownership.
              format: int32
            monthsOfOwnership:
              type: integer
              description: An integer representing the number of months the merchant has been in ownership.
              format: int32
            customerServicePhoneNumber:
              $ref: '#/components/schemas/phoneNumber'
            email:
              $ref: '#/components/schemas/email'
            merchantType:
              type: string
              description: The category of the merchant's business.
              nullable: true
              enum:
                - NATIONAL
                - IB
        locationAddress:
          $ref: '#/components/schemas/address'
        marketSegment:
          $ref: '#/components/schemas/MarketSegment'
    BusinessActivity:
      type: object
      description: An object containing all details about the business activity.
      required:
        - dropShipping
      properties:
        dropShipping:
          type: boolean
          description: A boolean value indicating whether the business engages in drop shipping as part of its operations.
    SecurityDetails:
      type: object
      description: An object containing all details about the security details.
      required:
        - legalEntity
        - signingOfficers
      properties:
        legalEntity:
          type: object
          title: The legalEntity schema
          description: An explanation about the purpose of this instance.
          required:
            - businessType
          properties:
            businessType:
              type: string
              description: The category of the business.
              enum:
                - SOLE_PROPRIETOR
                - LIMITED_PARTNERSHIP
                - PARTNERSHIP
                - NON_PROFIT
                - NON_FOR_PROFIT
                - PRIVATE_CORPORATION
                - PUBLIC_CORPORATION
                - GOVERNMENT
        signingOfficers:
          type: array
          description: A list of signing officer entities.
          maxItems: 100
          items:
            type: object
            required:
              - creditReportAllowed
              - firstName
              - lastName
              - address
              - dateOfBirth
              - ownershipPercentage
              - title
            properties:
              signingOfficerId:
                type: integer
                format: int64
              creditReportAllowed:
                type: boolean
                description: A boolean value indicating whether the business has authorized the review of its credit report.
              firstName:
                type: string
                description: The first name of the signing officer.
                example: J.
                maxLength: 60
              lastName:
                type: string
                description: The last name of the signing officer.
                example: Doe
                maxLength: 60
              address:
                $ref: '#/components/schemas/address'
              dateOfBirth:
                type: string
                description: The date of birth of the signing officer.
                format: date
                example: '2010-02-21'
              ownershipPercentage:
                type: integer
                description: A numeric value representing the percentage of ownership held by an individual in the business.
                format: int32
                example: 100
              title:
                type: string
                description: The official position of the signing officer within the business.
                maxLength: 60
                enum:
                  - OWNER
                  - PRESIDENT
                  - VICE_PRESIDENT
                  - SECRETARY
                  - TREASURER
                  - DIRECTOR
                  - OTHER
              merchantRiskRate:
                type: string
                description: The level of risk associated with the merchant's business.
                nullable: true
                example: A++
                maxLength: 60
    RiskDetails:
      description: An object containing information related to the risk assessment of a transaction or account.
      required:
        - merchantRiskRate
      properties:
        merchantRiskRate:
          type: string
          description: A score indicating the level of risk associated with the merchant's transactions.
          maxLength: 60
          example: A+
    MerchantPayload:
      type: object
      description: An object containing the merchant payload details.
      required:
        - bankingDetails
        - businessDetails
        - merchantDetails
        - businessActivity
        - securityDetails
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        chainDetails:
          $ref: '#/components/schemas/ChainDetails'
        bankingDetails:
          $ref: '#/components/schemas/BankingDetails'
        pointOfSaleOptions:
          $ref: '#/components/schemas/PointOfSaleOptions'
        businessDetails:
          $ref: '#/components/schemas/BusinessDetails'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        businessActivity:
          $ref: '#/components/schemas/BusinessActivity'
        securityDetails:
          $ref: '#/components/schemas/SecurityDetails'
        riskDetails:
          $ref: '#/components/schemas/RiskDetails'
        createdAt:
          $ref: '#/components/schemas/createdAt'
    MerchantDetailsResponse:
      type: object
      properties:
        businessDetails:
          nullable: true
          type: object
          description: An object containing key information about the business associated with the account or transaction.
          required:
            - merchantCategoryCode
            - isSeasonalMerchant
            - directSellingTransactionVolume
            - motoTransactionVolume
            - ecommerceTransactionVolume
          properties:
            merchantCategoryCode:
              $ref: '#/components/schemas/MerchantCategoryCode'
            averageTicketSize:
              type: integer
              description: A numeric value representing the average transaction amount for the business.
              format: int32
            isSeasonalMerchant:
              type: boolean
              description: A boolean value indicating whether the business operates seasonally.
            maximumTransactionVolume:
              type: integer
              description: A numeric value that represents the highest expected transaction volume.
              format: int32
            directSellingTransactionVolume:
              type: integer
              description: A numeric value that represents the total transaction volume generated from direct sales by the business.
              format: int32
            motoTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through mail order / telephone order.
              format: int32
            ecommerceTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through online sales via e-commerce.
              format: int32
            businessUrl:
              type: string
              description: The official website URL of the business.
              nullable: true
              format: uri
              maxLength: 255
              example: www.abc.com
            serviceProvider:
              type: string
              description: The name or identifier of the service provider associated to the business.
              nullable: true
              maxLength: 255
              example: moneris.com
            serviceDeliverToCanadaAvailable:
              type: boolean
              description: A boolean value indicating whether the business is available for delivery to Canada.
            serviceDeliverToUSAvailable:
              type: boolean
              description: A boolean value indicating whether the business is available for delivery to US.
            creditTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through credit-based payments.
              format: int32
            masterCardTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through MasterCard payments.
              format: int32
            visaTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through Visa payments.
              format: int32
            visaDebitTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through Visa Debit payments.
              format: int32
              example: 42
            amexTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through American Express payments.
              format: int32
              example: 1000
            interacTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through Interac payments.
              format: int32
              example: 1000
            masterCardDebitTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through MasterCard Debit payments.
              format: int32
              example: 1000
            unionPayTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through UnionPay payments.
              format: int32
              example: 1000
            discoverTransactionVolume:
              type: integer
              description: A numeric value representing the total transaction volume generated through Discover payments.
              format: int32
              example: 1000
            category:
              type: string
              description: The category of the business.
              nullable: true
              maxLength: 255
              example: Restaurants
              enum:
                - WHOLESALERS_MANUFACTURERS
                - AUTOMOBILES_AND_VEHICLES
                - BUSINESS_SERVICES
                - PROFES_SERVICES_AND_MEMBERSHIPS
                - RETAILER
                - MAIL_ORDER_TELEPHONE_ORDER_PROVIDERS
                - HOTELS_AND_MOTELS
                - AIRLINES
                - GOVERNMENT_SERVICES
                - ONE
                - PERS_SERVICE_PROVIDERS
                - RESTAURANTS
                - AUTOMOBILE_VEHICLE_RENTAL
                - REPAIR_SERVICES
                - CONTRACTED_SERVICES
                - TRANSPORTATION
                - UTILITIES
                - RETAILERS
                - AMUSEMENT_AND_ENTERTAINMENT
                - UNDEFINED
                - SERVICE_PROVIDERS
            subCategory:
              $ref: '#/components/schemas/BusinessSubCategory'
            offeredProductsAndServices:
              type: string
              description: The type of products and services offered by the business.
              nullable: true
              maxLength: 255
              example: food
            riskLevel:
              type: string
              description: The risk level associated with the business.
              nullable: true
              maxLength: 1
              example: L
        merchantDetails:
          nullable: true
          type: object
          description: An object that contains key information about the merchant associated.
          required:
            - contactInformation
            - merchantInformation
            - locationAddress
          properties:
            contactInformation:
              type: object
              description: An object containing all the contact details.
              required:
                - firstName
                - lastName
                - phone
              properties:
                firstName:
                  type: string
                  description: The first name of the merchant.
                  example: Louis
                  maxLength: 30
                lastName:
                  type: string
                  description: the family name or surname of the merchant.
                  example: Doe
                  maxLength: 30
                phone:
                  $ref: '#/components/schemas/phoneNumber'
            merchantInformation:
              type: object
              description: An object containing all information about the merchant.
              required:
                - merchantId
                - language
                - legalName
                - operatingAsName
                - cardHolderName
                - yearsOfOwnership
                - monthsOfOwnership
                - customerServicePhoneNumber
                - email
              properties:
                merchantId:
                  $ref: '#/components/schemas/merchantId'
                language:
                  type: string
                  description: The preferred language of the merchant.
                  format: iso-3166
                  enum:
                    - EN
                    - FR
                  example: EN
                legalName:
                  type: string
                  description: The registered name of the merchant.
                  maxLength: 60
                  example: Pizza 2 Go
                operatingAsName:
                  type: string
                  description: The trade name under which the merchant operates.
                  maxLength: 30
                  example: Pizza 2 Go
                cardHolderName:
                  type: string
                  description: The name of the person to whom the credit or debit card is issued.
                  maxLength: 30
                  example: Pizza 2 Go
                yearsOfOwnership:
                  type: integer
                  description: An integer representing the number of years the merchant has been in ownership.
                  format: int32
                monthsOfOwnership:
                  type: integer
                  description: An integer representing the number of months the merchant has been in ownership.
                  format: int32
                customerServicePhoneNumber:
                  $ref: '#/components/schemas/phoneNumber'
                email:
                  $ref: '#/components/schemas/email'
                merchantType:
                  type: string
                  description: The category of the merchant's business.
                  nullable: true
                  enum:
                    - NATIONAL
                    - IB
            locationAddress:
              $ref: '#/components/schemas/address'
            marketSegment:
              $ref: '#/components/schemas/MarketSegment'
        businessActivity:
          nullable: true
          type: object
          description: An object containing all details about the business activity.
          required:
            - dropShipping
          properties:
            dropShipping:
              type: boolean
              description: A boolean value indicating whether the business engages in drop shipping as part of its operations.
        securityDetails:
          nullable: true
          type: object
          description: An object containing all details about the security details.
          required:
            - legalEntity
            - signingOfficers
          properties:
            legalEntity:
              type: object
              title: The legalEntity schema
              description: An explanation about the purpose of this instance.
              required:
                - businessType
              properties:
                businessType:
                  type: string
                  description: The category of the business.
                  enum:
                    - SOLE_PROPRIETOR
                    - LIMITED_PARTNERSHIP
                    - PARTNERSHIP
                    - NON_PROFIT
                    - NON_FOR_PROFIT
                    - PRIVATE_CORPORATION
                    - PUBLIC_CORPORATION
                    - GOVERNMENT
            signingOfficers:
              type: array
              description: A list of signing officer entities.
              maxItems: 100
              items:
                type: object
                required:
                  - creditReportAllowed
                  - firstName
                  - lastName
                  - address
                  - dateOfBirth
                  - ownershipPercentage
                  - title
                properties:
                  signingOfficerId:
                    type: integer
                    format: int64
                  creditReportAllowed:
                    type: boolean
                    description: A boolean value indicating whether the business has authorized the review of its credit report.
                  firstName:
                    type: string
                    description: The first name of the signing officer.
                    example: J.
                    maxLength: 60
                  lastName:
                    type: string
                    description: The last name of the signing officer.
                    example: Doe
                    maxLength: 60
                  address:
                    $ref: '#/components/schemas/address'
                  dateOfBirth:
                    type: string
                    description: The date of birth of the signing officer.
                    format: date
                    example: '2010-02-21'
                  ownershipPercentage:
                    type: integer
                    description: A numeric value representing the percentage of ownership held by an individual in the business.
                    format: int32
                    example: 100
                  title:
                    type: string
                    description: The official position of the signing officer within the business.
                    maxLength: 60
                    enum:
                      - OWNER
                      - PRESIDENT
                      - VICE_PRESIDENT
                      - SECRETARY
                      - TREASURER
                      - DIRECTOR
                      - OTHER
                  merchantRiskRate:
                    type: string
                    description: The level of risk associated with the merchant's business.
                    nullable: true
                    example: A++
                    maxLength: 60
        riskDetails:
          nullable: true
          type: object
          description: An object containing information related to the risk assessment of a transaction or account.
          required:
            - merchantRiskRate
          properties:
            merchantRiskRate:
              type: string
              description: A score indicating the level of risk associated with the merchant's transactions.
              maxLength: 60
              example: A+
        pointOfSaleOptions:
          nullable: true
          type: object
          description: An object containing details about the point of sale options available for processing transactions.
          required:
            - settlementOption
          properties:
            settlementOption:
              type: string
              description: The method for settling transactions.
              enum:
                - SYSTEM_CLOSE
                - MERCHANT_CLOSE
            settlementTime:
              type: string
              description: A timestamp indicating the time when a transaction is settled.
              format: time
              example: '18:10:00'
            debitPerTransactionRefundLimit:
              $ref: '#/components/schemas/money'
            dailyRefundLimit:
              $ref: '#/components/schemas/money'
            dailyCancellationLimit:
              $ref: '#/components/schemas/money'
        bankingDetails:
          nullable: true
          type: object
          description: An object that contains the necessary banking information related to the account or transaction.
          required:
            - creditDepositAccount
          properties:
            creditDepositAccount:
              $ref: '#/components/schemas/Bank'
            additionalBankingAccounts:
              type: array
              description: A list of additional banking accounts associated with the merchant.
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Bank'
                  - type: object
                    required:
                      - accountType
                    properties:
                      accountType:
                        type: string
                        enum:
                          - POS_BILLING_ACCOUNT
                          - CHARGEBACK_ACCOUNT
                          - DEBIT_DEPOSIT_ACCOUNT
              maxItems: 10
        chainDetails:
          nullable: true
          type: object
          description: An object containing information related to the chain to which the account belongs.
          properties:
            chainProfile:
              type: object
              description: An object that contains details about the profile of an organization chain.
              nullable: true
              properties:
                chainId:
                  type: string
                  description: A unique identifier assigned to a specific organizational chain.
                  nullable: true
                  minLength: 13
                  maxLength: 13
                  example: '0030400001622'
        createdAt:
          nullable: true
          description: Time at which the object was created
          type: string
          format: date-time
          example: '2019-07-30T06:43:40.252Z'
        modifiedAt:
          nullable: true
          description: Time at which the object was modified
          type: string
          format: date-time
          example: '2019-07-30T06:43:40.252Z'
    Supply:
      type: object
      description: An object containing all details related to a supply.
      required:
        - supplyName
        - unitPrice
      properties:
        supplyName:
          type: string
          description: Indicates the name of the good available for fulfillment or distribution.
          maxLength: 100
          example: 2-PLY Sales Draft Slips (25)
        unitPrice:
          $ref: '#/components/schemas/money'
        quantity:
          type: integer
          description: Specifies the amount of goods currently available for a particular product.
          format: int32
          minimum: 1
          maximum: 100
          example: 1
    MerchantSupply:
      type: object
      required:
        - deviceName
        - supplyType
      properties:
        deviceName:
          type: string
          description: The name of the device.
          nullable: true
        carriers:
          type: array
          description: A list of carrier options available for the device.
          items:
            type: string
          maxItems: 10
        softwareVendors:
          type: array
          description: A list of software vendors associated with the device.
          items:
            type: string
        cardReaderName:
          type: string
          description: The name of the card reader associated with the device.
          nullable: true
        pinpadType:
          type: string
          description: The type of pinpad associated with the device.
          nullable: true
        serviceCode:
          type: string
          description: The service code associated with the device.
          nullable: true
        unitPrice:
          nullable: true
          type: object
          description: |
            Monetary amount. 
            Note: The value must be in cents. Therefore $10.59 must be sent as 1059.
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        supplyType:
          type: string
          description: The type of supply associated with the device.
          nullable: true
        supplies:
          type: array
          items:
            $ref: '#/components/schemas/Supply'
    Pagination:
      type: object
      description: An object containing all pagination details.
      properties:
        self:
          description: Pagination link|cursor pointing to the current page.
          type: string
          format: uri|cursor
          nullable: true
        first:
          description: Pagination link|cursor pointing to the first page.
          type: string
          format: uri|cursor
          nullable: true
        prev:
          description: Pagination link|cursor pointing to the previous page.
          type: string
          format: uri|cursor
          nullable: true
        next:
          description: Pagination link|cursor pointing to the next page.
          type: string
          format: uri|cursor
          nullable: true
        last:
          description: Pagination link|cursor pointing to the last page.
          type: string
          format: uri|cursor
          nullable: true
    MerchantSuppliesResponse:
      type: object
      allOf:
        - type: object
          properties:
            data:
              type: array
              description: A list of supply items associated with the resource
              items:
                $ref: '#/components/schemas/MerchantSupply'
        - $ref: '#/components/schemas/Pagination'
    MerchantOrderId:
      type: integer
      description: A unique identifier assigned by the merchant to track a specific customer order.
      format: int64
      example: 2341123
    OrderStatus:
      type: object
      description: An object containing all the order status details.
      required:
        - status
        - merchantId
        - adjudicationApprovalStatus
      properties:
        merchantOrderId:
          $ref: '#/components/schemas/MerchantOrderId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        status:
          type: string
          description: The current state of the order.
          example: DEPLOYMENT
          enum:
            - APPLICATION_SUBMITTED
            - COMPLETE
            - CREDIT_ADJUDICATION
            - CREDIT_ADJUDICATION_REVIEW
            - CUSTOMER_ENGAGED
            - DECLINE
            - DEPLOYMENT
            - SCHEDULE_POS_INSTALL
        adjudicationApprovalStatus:
          type: string
          description: The status that indicates whether an order has been approved or rejected during adjudication process.
          example: MANUAL
          enum:
            - AUTO
            - MANUAL
            - PENDING_ADJUDICATION
    BulkOrderStatusResponse:
      type: object
      description: An object containing all the details related to the bulk order status response.
      allOf:
        - type: object
          properties:
            data:
              type: array
              description: A list of order status items associated with the resource
              items:
                $ref: '#/components/schemas/OrderStatus'
        - $ref: '#/components/schemas/Pagination'
    Tax:
      type: object
      properties:
        taxName:
          type: string
          description: The name of the tax applied to the fee.
          nullable: true
          enum:
            - GOODS_SERVICES_TAX
            - PROVINCIAL_SALES_TAX
            - HARMONIZED_SALES_TAX
          maxLength: 30
        taxAmount:
          $ref: '#/components/schemas/money'
      required:
        - taxName
        - taxAmount
    Frequency:
      type: string
      description: The intervals for periodic actions of the service.
      nullable: true
      maxLength: 20
      enum:
        - DAILY
        - MONTHLY
        - QUARTERLY
        - ONE_OFF
        - ANNUALLY
    WaivePeriod:
      type: string
      description: Specifies the duration which the fee is waived and not charged to the user.
      nullable: true
      format: period
      example: Waive period in ISO 8601 format (e.g., P1M for one month, P2Y3M for two years and three months)
      maxLength: 20
    Terminal:
      type: object
      description: An object representing a payment terminal device to process transactions.
      required:
        - terminalName
        - software
      properties:
        carrier:
          type: string
          description: The name of the mobile network operator or service provider.
          example: Telus
          maxLength: 255
          nullable: true
        terminalName:
          type: string
          description: The name of the terminal.
          example: Moneris Go
          maxLength: 255
        software:
          type: string
          description: Indicates the software version or platform running on the terminal device.
          maxLength: 255
        pinpad:
          type: string
          description: Specifies the model or type of the PIN pad component integrated with the terminal.
          maxLength: 50
          nullable: true
        unitPrice:
          description: The cost of a single unit of the terminal device.
          nullable: true
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        quantity:
          type: integer
          description: The number of terminal units being purchased or assigned.
          format: int32
          example: 4
        cableType:
          type: string
          description: Indicates the type of the cable included with the terminal device.
          nullable: true
          maxLength: 50
        pinpadCableType:
          type: string
          description: Specifies the type of the cable used to connect the PIN pad to the terminal.
          nullable: true
          maxLength: 50
        waivePeriod:
          $ref: '#/components/schemas/WaivePeriod'
        upgradeTo:
          $ref: '#/components/schemas/Terminal'
        pointOfSaleType:
          type: string
          description: Specifies the type of point of sale terminal being used.
          nullable: true
          maxLength: 50
        transferDeviceReference:
          type: string
          description: Indicates the identifier of the device being transferred as part of the current terminal request.
          nullable: true
          maxLength: 50
        kioskReference:
          type: string
          description: Identifies the specific kiosk associated with the terminal.
          nullable: true
          maxLength: 50
        kioskUnitPrice:
          description: The cost of a single kiosk unit.
          nullable: true
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/amount'
            currency:
              $ref: '#/components/schemas/currency'
          required:
            - amount
            - currency
          example:
            amount: 16000
            currency: CAD
        manufacturer:
          type: string
          description: The name of the company that produces the terminal.
          nullable: true
          maxLength: 50
        installationType:
          type: string
          description: Specifies the method or environment of terminal installation.
          nullable: true
          maxLength: 50
          enum:
            - ONSITE_PREMIUM_INSTALLATION
            - ONSITE_PRO_INSTALLATION
            - ONSITE_STANDARD_INSTALLATION
            - ONSITE
            - MERCHANT_INSTALL
            - PHONE
    ProductDetails:
      type: object
      description: An object containing all details related to a product.
      nullable: true
      properties:
        isSoftPos:
          type: boolean
          description: A boolean flag indicating whether the transaction or device is using a Software Point of Sale solution.
        monerisAdvance:
          type: object
          nullable: true
          properties:
            approvedAmount:
              type: integer
              description: The amount of money that has been approved for a transaction or loan.
              format: int32
              example: 5000
            collectionRate:
              type: integer
              description: The rate at which payments are collected or deducted.
              format: int32
              example: 10
            premium:
              type: integer
              description: The amount of money that is paid for an insurance policy or financial product.
              format: int32
              example: 4
            eligible:
              type: boolean
              description: A boolean flag indicating whether the product is eligible for a specific service or feature.
            fees:
              type: object
              description: An object representing the fees associated with the Moneris Advance product.
              nullable: true
              properties:
                preferredAmount:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                chargeableAmount:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        counterTop:
          type: object
          description: An object representing a physical location where the payment terminals are installed.
          nullable: true
          properties:
            terminals:
              type: array
              description: A list of payment terminals available at the counter.
              items:
                $ref: '#/components/schemas/Terminal'
              maxItems: 5
        wireless:
          type: object
          description: An object containing details about the wireless connectivity product.
          nullable: true
          properties:
            terminals:
              type: array
              description: A list of payment terminals available at the counter.
              items:
                $ref: '#/components/schemas/Terminal'
              maxItems: 21
            unitFees:
              type: object
              description: An object representing the fees associated with the wireless product.
              nullable: true
              properties:
                activationFee:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                goSoftwareFee:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        monerisGateway:
          type: object
          description: An object containing details about the Moneris Gateway product.
          nullable: true
          properties:
            paymentRequest:
              type: boolean
              description: A boolean flag indicating whether a paymentRequest should be initiated as part of the current operation.
            eCommerce:
              type: boolean
              description: A boolean flag indicating whether the product is intended for online environments.
            cardNotPresentConfigurationCode:
              type: string
              description: A configuration code used to identify variable settings for transactions.
              maxLength: 50
            fees:
              type: object
              description: A list of fees associated to Moneris Gateway.
              nullable: true
              properties:
                baseFee:
                  description: The standard fee charged for a product.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                recurringFee:
                  description: A fee that is charged on a regular basis.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                batchProcessingFee:
                  description: Indicates whether fees apply to batch processing services.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                cardPresentDebitFee:
                  description: Represents the fee applied to debit card transactions.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                levelTwoThreeFee:
                  description: A fee associated with level 2 or level 3 processing.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                setupFee:
                  description: A one-time fee charged for the initial configuration and onboarding of the product.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                vaultFee:
                  description: A fee charged for using a secure card vault service.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                riskToolFee:
                  description: A fee associated with the use of fraud prevention and risk managements tools.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                addressVerificationServiceFee:
                  description: A fee charged for using the address verification service.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                verifiedByVisaFee:
                  description: A fee associated with verified by visa.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                vaultOneTimeFee:
                  description: A one-time fee charged for the initial setup or activation or a card vault service.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                vaultPerTransactionFee:
                  description: A fee charged for each transaction that utilizes the stored payment credentials.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                vaultPerClickPerTransactionFee:
                  description: A fee charged for each transaction processed using a tokenized payment method from the vault, initiated by a single click or action.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                interacRegistrationFee:
                  description: A fee associated with registering a merchant or account for Interac services.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                interacFlatFee:
                  description: A flat fee applied to each transaction processed through the Interac network.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                interacRateFee:
                  description: A percentage-based fee applied to transactions processed through the Interac network.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                transactionFee:
                  description: A fee applied per individual transaction processed.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                monthlyFee:
                  description: A recurring fee charged on a monthly basis for continued access.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                boostMonthlyFee:
                  description: An additional recurring fee charged on a monthly basis for enhanced services or features.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                netSuiteMonthlyFee:
                  description: A recurring montly fee for the integration or use of the NetSuite platform.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                tokenSharingSetupFee:
                  description: A one-time fee charged for setting up token sharing services.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                eCommerceAssessmentTransactionFee:
                  description: A fee applied to transaction assessed for e-commerce risk.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                eCommerceCardBrandTransactionFee:
                  description: A fee applied to e-commerce transactions based on the card brand.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                eCommerceMerchantDiscountRateFee:
                  description: The Merchant Discount Rate for e-commerce transactions.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                eCommerceTransactionFee:
                  description: A fee applied to each e-commerce transaction processed.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                kountFee:
                  description: A fee associated with the use of Kount tool.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                kountOneTimeFee:
                  description: A one-time fee charged for the initial setup or activation of Kount.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                kountPerTransactionFee:
                  description: A fee applied to each transaction processed using Kount.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                visa3DSecureAuthenticationTransactionFee:
                  description: A fee applied to transaction processed using Visa's 3D secure authentication protocol.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                amex3DSecureAuthenticationTransactionFee:
                  description: A fee applied to transaction processed using Amex's 3D secure authentication protocol.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                mastercard3DSecureAuthenticationTransactionFee:
                  description: A fee applied to transaction processed using Mastercard's 3D secure authentication protocol.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                visa3DSecureAuthenticationMerchantDiscountRateFee:
                  description: The Merchant Discount Rate applied to transactions processed through Visa's 3D secure authentication protocol.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                amex3DSecureAuthenticationMerchantDiscountRateFee:
                  description: The Merchant Discount Rate applied to transactions processed through Amex's 3D secure authentication protocol.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                mastercard3DSecureAuthenticationMerchantDiscountRateFee:
                  description: The Merchant Discount Rate applied to transactions processed through Mastercard's 3D secure authentication protocol.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        monerisGoPointOfSaleRetail:
          type: object
          description: An object containing the Moneris Go point of sale retail details.
          nullable: true
          properties:
            fees:
              type: object
              description: A list of fees associated with Moneris Go POS Retail.
              nullable: true
              properties:
                goRetailFee:
                  description: A fee associated with retail operations.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        monerisGoPortal:
          type: object
          description: An object containing the Moneris Go Portal details.
          nullable: true
          properties:
            pricingModel:
              type: string
              description: Defines the pricing structure for the services provided.
              nullable: true
              maxLength: 30
            fees:
              type: object
              description: A list of fees associated with Moneris Go Portal.
              nullable: true
              properties:
                setupFee:
                  description: A one-time fee charged for the initial configuration and onboarding of the product.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                accessFee:
                  description: A fee charged for gaining access to the service.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        payDropPlus:
          type: object
          description: An object containing the PayD Pro Plus details.
          nullable: true
          properties:
            fees:
              type: object
              description: A list of fees associated with PayD Pro Plus.
              nullable: true
              properties:
                subTotal:
                  description: The sum of all applicable fees before any additional charges.
                  nullable: true
                  type: object
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
    TransactionPlan:
      type: object
      description: An object containing the transaction plan details.
      properties:
        mdr:
          type: string
          description: The merchant discount rate applied to transactions under transaction plan.
          nullable: true
          maxLength: 10
        mdrMinValue:
          type: string
          description: The minimum merchant discount rate that applies under the transaction plan.
          nullable: true
          maxLength: 10
        mdrMaxValue:
          type: string
          description: The maximum merchant discount rate that applies under the transaction plan.
          nullable: true
          maxLength: 10
        txn:
          type: string
          description: The single payment processing event under the transaction plan.
          nullable: true
          maxLength: 10
        txnMinValue:
          type: string
          description: The minimum transaction value that applies under the transaction plan.
          nullable: true
          maxLength: 10
        txnMaxValue:
          type: string
          description: The maximum transaction value that applies under the transaction plan.
          nullable: true
          maxLength: 10
        nonQualifiedMdr:
          type: string
          description: The merchant discount rate applied to transactions that do not meet certain qualifying criteria under the transaction plan.
          nullable: true
          maxLength: 10
        tier:
          type: string
          description: The level or band within the transaction plan.
          nullable: true
          maxLength: 10
        feeTypeCode:
          type: string
          description: The type of fee associated with a transaction under the transaction plan.
          nullable: true
          maxLength: 10
        paymentModeCode:
          type: string
          description: The type of payment mode associated with a transaction under the transaction plan.
          nullable: true
          maxLength: 10
        nonQualifiedMdrMinValue:
          type: string
          description: The minimum merchant discount rate value applied to transactions that do not meet certain qualifying criteria under the transaction plan.
          nullable: true
          maxLength: 10
        nonQualifiedMdrMaxValue:
          type: string
          description: The maximum merchant discount rate value applied to transactions that do not meet certain qualifying criteria under the transaction plan.
          nullable: true
          maxLength: 10
    CardBrandPlan:
      type: object
      description: An object containing the card brand plan details.
      properties:
        foreignPercent:
          type: string
          description: The percentage fee applied to transactions involving foreign cards.
          nullable: true
          maxLength: 10
        domesticPercent:
          type: string
          description: The percentage fee applied to transactions involving domestic cards or payments within the same country.
          nullable: true
          maxLength: 10
        domesticFlat:
          type: string
          description: A fixed fee applied to domestic transactions under the card brand plan.
          nullable: true
          maxLength: 10
        feeProgramCode:
          type: string
          description: An identifier that links to a specific fee program within the card brand plan.
          nullable: true
          maxLength: 10
        captureMethodInternalCode:
          type: string
          description: A unique internal code to specify the method by which payment transactions are captured.
          nullable: true
          maxLength: 10
        foreignCardOriginCode:
          type: string
          description: A code used to identify the origin of a foreign card in a transaction under the card brand plan.
          nullable: true
          maxLength: 10
        domesticCardOriginCode:
          type: string
          description: A code used to identify the origin of a domestic card in a transaction under the card brand plan.
          nullable: true
          maxLength: 10
    AssessmentPlan:
      type: object
      description: An object containing all details related to assessment plan.
      properties:
        mdr:
          type: string
          description: The merchant discount rate applied to transactions under assessment plan.
          nullable: true
          maxLength: 10
        txn:
          type: string
          description: The single payment processing event under the assessment plan.
          nullable: true
          maxLength: 10
        feeTypeCode:
          type: string
          description: The type of fee associated with a transaction under the assessment plan.
          nullable: true
          maxLength: 5
        feeProgramCode:
          type: string
          description: A unique code or identifier used to reference a specific fee program within the assessment plan.
          nullable: true
          maxLength: 5
        cardOriginCode:
          type: string
          description: A code that indicates the origin of the card.
          nullable: true
          maxLength: 5
        captureMethodInternalCode:
          type: string
          description: An internal code that specifies the method used to capture funds for an assessment plan.
          nullable: true
          maxLength: 5
    OfiCardPlan:
      type: object
      description: An object containing all details about the Ofi Card Plan.
      properties:
        ofiCard:
          type: string
          description: Represents the specific type of card used within the OFI institution card plan.
          nullable: true
          maxLength: 10
        cardAcquirer:
          type: string
          description: A string attribute representing the acquiring bank or institution.
          nullable: true
          maxLength: 10
        merchantNumber:
          type: string
          description: Identifies the merchant within he acquirer's system.
          nullable: true
          maxLength: 10
        region:
          type: string
          description: Specify the geographical area, province or territory relevant to the operation.
          nullable: true
          maxLength: 10
        transitNumber:
          type: string
          description: Attribute representing the five-digit branch number of a financial institution.
          nullable: true
          maxLength: 10
        accountNumber:
          type: string
          description: Attribute that represent the unique identifier for a bank account.
          nullable: true
          maxLength: 10
        transactionFee:
          description: Represents the transaction fee, which is typically a fixed amount charged per transaction processed.
          nullable: true
          type: object
          properties:
            feeType:
              type: string
              description: Specifies the category or purpose of the fee applied to a transaction or service.
              nullable: true
              maxLength: 30
            unitPrice:
              $ref: '#/components/schemas/money'
            taxes:
              type: array
              description: A list of tax items associated with the fee.
              items:
                $ref: '#/components/schemas/Tax'
              maxItems: 10
            frequency:
              $ref: '#/components/schemas/Frequency'
            quantity:
              type: integer
              description: Represent the number of times a fee is applied based on its frequency.
              format: int32
              minimum: 1
              maximum: 30
              example: 3
            isChecked:
              type: boolean
              description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
              example: true
            waivePeriod:
              $ref: '#/components/schemas/WaivePeriod'
          required:
            - unitPrice
        depositType:
          type: string
          description: Indicates the type of deposit arrangement for the merchant account.
          nullable: true
          maxLength: 10
        authOnly:
          type: string
          description: A string attribute indicating a transaction that is authorized.
          nullable: true
          maxLength: 10
        cardOption:
          type: string
          description: Specifies the type of card used or service option for a transaction plan.
          nullable: true
          maxLength: 10
    CardPlans:
      type: object
      description: An object containing all the card plans details.
      properties:
        calculationMethod:
          type: string
          description: The method used to calculate fees, charges or values related to card plan.
          nullable: true
          maxLength: 20
        merchantDiscountRateType:
          type: string
          description: The type of Merchant Discount Rate applied to a card plan.
          nullable: true
          maxLength: 20
        currency:
          nullable: true
          type: string
          description: |
            Provides the three letter currency code according the ISO 4217 standard. 

            For a complete list of currency codes, visit: https://en.wikipedia.org/wiki/ISO_4217
          minLength: 3
          maxLength: 4
          example: CAD
          format: iso-4217
        transactionFeeParameterCode:
          type: string
          description: The code that identifies the parameters associated with transaction fees for a specific card plan.
          nullable: true
          maxLength: 20
          enum:
            - ATIP
            - INDI
            - KATZ
            - INTP
            - 2QNQ
            - MCR3
            - PLQ2
            - SHOP
            - CF02
            - INGB
            - Q200
            - PLQ1
            - VISA
            - GNDS
            - TXLP
            - FLAT
            - INDG
            - CFIB
            - SER4
            - SER3
            - TIRR
            - TR00
            - DIEN
            - 3QNQ
            - AMZN
            - CF01
            - TR02
            - MCR1
            - ID58
            - INDN
            - SDMI
            - SEAR
            - CRAV
            - CITI
            - CDMV
            - CTP2
            - SIMS
            - DOLA
            - PAYM
            - ROGE
            - CTP1
            - GOVC
            - PREC
            - CITB
            - ID53
            - SIMP
            - COST
            - TTMK
            - SER1
        cardBrandTemplateId:
          type: string
          description: Unique identifier that links to a predefined template associated with a specific card brand.
          nullable: true
          maxLength: 10
        selectedPlans:
          type: object
          description: An object containing the plans selected details.
          nullable: true
          properties:
            isMastercard:
              type: boolean
              description: A boolean flag indicating whether a mastercard plan is selected.
            isMastercardDebit:
              type: boolean
              description: A boolean flag indicating whether a mastercard debit plan is selected.
            isVisa:
              type: boolean
              description: A boolean flag indicating whether a visa plan is selected.
            isVisaDebit:
              type: boolean
              description: A boolean flag indicating whether a visa debit plan is selected.
            isDiscover:
              type: boolean
              description: A boolean flag indicating whether a discover plan is selected.
            isUnionPay:
              type: boolean
              description: A boolean flag indicating whether an union pay plan is selected.
            isInterac:
              type: boolean
              description: A boolean flag indicating whether an interac plan is selected.
            isAmex:
              type: boolean
              description: A boolean flag indicating whether an amex plan is selected.
        mastercard:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        mastercardDebit:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        visa:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        visaDebit:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        discover:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        unionPay:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        interac:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        amex:
          nullable: true
          type: object
          description: An object containing the franchise plan details.
          properties:
            isCommunicationsOptOut:
              type: boolean
              description: A boolean flag indicating whether the customer has opted out of receiving communications related to a franchise plan.
            cardFees:
              type: object
              description: An object containing the card fees plan details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                refundAmount:
                  type: string
                  description: A numeric value representing the amount of money refunded to a customer under the franchise plan.
                  nullable: true
                  maxLength: 10
                settlementAmount:
                  type: string
                  description: A numeric value representing the amount of money settled or transferred to a merchant's account after processing transactions under the franchise plan.
                  nullable: true
                  maxLength: 10
            transactions:
              type: array
              description: A list of transaction items.
              items:
                $ref: '#/components/schemas/TransactionPlan'
              maxItems: 20
            cardBrands:
              type: array
              description: A list of card brand items.
              items:
                $ref: '#/components/schemas/CardBrandPlan'
              maxItems: 20
            assessments:
              type: array
              description: A list of assessment items.
              items:
                $ref: '#/components/schemas/AssessmentPlan'
              maxItems: 20
            serviceFees:
              type: object
              description: An object containing the service fees details.
              nullable: true
              properties:
                authorization:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
                maintenance:
                  nullable: true
                  type: object
                  description: Represents a monetary charge applied to a transaction or service.
                  properties:
                    feeType:
                      type: string
                      description: Specifies the category or purpose of the fee applied to a transaction or service.
                      nullable: true
                      maxLength: 30
                    unitPrice:
                      $ref: '#/components/schemas/money'
                    taxes:
                      type: array
                      description: A list of tax items associated with the fee.
                      items:
                        $ref: '#/components/schemas/Tax'
                      maxItems: 10
                    frequency:
                      $ref: '#/components/schemas/Frequency'
                    quantity:
                      type: integer
                      description: Represent the number of times a fee is applied based on its frequency.
                      format: int32
                      minimum: 1
                      maximum: 30
                      example: 3
                    isChecked:
                      type: boolean
                      description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                      example: true
                    waivePeriod:
                      $ref: '#/components/schemas/WaivePeriod'
                  required:
                    - unitPrice
        ofiCards:
          type: array
          items:
            $ref: '#/components/schemas/OfiCardPlan'
          maxItems: 20
        programs:
          type: object
          description: An object containing the programs details.
          nullable: true
          properties:
            isMastercardPayPass:
              type: boolean
              description: A boolean flag that indicates whether the transaction program supports Mastercard PayPass.
            isVisaVeps:
              type: boolean
              description: A boolean flag that indicates whether the transaction program supports Visa Veps.
            isDiscoverZip:
              type: boolean
              description: A boolean flag that indicates whether the transaction program supports Discover Zip.
            isInteracFlash:
              type: boolean
              description: A boolean flag that indicates whether the transaction program supports Interac Flash.
            isAmexExpress:
              type: boolean
              description: A boolean flag that indicates whether the transaction program supports American Express.
            isUnionPayQuickPass:
              type: boolean
              description: A boolean flag that indicates whether the transaction program supports UnionPay QuickPass.
    OrderPayload:
      type: object
      description: Represents the payload for submitting an order.
      properties:
        idempotencyKey:
          $ref: '#/components/schemas/idempotencyKey'
        marketSegment:
          $ref: '#/components/schemas/MarketSegment'
        repCode:
          type: string
          description: A code that identifies the representative agent associated with the order.
          nullable: true
          maxLength: 10
          example: A0
        userDetails:
          nullable: true
          type: object
          description: An object containing personal information about the user involved in the transaction.
          properties:
            userId:
              type: string
              description: A unique identifier assigned to a user within the system.
              nullable: true
              maxLength: 30
            firstName:
              type: string
              description: The user's given name.
              nullable: true
              maxLength: 30
            lastName:
              type: string
              description: The user's family name or surname.
              nullable: true
              maxLength: 30
        applicablePromotions:
          type: array
          description: A list of promotion codes applicable to the order.
          items:
            type: string
            maxLength: 100
        fees:
          type: object
          description: An object containing the fees details
          nullable: true
          properties:
            accountServiceFee:
              description: A fee charged for maintaining the account associated with the order.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            consolidatedAccountServiceFee:
              description: A combined or aggregated fee charged for the maintenance of consolidated accounts.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            minimumMerchantDiscountRateFee:
              description: The minimum Merchant Discount Rate that applies to a transaction.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            paperStatementFee:
              description: A fee charged for receiving paper statements.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            pciSecurityFee:
              description: A fee charged to cover the costs of ensuring compliance with the Payment Card Industry Data.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            totalAdminFee:
              description: The total administrative fee applied to an order.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            upgradeFee:
              description: A fee charged for upgrading a product to a newer version.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            agedCloseBatchFee:
              description: A fee charged when a batch of transactions remains open beyond a defined period without being settled.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            mastercardComplianceFee:
              description: A fee associated with ensuring compliance with MasterCard's regulatory.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            dialCommunicationFee:
              description: A fee charged for using dial-up communication methods to transmit transaction data.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            handlingFee:
              description: A fee charged to cover the costs associated with the preparation and processing of an order.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            chargeBackFee:
              description: A fee applied when a chargeback is initiated by a customer.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
            consolidation:
              description: A fee charged for combining multiple services or transactions into a single package.
              nullable: true
              type: object
              properties:
                feeType:
                  type: string
                  description: Specifies the category or purpose of the fee applied to a transaction or service.
                  nullable: true
                  maxLength: 30
                unitPrice:
                  $ref: '#/components/schemas/money'
                taxes:
                  type: array
                  description: A list of tax items associated with the fee.
                  items:
                    $ref: '#/components/schemas/Tax'
                  maxItems: 10
                frequency:
                  $ref: '#/components/schemas/Frequency'
                quantity:
                  type: integer
                  description: Represent the number of times a fee is applied based on its frequency.
                  format: int32
                  minimum: 1
                  maximum: 30
                  example: 3
                isChecked:
                  type: boolean
                  description: A boolean flag to indicate whether the fee has been approved for inclusion in the transaction.
                  example: true
                waivePeriod:
                  $ref: '#/components/schemas/WaivePeriod'
              required:
                - unitPrice
        applicationDetails:
          type: object
          description: Details about the application
          nullable: true
          properties:
            typeOfApplication:
              type: string
              description: The type of application being submitted
              enum:
                - NET_NEW_MERCHANT
                - EXISTING_MERCHANT_ADD_POS
                - EXISTING_MERCHANT_UPGRADE_POS
              example: NET_NEW_MERCHANT
              nullable: false
        agreementModelInformation:
          type: object
          description: An object containing the agreement model info details.
          nullable: true
          properties:
            agreementModelCode:
              type: string
              description: A code that identifies the specific type or model of agreement associated with the order or account.
              nullable: true
              maxLength: 15
        valueAddedServices:
          type: object
          description: list of value added services
          nullable: true
          properties:
            selections:
              type: object
              description: value added services selection
              nullable: true
              properties:
                giftCard:
                  type: boolean
                  description: A boolean flag indicating whether the gitfcard was selected.
                loyalty:
                  type: boolean
                  description: A boolean flag indicating whether the loyalty was selected.
                dcc:
                  type: boolean
                  description: A boolean flag indicating whether the dcc was selected.
                abu:
                  type: boolean
                  description: A boolean flag indicating whether the abu was selected.
                vau:
                  type: boolean
                  description: A boolean flag indicating whether the vau was selected.
                mcp:
                  type: boolean
                  description: A boolean flag indicating whether the mcp was selected.
                saf:
                  type: boolean
                  description: A boolean flag indicating whether the saf was selected.
                bookmark:
                  type: boolean
                  description: A boolean flag indicating whether the bookmark was selected.
                wix:
                  type: boolean
                  description: A boolean flag indicating whether the wix was selected.
                bookmarkPro:
                  type: boolean
                  description: A boolean flag indicating whether the bookmarkPro was selected.
                thirdPartyGiftCard:
                  type: boolean
                  description: A boolean flag indicating whether the thirdPartyGiftCard was selected.
                interacOnline:
                  type: boolean
                  description: A boolean flag indicating whether the interacOnline was selected.
                interacEcom:
                  type: boolean
                  description: A boolean flag indicating whether the interacEcom was selected.
                webCreationPackages:
                  type: boolean
                  description: A boolean flag indicating whether the webCreationPackages was selected.
                installments:
                  type: boolean
                  description: A boolean flag indicating whether the installments was selected.
                paymentRequest:
                  type: boolean
                  description: A boolean flag indicating whether the paymentRequest was selected.
                monerisAdvance:
                  type: boolean
                  description: A boolean flag indicating whether the monerisAdvance was selected.
                p2pe:
                  type: boolean
                  description: A boolean flag indicating whether the p2pe was selected.
        documentsRequested:
          type: object
          description: An object containing the documents requested details.
          nullable: true
          properties:
            attachments:
              type: array
              description: A list of documents requested for the order.
              items:
                type: object
                properties:
                  attachmentType:
                    type: string
                    description: The type of the document requested.
                    maxLength: 100
                    enum:
                      - ADVERTISING
                      - ALCOHOL_CARD_NOT_PRESENT_OFFICER_CERTIFICATE
                      - ALCOHOL_CARD_NOT_PRESENT_OFFICER_CERTIFICATE_SOLE_PROPRIETOR
                      - APPLICABLE_LICENCE
                      - BUSINESS_REGISTRATION_DOCUMENTS
                      - CAF
                      - CANNABIS_ATTESTATION
                      - FIREARMS_CARD_NOT_PRESENT_OFFICER_CERTIFICATE
                      - FIREARMS_CARD_NOT_PRESENT_OFFICER_CERTIFICATE_SOLE_PROPRIETOR
                      - FINANCIAL_STATEMENTS
                      - LEGAL_OPINION_LETTER
                      - MASTER_CARD_MRP_REGISTRATION
                      - MEDICAL_DENTAL_EQUIPMENT_CARD_NOT_PRESENT_OFFICER_CERTIFICATE
                      - MEDICAL_DENTAL_EQUIPMENT_CARD_NOT_PRESENT_OFFICER_CERTIFICATE_SOLE_PROPRIETOR
                      - OFFICER_CERTIFICATE
                      - OFFICER_CERTIFICATE_SOLE_PROPRIETOR
                      - ORGANIZATION_CHART
                      - PG
                      - PHARMACY_CARD_NOT_PRESENT_OFFICER_CERTIFICATE
                      - PHARMACY_CARD_NOT_PRESENT_OFFICER_CERTIFICATE_SOLE_PROPRIETOR
                      - POLITICAL_ORGANIZATION_REGISTRATION
                      - PREVIOUS_PROCESSING_STATEMENTS
                      - PSNW
                      - SMOKING_SUPPLIES_CARD_NOT_PRESENT_OFFICER_CERTIFICATE
                      - SMOKING_SUPPLIES_CARD_NOT_PRESENT_OFFICER_CERTIFICATE_SOLE_PROPRIETOR
                      - VISA_HBR_REGISTRATION
                  selectionName:
                    type: string
                    description: The name of the selection associated with the document.
                    maxLength: 100
                  fileAttachments:
                    type: array
                    description: A list of file attachments associated with the document.
                    items:
                      type: object
                      properties:
                        mimeTypeName:
                          type: string
                          description: The MIME type name of the document.
                          maxLength: 100
                        fileName:
                          type: string
                          description: The name of the file associated with the document.
                          maxLength: 100
                        documentType:
                          type: string
                          description: The type of the document.
                          maxLength: 50
                        documentIdentifier:
                          type: string
                          description: A unique identifier for the document.
                          maxLength: 100
              maxItems: 40
            documentInputs:
              type: array
              description: A list of document inputs associated with the order.
              items:
                type: object
                properties:
                  documentType:
                    type: string
                    description: The type of the document input.
                    maxLength: 6
                    enum:
                      - AMEX_ELIGIBILITY_VERIFICATION
                      - CONTROL_VERIFICATION
                      - MASSAGE_LICENSE_NUMBER
                      - MERCHANT_CONFIRMATION
                      - REGISTRATION_NUMBER
                      - TICO_IATA_NUMBER
                  selectionName:
                    type: string
                    description: The name of the selection associated with the document input.
                    maxLength: 100
                  inputName:
                    type: string
                    description: The name of the input field for the document.
                    maxLength: 100
        confirmations:
          type: object
          description: An object containing the confirmation details.
          nullable: true
          properties:
            hasManualImprinter:
              type: boolean
              description: A boolean flag indicating whether the order requires a manual imprinter.
            hasConsentedToCollectPersonalInformation:
              type: boolean
              description: A boolean flag indicating whether the user has consented to the use of their personal information.
            isSignatureRequired:
              type: boolean
              description: A boolean flag indicating whether a signature is required for the order.
              default: true
            additionalNote:
              type: string
              description: Additional note or comments related to the order.
              nullable: true
              maxLength: 500
        supplies:
          type: array
          description: A list of supply items.
          items:
            $ref: '#/components/schemas/Supply'
          maxItems: 116
        productDetails:
          $ref: '#/components/schemas/ProductDetails'
        autoAdjudicationDecisionDetails:
          nullable: true
          type: object
          description: An object containing all the auto adjudication details.
          required:
            - autoAdjudicationScore
            - autoDecision
          properties:
            autoAdjudicationScore:
              type: string
              description: The score generated by an automated system to assess the likelihood of an order being approved.
              maxLength: 10
            autoDecision:
              type: string
              description: A boolean value indicating whether an automated decision has been made regarding transaction.
              maxLength: 50
            failedRules:
              type: array
              description: A list of failed rules executed during adjudication process.
              items:
                type: string
                maxLength: 100
              maxItems: 20
            onBoardingLiteRules:
              type: array
              description: A list of onboarding rules executed during adjudication process.
              items:
                type: string
                maxLength: 100
              maxItems: 20
            documentRequirements:
              type: object
              description: An object containing all the document requirement details.
              nullable: true
              properties:
                businessRegistrationDocuments:
                  type: string
                  description: The type of business registration documents required for the order.
                  nullable: true
                  maxLength: 20
                triggeredScenarios:
                  type: array
                  description: A list of scenarios triggered for the document requirements.
                  items:
                    type: string
                    maxLength: 100
                  maxItems: 20
        isAutoAdjudicationRequired:
          type: boolean
          description: A boolean flag indicating whether the auto adjudication process is required.
          default: true
        isExpeditedOrder:
          type: boolean
          description: A boolean flag indicating whether an order is being processed as a rush or expedited order.
        cardPlanDetails:
          $ref: '#/components/schemas/CardPlans'
    Solutions:
      type: object
      description: An object containing the solutions details.
      properties:
        solutionId:
          description: A unique identifier for the solutions object.
          type: integer
          format: int32
          example: 1
        quantity:
          description: The number of items provided within the solution.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 21
        carrier:
          description: A string that identifies the provider responsible for delivering the solution.
          nullable: true
          type: string
          enum:
            - ROGERS
            - TELUS
      required:
        - solutionId
        - quantity
    addressee:
      description: a (natural or legal) person that gets addressed
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/firstName'
        middleName:
          $ref: '#/components/schemas/middleName'
        lastName:
          $ref: '#/components/schemas/lastName'
        companyName:
          $ref: '#/components/schemas/companyName'
      required:
        - firstName
        - lastName
    OrderPayloadPartnerBank:
      type: object
      description: An object containing all the Order payload partner bank details.
      properties:
        solutions:
          type: array
          description: A list of solution items.
          items:
            $ref: '#/components/schemas/Solutions'
          maxItems: 5
        deliveryAddress:
          type: object
          nullable: true
          allOf:
            - $ref: '#/components/schemas/address'
            - $ref: '#/components/schemas/addressee'
        bankerInformation:
          nullable: true
          type: object
          description: An object containing all details related to banker information.
          properties:
            bankerEmail:
              $ref: '#/components/schemas/email'
            bankerEmployeeNumber:
              type: string
              description: A string attribute that uniquely identifies the employee of the bank responsible.
              nullable: true
              maxLength: 20
              example: '242200024'
            bankerName:
              type: string
              description: The full name of the banker representative.
              nullable: true
              maxLength: 50
              example: MONIKA  CARNOKA
            bankerPhoneNumber:
              type: string
              description: The phone number of the banker representative.
              nullable: true
              maxLength: 50
              pattern: ^\+[1-9]\d{1,14}$
              example: '+17188532532'
            bankerPhoneNumberExtension:
              type: string
              description: The phone number extension of the banker representative.
              nullable: true
              maxLength: 50
              pattern: ^[0-9]{1,6}$
              example: '1068'
            bankerTransitNumber:
              type: string
              description: The transit number associated with the banker or the specific branch the banker operates from.
              nullable: true
              maxLength: 5
              example: '03252'
            bankerBranchId:
              type: string
              description: The branch of the bank where the banker is located.
              nullable: true
              maxLength: 5
              example: '2679'
            orderCreatedBy:
              type: string
              description: The individual responsible for creating the order.
              nullable: true
              maxLength: 100
              example: pcote03@PERCOM-> PERCOMpcote03
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
      required:
        - solutions
    OrderDetailsResponse:
      type: object
      description: An object containing all the details related to the order details response.
      required:
        - merchantOrderId
        - merchantId
      properties:
        merchantOrderId:
          $ref: '#/components/schemas/MerchantOrderId'
        merchantId:
          $ref: '#/components/schemas/merchantId'
        workflowInstanceId:
          type: string
          description: A string attribute that uniquely identifies the specific instance of a workflow related to the order.
          nullable: true
        userId:
          type: string
          description: Identifies the user associated with the order.
          nullable: true
        representativeCode:
          type: string
          description: Represents the identifies for the sales representative associated to the order.
          nullable: true
        adjudicationRequired:
          type: boolean
          description: A boolean flag that indicates whether the order requires an adjudication process.
        orderStatus:
          type: string
          description: Represents the current status of the order in the system.
          nullable: true
          enum:
            - COMPLETE
            - SCHEDULE_INSTALL
            - SUBMITTED
            - BILLING
            - ADJUDICATION
            - FAX_DOCUMENTS
            - DEFICIENT_ADDRESS_VERIFICATION
            - DEFICIENT_ORDER
            - MERCHANT_UPDATE
            - AMEX_FAILED
            - CANCELLED
            - ADJUDICATION_REVIEW
            - PENDING_DEPLOYMENT
            - VALIDATE_AND_SCHEDULE
            - AUTO_PENDING_ALLOCATION_STATUS
            - PCI_CERTIFICATION
            - ONE_TIME_FEE
            - PEND_VENDOR_RESPONSE
            - INSTALLATION
            - VENDOR_CONVERSION_INSTALLATION
            - PEND_FOR_DEPLOYMENT
            - MANUAL_ADJUDICATION
            - MANUALADJUDICATION
            - CLOSED
            - AMEX_MAX_ATTEMPTS
            - FAILED
            - IN_PROGRESS
            - FAXDOCUMENTS
            - UPDATE_ORDER
            - DECLINED
            - START_ONE_TIME_FEE
            - START_ORDER
            - SALES_ACTIVATION_BASE24
            - SALES_PEND
            - AMEX_APPROVED
            - CONTRACT
            - NEW
            - CLOSED_WON
            - READJUDICATION
            - SALES_APPROVAL
            - READJUDICATION_FLOW
            - AUTO_ADJUDICATION
            - AMEX_PEND
            - COMPLIANCE
            - CANCEL
            - DEPLOYMENT
            - PEND_FOR_VALIDATION
            - SALES_ACTIVATION_POST_DEPLOYMENT
            - PEND_ORDER_FOR_DEPLOYMENT
            - COMPLETED
            - RESCHEDULE_FROM_VENDOR_CONVERSION_INSTALLATION
            - LEGAL_NAME_UPDATE_FLOW
            - PCI_DECLINED
            - COLLATERAL_REQUIRED_REVIEW
            - CLEANUP
            - ACI_SETTLEMENT_UPLOAD_FLOW
            - FINAL_ACI_MERCHANT_UPDATE
            - ASSIGNED
            - CALLBACK
            - AUTO_PENDING_RECEIPT_STATUS
            - PRICING_UPDATE_FLOW
            - CONVERSION_INSTALLATION
            - MANUAL_ADJUDICATION_REVIEW
            - OFI_CARD_PLAN_CONFIRMATION
            - MANUAL_VENDOR_DEPLOYMENT
            - COLLATERAL_REQUIRED
            - PEND_ORDER_BASED_ON_READY_DATE
            - POST_BOARDING_DP_FLOW
            - DELETED
            - EXPIRED
            - AMEX_REJECTED
            - DISCOVER_MERCHANT_SETUP
            - ORDER_COMPLETE_PROCESSING
            - SALES_ACTIVATION_POST_DEPLOYMENT_ORDER
            - DECLINED_APPLICATION
            - LEGAL_NAME_CHANGE
            - CANCELED
            - POSTPONED
            - ESSENTIS_HOST_INPUT
        orderType:
          type: string
          description: The classification or category of the order.
          nullable: true
          enum:
            - PRICING_UPDATE
            - MERCHANT_UPDATE
            - EXISTING_MERCHANT_UPGRADE_POS
            - EXISTING_POS
            - CHIP
            - NET_NEW_MERCHANT
            - EXISTING_MERCHANT
            - READJUDICATION
            - M9000
            - EXISTING_MERCHANT_NEW_POS
            - EXISTINGMERCHANT
            - EXISTING_MERCHANT_ADD_POS
            - SC220
            - SC220CAN
        orderOpenedAt:
          type: string
          description: A datetime attribute that records the exact date and time when the order was initiated in ISO 8601 format.
          nullable: true
          format: date-time
          example: '2025-03-21T18:10:00Z'
        orderChangedAt:
          type: string
          description: A datetime attribute that records the exact date and time when the order was modified in ISO 8601 format.
          nullable: true
          format: date-time
          example: '2025-03-21T18:10:00Z'
        orderApprovedAt:
          type: string
          description: A datetime attribute that records the exact date and time when the order was approved in ISO 8601 format.
          nullable: true
          format: date-time
          example: '2025-03-21T18:10:00Z'
        orderDeclinedAt:
          type: string
          description: A datetime attribute that records the exact date and time when the order was declined in ISO 8601 format.
          nullable: true
          format: date-time
          example: '2025-03-21T18:10:00Z'
        orderClosedAt:
          type: string
          description: A datetime attribute that records the exact date and time when the order was closed in ISO 8601 format.
          nullable: true
          format: date-time
          example: '2025-03-21T18:10:00Z'
        contractSent:
          type: boolean
          description: A boolean flag indicating whether the date the contract was sent.
        promotionInformation:
          type: object
          description: An object containing information related to the promotion associated with the order.
          nullable: true
          properties:
            promotionCode:
              type: string
              description: A string attribute used to store a promotional or discount code that maybe applied to the order.
              nullable: true
            promotionName:
              type: string
              description: The name or title of the promotional offer associated with the promoCode.
              nullable: true
            promotionExpirationDate:
              type: string
              description: A datetime attribute that indicates the expiration date of the promotional offer in ISO 8601 format.
              nullable: true
              format: date-time
              example: '2025-10-21T18:10:00Z'
            promotionDetails:
              type: string
              description: A string attribute that provides additional information about the promotion.
              nullable: true
        pointOfSaleSolutionType:
          type: string
          description: Indicates the type of Point of Sale solution being used or requested.
          nullable: true
          enum:
            - POINT_OF_SALE_WITH_OFI
            - MONERIS_POINT_OF_SALE
            - PAPER_DEPOSIT
        newMerchantIdRequest:
          type: boolean
          description: A boolean flag indicating whether a new merchant ID is being requested as part of the order.
        newMerchantIdType:
          type: string
          description: A string attribute specifying the type of merchant ID being requested.
          nullable: true
        merchantIdReferenceApplicableForOrder:
          type: string
          description: Indicates which existing merchant ID should be used for the current order.
          nullable: true
        deploymentTransactionNumber:
          type: string
          description: The transaction number associated with the deployment process.
          nullable: true
        deploymentWorkOrderReference:
          type: string
          description: The work order number associated with the deployment process.
          nullable: true
        deploymentWorkOrderStatus:
          type: string
          description: The work order status associated with the deployment process.
          nullable: true
          enum:
            - SHIPPED
            - COMPLETE
            - MAX_RETRIES_EXCEEDED
            - CANCELLED
            - ACCEPTED
            - REJECTED
            - SYSTEM_ERROR
            - HELD
        shippedAt:
          type: string
          description: A datetime attribute that indicates the shipping date of the product or service in ISO 8601 format .
          nullable: true
          format: date-time
          example: '2025-10-21T18:10:00Z'
        shippingType:
          type: string
          description: A string attribute representing the type of shipping method used for delivering the product.
          nullable: true
        shippingWayBillNumber:
          type: string
          description: The tracking number or waybill number assigned to the shipment.
          nullable: true
        shippingCourierName:
          type: string
          description: The name of the shipping or courier company responsible for delivering the product or service.
          nullable: true
        installedAt:
          type: string
          description: A date attribute representing the scheduled or actual date when the installation of a product or service is completed in ISO 8601 format.
          nullable: true
          format: date
          example: '2025-10-21'
        installationType:
          type: string
          description: The category of the installation process.
          nullable: true
          enum:
            - TRAIN_ONLY
            - INSTALL
            - INSTALL_AND_TRAIN
        installationMethod:
          type: string
          description: The method of the installation process.
          nullable: true
          enum:
            - PRO
            - STANDARD
            - ONSITE
            - MERCHANT_INSTALL
            - ONSITE_STANDARD_INSTALLATION
            - ONSITE_PRO_INSTALLATION
            - VIRTUAL_TRAINING_AND_SETUP_ASSISTANCE
            - ONSITE_PREMIUM_INSTALLATION
            - PREMIUM
            - PHONE
        installationWorkOrderReference:
          type: string
          description: The work order of the installation process.
          nullable: true
        installationWorkOrderStatus:
          type: string
          description: The work order status of the installation process.
          nullable: true
        isAcceptedByConduct:
          type: boolean
          description: Represents the acceptance of terms, conditions or agreement based on the actions of conduct of the parties involved.
        contractSignatureRequired:
          type: boolean
          description: A boolean flag indicating whether a formal signature is required to validate or complete a contract.
        faxRequired:
          type: boolean
          description: A boolean flag indicating whether faxing a document is necessary.
        otherAdditionalInformation:
          type: string
          description: A general purpose attribute used to represent additional information.
          nullable: true
        company:
          type: string
          description: The name of the business entity.
          nullable: true
        readyAt:
          type: string
          description: Refers to the date when a product, service, or order is expected to be ready in ISO 8601 format.
          nullable: true
          format: date-time
          example: '2025-10-21T18:10:00Z'
        isMerchantReadyToAccept:
          type: boolean
          description: Indicates whether the merchant is prepared to accept the order.
        applicationScore:
          type: integer
          description: The categorical score assigned to an application.
          format: int64
        marginValue:
          type: string
          description: The specific metric related to the margin value.
          nullable: true
        adjudicationTier:
          type: string
          description: The classification level within an adjudication process.
          nullable: true
          enum:
            - S
            - J
            - C
            - O
            - ONE
            - TWO
            - THREE
        priorityTier:
          type: string
          description: The priority level assigned to an order.
          nullable: true
          enum:
            - ONE
            - TWO
            - THREE
            - FOUR
        referralInformation:
          type: object
          description: An object containing information related to the referral process.
          nullable: true
          properties:
            referralInformationPartnerName:
              type: string
              description: The name of the partner that referred the lead to the business.
              nullable: true
            referralInformationTransitNumber:
              type: string
              description: The transit number of the partner that referred the lead to the business.
              nullable: true
            referralInformationEmployeeFirstName:
              type: string
              description: The first name of the partner that referred the lead to the business.
              nullable: true
            referralInformationEmployeeLastName:
              type: string
              description: The last name of the partner that referred the lead to the business.
              nullable: true
            referralDetails:
              type: string
              description: The details of the partner that referred the lead to the business.
              nullable: true
            referralInformationOtherAdditionalInformation:
              type: string
              description: The additional information of the partner that referred the lead to the business.
              nullable: true
        hostType:
          type: string
          description: The category of host that the service is running on.
          nullable: true
          enum:
            - ESSENTIS
            - OTHER
        isExpeditedOrder:
          type: boolean
          description: A boolean flag indicting whether an order is being processed with an expedited status.
        autoApprovalStatus:
          type: string
          description: The status of an automatic approval process of an order.
          nullable: true
          enum:
            - PENDING_ADJUDICATION
            - MANUAL_ADJUDICATION
            - MANUAL
            - PROCESSING
            - NOT_APPLICABLE
            - CONDITIONALLY_APPROVED
        hasImprinter:
          type: boolean
          description: A boolean flag indicating whether an imprinter is available in the transaction process.
        isMarketSubSegmentationPreApprovalRequired:
          type: boolean
          description: The attribute related to pre-approval of market segmentation.
        optOutAmexCommunication:
          type: boolean
          description: A boolean flag indicating whether a customer has opted out of receiving communications from American Express.
        multiCurrencyPricingPackageId:
          type: integer
          description: The identifier associated with a package.
          format: int64
        deliveryAddressConfirmed:
          type: boolean
          description: A boolean flag indicating whether the delivery address has been confirmed.
        isManualDeploymentRequired:
          type: boolean
          description: Indicates whether a process deployment needs to be performed manually.
        isDeficient:
          type: boolean
          description: Indicates whether something is lacking or deficient related to the order.
        preDeficientOrderStatus:
          type: string
          description: The status of an order before it is flagged as deficient.
          nullable: true
          enum:
            - COMPLETE
            - SCHEDULE_INSTALL
            - ADJUDICATION
            - ONE_TIME_FEE
            - MANUAL_ADJUDICATION
            - UPDATE_ORDER
            - IN_PROGRESS
            - START_ORDER
            - SALES_ACTIVATION_BASE24
            - READJUDICATION
            - COMPLIANCE
            - READJUDICATION_FLOW
            - SALES_APPROVAL
            - SALES_ACTIVATION_POST_DEPLOYMENT
            - DEPLOYMENT
            - FINAL_ACI_MERCHANT_UPDATE
            - MANUAL_ADJUDICATION_REVIEW
            - COLLATERAL_REQUIRED
            - POST_BOARDING_DP_FLOW
    RecommenderProductsPayload:
      type: object
      required:
        - annualVolume
        - hasMajorityOwnership
        - hasExistingRelationship
        - hasMultipleLocations
        - locationProvince
        - merchantCategoryCode
      description: Recommender products payload attributes
      properties:
        partner:
          type: string
          nullable: true
          maxLength: 30
        annualVolume:
          $ref: '#/components/schemas/money'
        hasMajorityOwnership:
          type: boolean
          description: A boolean value indicating whether the business has majority ownership.
        hasExistingRelationship:
          type: boolean
          description: A boolean value indicating whether the business has an existing relationship with the service provider.
        hasMultipleLocations:
          type: boolean
          description: A boolean value indicating whether the business has multiple locations.
        locationProvince:
          $ref: '#/components/schemas/province'
        merchantCategoryCode:
          $ref: '#/components/schemas/MerchantCategoryCode'
        solutionId:
          type: integer
          description: The unique identifier for the solution.
          format: int32
        isAllowedToSell:
          type: boolean
          description: A boolean value indicating whether the business is allowed to sell the solution.
        isOnline:
          type: boolean
          description: A boolean value indicating whether the solution is available for online transactions.
        isInstore:
          type: boolean
        directSellingTransactionVolume:
          type: integer
          description: The total volume of transactions processed through direct selling.
          format: int32
        motoTransactionVolume:
          type: integer
          description: The total volume of transactions processed through mail order / telephone order.
          format: int32
        eCommerceTransactionVolume:
          type: integer
          description: The total volume of transactions processed through e-commerce.
          format: int32
    SolutionPricing:
      type: object
      required:
        - pricingLabel
        - pricingText
      properties:
        pricingLabel:
          type: string
          description: The label associated with the pricing option.
        pricingText:
          type: string
          description: The text associated with the pricing option.
    SolutionFeature:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          description: A detailed description of the feature.
    Solution:
      type: object
      required:
        - solutionId
        - solutionName
        - solutionDescription
        - solutionImageUrl
      properties:
        solutionId:
          type: integer
          description: The unique identifier for the solution.
          format: int32
        solutionName:
          type: string
          description: The name of the solution.
        solutionDescription:
          type: string
          description: A detailed description of the solution.
        solutionImageUrl:
          type: string
          description: The URL of the image associated with the solution.
        solutionPrices:
          type: array
          description: A list of pricing options associated with the solution.
          items:
            $ref: '#/components/schemas/SolutionPricing'
        solutionFeatures:
          type: array
          description: A list of features associated with the solution.
          items:
            $ref: '#/components/schemas/SolutionFeature'
        promotionalBlock:
          type: string
          description: A promotional block associated with the solution.
          nullable: true
        additionalSolutionDetailsUrl:
          type: string
          description: The URL for additional details about the solution.
          nullable: true
        maximumQuantity:
          type: integer
          description: The maximum quantity of the solution that can be purchased.
          format: int32
        carrierOptions:
          type: array
          description: A list of carrier options available for the solution.
          items:
            type: string
    SolutionResponse:
      type: object
      properties:
        allowToSell:
          type: boolean
          description: A boolean value indicating whether the business is allowed to sell the solution.
        solutions:
          type: array
          description: A list of solution items.
          items:
            $ref: '#/components/schemas/Solution'
    webhookEventBase:
      type: object
      description: |
        This is the base definition for all event messages. It contains the common properties that are shared across all events.
      properties:
        eventId:
          type: string
          description: Unique Identifier for the Event. Can be used as an Idempotency Key to detect duplicates.
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
          example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        eventType:
          type: string
          enum:
            - RECURRING_PAYMENT_CONFIRMED
          description: |
            This is a list of all the types of events we currently send.
            - RECURRING_PAYMENT_CONFIRMED: A subscription payment transaction has been executed.
        apiVersion:
          description: |
            The Moneris API Version used to populate the event payload.  
          type: string
          nullable: true
          example: 2025-02-02-preview
        correlationId:
          type: string
          nullable: true
          description: Correlation Id transmitted during the original request.
        objectId:
          nullable: true
          type: string
          description: Used to identify API resources which may be required for future follow-on transactions; i.e. Refunds, Corrections, Completions, Reversals, etc.
          pattern: ^[A-Za-z]{2}\d{2}[A-Za-z0-9]{26}$
          minLength: 30
          maxLength: 30
          example: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        href:
          type: string
          format: uri-reference
          nullable: true
          description: Uniform resource locator to retrieve resource details
        occuredAt:
          type: string
          format: date-time
          description: Date & Time at which the event has occurred.
          example: '2024-06-27T10:00:00Z'
        data:
          type: object
          nullable: true
          description: Resource definition that triggered the event.
      required:
        - eventId
        - eventType
        - occuredAt
  parameters:
    apiVersion:
      in: header
      name: Api-Version
      required: true
      example: '2024-09-17'
      description: |
        The endpoint's API Version. 

        Must be provided through the headers section. 
      schema:
        $ref: '#/components/schemas/apiVersion'
    correlationId:
      in: header
      name: X-Correlation-Id
      example: 06f1e47b-a1b5-4902-be9c-bccc506127c4
      description: |
        Correlates a series of requests within the same flow.

        Note: This ID is generated by Moneris with every request or response, if it doesn't exist. 
        Merchants are to echo back the value with every request that is part of the call flow."
      required: false
      schema:
        type: string
        example: 06f1e47b-a1b5-4902-be9c-bccc506127c4
    merchantId:
      in: header
      name: X-Merchant-Id
      example: '0123456789101'
      description: |
        Thirteen character identification code. 

        Note: This code is provided by Moneris and is required to identify the Merchant executing the transaction."
      required: true
      schema:
        $ref: '#/components/schemas/merchantId'
    pageBeforeCursor:
      in: query
      name: cursor
      description: Pagination cursor to return items located after it.
      required: false
      example: d41d8cd98f00b204e9800998ecf8427e
      schema:
        type: string
        example: d41d8cd98f00b204e9800998ecf8427e
    pageLimit:
      in: query
      name: limit
      description: Maximum number of items to return in the response.
      example: 10
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 20
        example: 10
    createdFrom:
      name: created_from
      in: query
      description: Returns items created after the specified date, defaults to the current date starting from 12 AM.
      required: false
      example: '2024-05-16T04:00:00.000Z'
      schema:
        $ref: '#/components/schemas/dateTime'
    createdTo:
      name: created_to
      in: query
      description: |
        Returns items created before the specified date, up to one day earlier. 

        Defaults to current date and time, must be no more than 1 day later than `created_from` date. 
      required: false
      example: '2024-05-16T04:00:00.000Z'
      schema:
        $ref: '#/components/schemas/dateTime'
    paymentId:
      in: path
      name: payment-id
      description: The unique identifier of the payment
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    paymentMethodId:
      name: payment-method-id
      in: path
      description: Payment Method ID
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    refundId:
      in: path
      name: refund-id
      description: The unique identifier of the refund
      required: true
      schema:
        $ref: '#/components/schemas/refundId'
    validationId:
      in: path
      name: validation-id
      description: The unique identifier of the Validation
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    subscriptionId:
      in: path
      name: subscription-id
      description: The unique identifier of the subscription
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    customerId:
      in: path
      name: customer-id
      description: The unique identifier of the customer
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    authenticationId:
      in: path
      name: authentication-id
      description: The unique identifier of the authentication
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    kountInquiryId:
      in: path
      name: kount-inquiry-id
      description: The unique identifier of the Kount Transaction.
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
    prm-merchants_merchantId:
      in: path
      name: merchant-id
      example: '0123456789101'
      required: true
      description: |
        Thirteen character identification code. 
        Note: This code is provided by Moneris and is required to identify the Merchant executing the transaction."
      schema:
        $ref: '#/components/schemas/merchantId'
    orderIdentifiers:
      name: merchant_order_id
      in: query
      style: form
      explode: true
      example:
        - 1
        - 6
      schema:
        type: array
        items:
          type: integer
          format: int64
    merchantOrderId:
      in: path
      name: merchant-order-id
      description: The unique identifier of the merchant
      required: true
      schema:
        $ref: '#/components/schemas/MerchantOrderId'
    acceptLanguage:
      in: header
      name: Accept-Language
      description: |
        This value indicates the natural language and locale that the client prefers
      required: true
      schema:
        type: string
  headers:
    apiVersion:
      description: The endpoint's API Version.
      example: 2024-03-28-preview
      schema:
        type: string
    correlationId:
      example: 06f1e47b-a1b5-4902-be9c-bccc506127c4
      description: |
        Correlates a series of requests within the same flow. 

        Note: This ID is generated by Moneris with every request or response, if it doesn't exist, and the Merchant is recommended to echo back the value."  
      schema:
        type: string
        example: 06f1e47b-a1b5-4902-be9c-bccc506127c4
    sunset:
      example: '2025-07-30T06:43:40.252Z'
      description: |
        Optional.

        Indicates that the resource URI will be decommissioned, and put out of service at the specified point in the future. 
        More details are available at [RFC 8594](https://www.rfc-editor.org/rfc/rfc8594.html)
      schema:
        type: string
        format: date-time
        example: '2025-07-30T06:43:40.252Z'
    rateLimitCount:
      description: The maximum number of requests that the client can make in this window.
      schema:
        type: integer
        format: int64
      example: 1000
    rateLimitRemaining:
      description: The number of requests allowed in the current window.
      schema:
        type: integer
        format: int64
      example: 0
    rateLimitReset:
      description: The relative time in seconds when the rate limit window will be reset.
      schema:
        type: integer
        format: int32
      example: 3600
    retryAfter:
      description: Indicates how long clients should wait before retrying.
      schema:
        type: integer
        format: int32
      example: 60
    location:
      description: Location url to retrieve the resource
      required: true
      example: /tpa/disputes/cases/121719004446/1/dispute-images-upload-status/IU1001J3ZNNEGFFQCTGTGGJ076JYQB?api_version=2023-08-10
      schema:
        type: string
        format: uri-reference
  responses:
    listPaymentsResponse:
      description: List of all payments
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/paymentList'
          example:
            data:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                orderId: 1q2w3e4r5t6t78
                invoiceNumber: 1a2s3d45v6
                transactionDateTime: '2019-07-30T06:43:40.252Z'
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                amount:
                  amount: 16000
                  currency: CAD
                authorizedAmount:
                  amount: 16000
                  currency: CAD
                capturableAmount:
                  amount: 0
                  currency: CAD
                amountDetails: null
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                paymentStatus: SUCCEEDED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '00'
                  responseCode: '000'
                  message: approved
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                verificationDetails:
                  addressVerificationServiceResultCode: FULL_MATCH
                  cardSecurityCodeResultCode: MATCH
                  threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
                credentialOnFileResponse: null
                refundDetails: null
                customData:
                  property1: string
                  property2: string
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAZ
                merchantId: '0123456789101'
                orderId: 1q2w3e4r5t6t78
                invoiceNumber: 1a2s3d45v6
                transactionDateTime: '2019-07-30T06:43:40.252Z'
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                amount:
                  amount: 16000
                  currency: CAD
                authorizedAmount:
                  amount: 16000
                  currency: CAD
                capturableAmount:
                  amount: 0
                  currency: CAD
                amountDetails: null
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                paymentStatus: CANCELED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '00'
                  responseCode: '000'
                  message: approved
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                verificationDetails:
                  addressVerificationServiceResultCode: FULL_MATCH
                  cardSecurityCodeResultCode: MATCH
                  threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
                credentialOnFileResponse: null
                refundDetails: null
                customData:
                  property1: string
                  property2: string
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAX
                merchantId: '0123456789101'
                orderId: 1q2w3e4r5t6t78
                invoiceNumber: 1a2s3d45v6
                transactionDateTime: '2019-07-30T06:43:40.252Z'
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                amount:
                  amount: 16000
                  currency: CAD
                authorizedAmount:
                  amount: 0
                  currency: CAD
                capturableAmount:
                  amount: 0
                  currency: CAD
                amountDetails: null
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                paymentStatus: DECLINED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '43'
                  responseCode: '421'
                  message: Stolen card, pick up.
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                verificationDetails:
                  addressVerificationServiceResultCode: FULL_MATCH
                  cardSecurityCodeResultCode: MATCH
                  threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
                credentialOnFileResponse: null
                refundDetails: null
                customData:
                  property1: string
                  property2: string
            self: /payments?cursor=d41d8cd98f00b&limit=50
            first: /payments?cursor=d41d8cd98f00b&limit=50
            last: /payments?cursor=d41d8cd98f00b&limit=50
            next: null
            previous: null
    invalidListbadRequest:
      description: Bad Request.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            idempotency_error:
              $ref: '#/components/examples/InvalidListRequestErrorResponse'
    unauthorized:
      description: Not authorized. The user does not have a valid API Key or Access Token.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
        WWW-Authenticate:
          schema:
            type: string
            example: Bearer, error="invalid_token"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://developer.moneris.com/en/More/Testing/Response%20Codes
            title: UNAUTHORIZED_REQUEST
            status: 401
            detail: null
            instance: null
            category: UNAUTHORIZED_ERROR
            errors: []
    forbidden:
      description: Forbidden. The user does not have permission to access the requested resource.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
        WWW-Authenticate:
          schema:
            type: string
            example: Bearer, error="insufficient_scope"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://developer.moneris.com/en/More/Testing/Response%20Codes
            title: FORBIDDEN_REQUEST
            status: 403
            detail: null
            instance: null
            category: UNAUTHORIZED_ERROR
            errors: []
    tooManyRequests:
      description: Too Many Requests
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/rateLimitReset'
        Retry-After:
          $ref: '#/components/headers/rateLimitReset'
    internalServer:
      description: Unexpected error.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://api-developer.moneris.com/responsehandling/
            title: INTERNAL_SERVER_ERROR
            status: 500
            detail: null
            instance: null
            category: INTERNAL_SERVER_ERROR
            errors: []
    serviceUnavailable:
      description: Service Temporarily Unavailable
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        Retry-After:
          $ref: '#/components/headers/retryAfter'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://api-developer.moneris.com/responsehandling/
            title: SERVICE_UNAVAILABLE
            status: 503
            detail: null
            instance: null
            category: INTERNAL_SERVER_ERROR
            errors: []
    createPaymentSuccessResponse:
      description: Payment operation created successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment'
          examples:
            PurchaseCompleted:
              $ref: '#/components/examples/PurchaseCompletedResponse'
            PreauthorizationCompletedResponse:
              $ref: '#/components/examples/PreauthorizationCompletedResponse'
    createPaymentBadRequestResponse:
      description: Failed Payment operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            invalid_request:
              $ref: '#/components/examples/InvalidRequestErrorResponse'
    conflict:
      description: Request could not be completed due to a conflict with resource state or existing idempotency key.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            idempotency_error:
              $ref: '#/components/examples/IdempotencyRequestErrorResponse'
    createPaymentUnprocessableContentResponse:
      description: Failed Payment operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            declined:
              $ref: '#/components/examples/DeclineErrorResponse'
    retrievePaymentSuccessResponse:
      description: The payment corresponding to the provided `payment-id`
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment'
          examples:
            succeeded:
              $ref: '#/components/examples/PurchaseCompletedResponse'
            authorized:
              $ref: '#/components/examples/PreauthorizationCompletedResponse'
            declined:
              $ref: '#/components/examples/PurchaseDeclinedResponse'
            declined_retry:
              $ref: '#/components/examples/PurchaseDeclinedRetryResponse'
            canceled:
              $ref: '#/components/examples/PurchaseCanceledResponse'
    notFound:
      description: Not Found.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://developer.moneris.com/en/More/Testing/Response%20Codes
            title: NOT_FOUND
            status: 404
            detail: null
            instance: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
            category: INVALID_REQUEST_ERROR
            errors: []
    cancelPaymentSuccessResponse:
      description: Payment canceled successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment'
          example:
            paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            transactionDateTime: '2019-07-30T06:43:40.252Z'
            createdAt: '2019-07-30T06:43:40.252Z'
            modifiedAt: '2019-07-30T06:43:40.252Z'
            amount:
              amount: 16000
              currency: CAD
            authorizedAmount:
              amount: 16000
              currency: CAD
            capturableAmount:
              amount: 0
              currency: CAD
            amountDetails: null
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            paymentMethod:
              paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation: null
              contactDetails: null
              billingAddress: null
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: CARD
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2019-07-30T06:43:40.252Z'
              modifiedAt: null
              customData:
                property1: string
                property2: string
            paymentStatus: CANCELED
            transactionDetails:
              transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
              isoResponseCode: '00'
              responseCode: '000'
              message: approved
              ecommerceIndicator: AUTHENTICATED_ECOMMERCE
            verificationDetails:
              addressVerificationServiceResultCode: FULL_MATCH
              cardSecurityCodeResultCode: MATCH
              threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
            credentialOnFileResponse: null
            refundDetails: null
            customData:
              property1: string
              property2: string
    badRequest:
      description: Bad Request.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
    cancelPaymentUnprocessableContentResponse:
      description: Failed to cancel Payment operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            declined:
              $ref: '#/components/examples/DeclineErrorResponse'
            invalid_request:
              $ref: '#/components/examples/InvalidPurchaseErrorResponse'
    completePaymentSuccessResponse:
      description: Payment completed successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment'
          example:
            paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            transactionDateTime: '2019-07-30T06:43:40.252Z'
            createdAt: '2019-07-30T06:43:40.252Z'
            modifiedAt: '2019-07-30T06:43:40.252Z'
            amount:
              amount: 16000
              currency: CAD
            authorizedAmount:
              amount: 16000
              currency: CAD
            capturableAmount:
              amount: 0
              currency: CAD
            amountDetails: null
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            paymentMethod:
              paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation: null
              contactDetails: null
              billingAddress: null
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: CARD
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2019-07-30T06:43:40.252Z'
              modifiedAt: null
              customData:
                property1: string
                property2: string
            paymentStatus: SUCCEEDED
            transactionDetails:
              transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
              isoResponseCode: '00'
              responseCode: '000'
              message: approved
              ecommerceIndicator: AUTHENTICATED_ECOMMERCE
            verificationDetails:
              addressVerificationServiceResultCode: FULL_MATCH
              cardSecurityCodeResultCode: MATCH
              threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
            credentialOnFileResponse: null
            refundDetails: null
            customData: null
    completePaymentBadRequestResponse:
      description: Failed to complete purchase
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            declined:
              $ref: '#/components/examples/DeclineErrorResponse'
            invalid_request:
              $ref: '#/components/examples/InvalidPurchaseErrorResponse'
    completePaymentUnprocessableContentResponse:
      description: Failed Payment operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            declined:
              $ref: '#/components/examples/DeclineErrorResponse'
    listPaymentMethodsResponse:
      description: Paginated list of payment methods
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/paymentMethodList'
          example:
            data:
              - paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                cardholderInformation: null
                contactDetails: null
                billingAddress: null
                paymentMethodInformation:
                  paymentMethodType: CARD
                  paymentMethodSource: CARD
                  cardInformation:
                    bankIdentificationNumber: '123456'
                    lastFour: '1234'
                    expiryMonth: 1
                    expiryYear: 2028
                    cardBrand: MASTERCARD
                    cardType: CREDIT
                    cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                    issuer: RBC
                  paymentAccountReference: '11112222333344445555666677778'
                  storePaymentMethod: DO_NOT_STORE
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                customData:
                  property1: string
                  property2: string
              - paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                cardholderInformation:
                  cardholderName: John Doe
                  companyName: SP Ltd
                contactDetails:
                  phoneNumber: '+18663197450'
                  email: moneris@moneris.com
                billingAddress:
                  unitNumber: 123A
                  streetNumber: '3300'
                  streetName: Bloor Street West
                  city: Toronto
                  province: 'ON'
                  postalCode: M8X 2X2
                  country: CA
                paymentMethodInformation:
                  paymentMethodType: CARD
                  paymentMethodSource: TEMPORARY_TOKEN
                  cardInformation:
                    bankIdentificationNumber: '123456'
                    lastFour: '1234'
                    expiryMonth: 1
                    expiryYear: 2028
                    cardBrand: MASTERCARD
                    cardType: CREDIT
                    cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                    issuer: RBC
                  paymentAccountReference: '11112222333344445555666677778'
                  storePaymentMethod: DO_NOT_STORE
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                customData:
                  property1: string
                  property2: string
            self: /payment-methods?cursor=d41d8cd98f00b&limit=50
            first: /payment-methods?cursor=d41d8cd98f00b&limit=50
            last: /payment-methods?cursor=d41d8cd98f00b&limit=50
            next: null
            previous: null
    createPaymentMethodSuccessResponse:
      description: |
        Payment method created successfully.  Response content contains the created payment method.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/paymentMethod'
          example:
            paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            cardholderInformation:
              cardholderName: John Doe
              companyName: SP Ltd
            contactDetails:
              phoneNumber: '+18663197450'
              email: moneris@moneris.com
            billingAddress:
              unitNumber: 123A
              streetNumber: '3300'
              streetName: Bloor Street West
              city: Toronto
              province: 'ON'
              postalCode: M8X 2X2
              country: CA
            paymentMethodInformation:
              paymentMethodType: CARD
              paymentMethodSource: CARD
              cardInformation:
                bankIdentificationNumber: '123456'
                lastFour: '1234'
                expiryMonth: 1
                expiryYear: 2028
                cardBrand: MASTERCARD
                cardType: CREDIT
                cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                issuer: RBC
              paymentAccountReference: '11112222333344445555666677778'
              storePaymentMethod: DO_NOT_STORE
            createdAt: '2019-07-30T06:43:40.252Z'
            modifiedAt: '2019-07-30T06:43:40.252Z'
            customData:
              property1: string
              property2: string
    unprocessableContent:
      description: |
        The API cannot complete the requested action due to semantic or business validation errors. 
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
    retrievePaymentMethodSuccessResponse:
      description: Payment method found and returned in the response.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/paymentMethod'
          example:
            paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            cardholderInformation:
              cardholderName: John Doe
              companyName: SP Ltd
            contactDetails:
              phoneNumber: '+18663197450'
              email: moneris@moneris.com
            billingAddress:
              unitNumber: 123A
              streetNumber: '3300'
              streetName: Bloor Street West
              city: Toronto
              province: 'ON'
              postalCode: M8X 2X2
              country: CA
            paymentMethodInformation:
              paymentMethodType: CARD
              paymentMethodSource: CARD
              cardInformation:
                bankIdentificationNumber: '123456'
                lastFour: '1234'
                expiryMonth: 1
                expiryYear: 2028
                cardBrand: MASTERCARD
                cardType: CREDIT
                cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                issuer: RBC
              paymentAccountReference: '11112222333344445555666677778'
              storePaymentMethod: DO_NOT_STORE
            createdAt: '2019-07-30T06:43:40.252Z'
            modifiedAt: '2019-07-30T06:43:40.252Z'
            customData:
              property1: string
              property2: string
    paymentMethodNotFoundResponse:
      description: Payment method not found.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://developer.moneris.com/en/More/Testing/Response%20Codes
            title: NOT_FOUND
            status: 404
            detail: null
            instance: /payment-methods/pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
            category: INVALID_REQUEST_ERROR
            errors: []
    paymentMethodUpdateSuccessResponse:
      description: Payment Method Updated Successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/paymentMethod'
          example:
            paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            cardholderInformation:
              cardholderName: John Doe
              companyName: SP Ltd
            contactDetails:
              phoneNumber: '+18663197450'
              email: moneris@moneris.com
            billingAddress:
              unitNumber: 123A
              streetNumber: '3300'
              streetName: Bloor Street West
              city: Toronto
              province: 'ON'
              postalCode: M8X 2X2
              country: CA
            paymentMethodInformation:
              paymentMethodType: CARD
              paymentMethodSource: CARD
              cardInformation:
                bankIdentificationNumber: '123456'
                lastFour: '1234'
                expiryMonth: 1
                expiryYear: 2028
                cardBrand: MASTERCARD
                cardType: CREDIT
                cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                issuer: RBC
              paymentAccountReference: '11112222333344445555666677778'
              storePaymentMethod: DO_NOT_STORE
            createdAt: '2019-07-30T06:43:40.252Z'
            modifiedAt: '2019-07-30T06:43:40.252Z'
            customData:
              property1: string
              property2: string
    concurrencyConflict:
      description: Request could not be completed due to a concurrent access issue.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            concurrency_error:
              $ref: '#/components/examples/concurrentRequestErrorResponse'
    paymentMethodDeleteSuccessResponse:
      description: |
        Payment method deleted successfully. 
        Response content contains the payment method details.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
    listRefundsSuccessResponse:
      description: Refund list successfully returned.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/refundList'
          example:
            data:
              - refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
                payment:
                  paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                refundAmount:
                  amount: 1600
                  currency: CAD
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                refundStatus: SUCCEEDED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '00'
                  responseCode: '000'
                  message: SUCCESS
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                reason: Defective product
                credentialOnFileResponse: null
                customData:
                  property1: string
                  property2: string
              - refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
                payment:
                  paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                refundAmount:
                  amount: 1600
                  currency: CAD
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                refundStatus: DECLINED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '51'
                  responseCode: '054'
                  message: Expired Card
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                reason: Defective product
                credentialOnFileResponse: null
                customData:
                  property1: string
                  property2: string
            self: /refunds?cursor=d41d8cd98f00b&limit=50
            first: /refunds?cursor=d41d8cd98f00b&limit=50
            last: /refunds?cursor=d41d8cd98f00b&limit=50
            next: null
            previous: null
    createRefundSuccessResponse:
      description: Refund operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/refund'
          example:
            refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
            payment:
              paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            paymentMethod:
              paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation: null
              contactDetails: null
              billingAddress: null
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: CARD
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2019-07-30T06:43:40.252Z'
              modifiedAt: null
              customData:
                property1: string
                property2: string
            createdAt: '2019-07-30T06:43:40.252Z'
            modifiedAt: '2019-07-30T06:43:40.252Z'
            refundAmount:
              amount: 1600
              currency: CAD
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            refundStatus: SUCCEEDED
            transactionDetails:
              transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
              isoResponseCode: '00'
              responseCode: '000'
              message: SUCCESS
              ecommerceIndicator: AUTHENTICATED_ECOMMERCE
            reason: Defective product
            credentialOnFileResponse: null
            customData:
              property1: string
              property2: string
    createRefundBadRequestResponse:
      description: Invalid Refund request
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            invalid_request:
              $ref: '#/components/examples/InvalidRefundErrorResponse'
    createRefundDeclinedResponse:
      description: Refund operation declined
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            declined:
              $ref: '#/components/examples/exp-refundResponse_DeclineErrorResponse'
    retrieveRefundSuccessResponse:
      description: Successfully retrieved the refund corresponding to the provided `refund-id`
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/refund'
          examples:
            succeeded:
              $ref: '#/components/examples/SucceededRefundResponse'
            declined:
              $ref: '#/components/examples/DeclinedRefundResponse'
    refundNotFoundResponse:
      description: Refund not found.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            data:
              - refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
                payment:
                  paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                refundAmount:
                  amount: 1600
                  currency: CAD
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                refundStatus: SUCCEEDED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '00'
                  responseCode: '000'
                  message: SUCCESS
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                reason: Defective product
                credentialOnFileResponse: null
                customData:
                  property1: string
                  property2: string
              - refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
                payment:
                  paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation: null
                  contactDetails: null
                  billingAddress: null
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: null
                  customData:
                    property1: string
                    property2: string
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: '2019-07-30T06:43:40.252Z'
                refundAmount:
                  amount: 1600
                  currency: CAD
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                refundStatus: DECLINED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '51'
                  responseCode: '054'
                  message: Expired Card
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                reason: Defective product
                credentialOnFileResponse: null
                customData:
                  property1: string
                  property2: string
            self: /refunds?cursor=d41d8cd98f00b&limit=50
            first: /refunds?cursor=d41d8cd98f00b&limit=50
            last: /refunds?cursor=d41d8cd98f00b&limit=50
            next: null
            previous: null
    listValidationsSuccessResponse:
      description: List of Card Validations
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validationList'
          example:
            data:
              - validationId: vi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                merchantId: '0123456789101'
                orderId: 1q2w3e4r5t6t78
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: null
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation:
                    cardholderName: John Doe
                    companyName: SP Ltd
                  contactDetails:
                    phoneNumber: '+18663197450'
                    email: moneris@moneris.com
                  billingAddress:
                    unitNumber: 123A
                    streetNumber: '3300'
                    streetName: Bloor Street West
                    city: Toronto
                    province: 'ON'
                    postalCode: M8X 2X2
                    country: CA
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: '2019-07-30T06:43:40.252Z'
                  customData:
                    property1: string
                    property2: string
                validationStatus: SUCCEEDED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '00'
                  responseCode: '000'
                  message: approved
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                verificationDetails:
                  addressVerificationServiceResultCode: FULL_MATCH
                  cardSecurityCodeResultCode: MATCH
                credentialOnFileResponse: null
                customData:
                  property1: string
                  property2: string
              - validationId: vi0105ARZ3NDEKTSV4RRFFQ69G5FAX
                merchantId: '0123456789101'
                orderId: 1q2w3e4r5t6t78
                createdAt: '2019-07-30T06:43:40.252Z'
                modifiedAt: null
                customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
                paymentMethod:
                  paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
                  merchantId: '0123456789101'
                  cardholderInformation:
                    cardholderName: John Doe
                    companyName: SP Ltd
                  contactDetails:
                    phoneNumber: '+18663197450'
                    email: moneris@moneris.com
                  billingAddress:
                    unitNumber: 123A
                    streetNumber: '3300'
                    streetName: Bloor Street West
                    city: Toronto
                    province: 'ON'
                    postalCode: M8X 2X2
                    country: CA
                  paymentMethodInformation:
                    paymentMethodType: CARD
                    paymentMethodSource: CARD
                    cardInformation:
                      bankIdentificationNumber: '123456'
                      lastFour: '1234'
                      expiryMonth: 1
                      expiryYear: 2028
                      cardBrand: MASTERCARD
                      cardType: CREDIT
                      cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                      issuer: RBC
                    paymentAccountReference: '11112222333344445555666677778'
                    storePaymentMethod: DO_NOT_STORE
                  createdAt: '2019-07-30T06:43:40.252Z'
                  modifiedAt: '2019-07-30T06:43:40.252Z'
                  customData:
                    property1: string
                    property2: string
                validationStatus: DECLINED
                transactionDetails:
                  transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
                  isoResponseCode: '43'
                  responseCode: '421'
                  message: Stolen card, pick up.
                  ecommerceIndicator: AUTHENTICATED_ECOMMERCE
                verificationDetails:
                  addressVerificationServiceResultCode: FULL_MATCH
                  cardSecurityCodeResultCode: MATCH
                credentialOnFileResponse: null
                customData:
                  property1: string
                  property2: string
            self: /validations?cursor=d41d8cd98f00b&limit=50
            first: /validations?cursor=d41d8cd98f00b&limit=50
            last: /validations?cursor=d41d8cd98f00b&limit=50
            next: null
            previous: null
    retrieveValidationSuccessResponse:
      description: Card Validation retrieved successfully
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation'
          examples:
            succeeded:
              $ref: '#/components/examples/ValidationSucceededResponse'
            declined:
              $ref: '#/components/examples/ValidationDeclinedRetryResponse'
            declined_retry:
              $ref: '#/components/examples/ValidationDeclinedResponse'
    validationNotFoundResponse:
      description: Card validation not found
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://developer.moneris.com/en/More/Testing/Response%20Codes
            title: NOT_FOUND
            status: 404
            detail: null
            instance: /validations/vi0105ARZ3NDEKTSV4RRFFQ69G5FAV
            category: INVALID_REQUEST_ERROR
            errors: []
    listSubscriptionsResponse:
      description: Paginated list of subscriptions.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscriptionList'
    createSubscriptionSuccessResponse:
      description: Subscription created successfully
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 2
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: '2025-02-14'
              billingEndDate: '2025-02-28'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: ACTIVE
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    retrieveSubscriptionSuccessResponse:
      description: Subscription successfully found and returned in the response.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 2
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: '2025-02-14'
              billingEndDate: '2025-02-28'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: ACTIVE
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    updateSubscriptionSuccessResponse:
      description: Subscription billing details successfully updated.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 2
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: '2025-02-14'
              billingEndDate: '2025-02-28'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: ACTIVE
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    resumeSubscriptionSuccessResponse:
      description: Subscription resumed successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 2
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: '2025-02-14'
              billingEndDate: '2025-02-28'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: ACTIVE
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    pauseSubscriptionSuccessResponse:
      description: Subscription paused successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 2
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: null
              billingEndDate: '2025-02-28'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: PAUSED
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    cancelSubscriptionSuccessResponse:
      description: Subscription canceled successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 2
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: null
              billingEndDate: '2025-02-28'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: CANCELED
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    extendSubscriptionSuccessResponse:
      description: Subscription extended successfully
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          example:
            subscriptionId: rp0105ARZ3NDEKTSV4RRFFQ69G5FAV
            merchantId: '0123456789101'
            orderId: 1q2w3e4r5t6t78
            invoiceNumber: 1a2s3d45v6
            customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            createdAt: '2023-02-25T06:43:40.252Z'
            modifiedAt: '2023-02-26T06:43:40.252Z'
            billingInformation:
              billingIntervalUnit: WEEK
              billingIntervalFrequency: 2
              billingIntervalCount: 14
              billingAmount:
                amount: 2500
                currency: CAD
              billingStartDate: '2025-02-01'
              nextBillingDate: '2025-02-14'
              billingEndDate: '2025-08-16'
            callbackUrl: https://myserver.com/send/callback/here
            paymentMethod:
              paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
              merchantId: '0123456789101'
              cardholderInformation:
                cardholderName: John Doe
                companyName: SP Ltd
              contactDetails:
                phoneNumber: '+18663197450'
                email: moneris@moneris.com
              billingAddress:
                unitNumber: 123A
                streetNumber: '3300'
                streetName: Bloor Street West
                city: Toronto
                province: 'ON'
                postalCode: M8X 2X2
                country: CA
              paymentMethodInformation:
                paymentMethodType: CARD
                paymentMethodSource: TEMPORARY_TOKEN
                cardInformation:
                  bankIdentificationNumber: '123456'
                  lastFour: '1234'
                  expiryMonth: 1
                  expiryYear: 2028
                  cardBrand: MASTERCARD
                  cardType: CREDIT
                  cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
                  issuer: RBC
                paymentAccountReference: '11112222333344445555666677778'
                storePaymentMethod: DO_NOT_STORE
              createdAt: '2023-02-25T06:43:40.252Z'
              modifiedAt: '2023-02-26T06:43:40.252Z'
              customData:
                property1: string
                property2: string
            subscriptionStatus: ACTIVE
            oneTimeAmount:
              amount: 16000
              currency: CAD
            credentialOnFileResponse:
              originalAmount:
                amount: 15000
                currency: CAD
              issuerId: A
            payments:
              - paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
                href: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
    listCustomersSuccessResponse:
      description: List of all customers
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/customerList'
    createCustomerSuccessResponse:
      description: Customer operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/customer'
    retrieveCustomerSuccessResponse:
      description: The customer corresponding to the provided `customerId`
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/customer'
    customerNotFoundResponse:
      description: Customer not found
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: https://developer.moneris.com/en/More/Testing/Response%20Codes
            title: NOT_FOUND
            status: 404
            detail: null
            instance: /customers/ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
            category: INVALID_REQUEST_ERROR
            errors: []
    customerUpdateSuccessResponse:
      description: Customer updated successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/customer'
    customerDeleteSuccessResponse:
      description: Customer deleted successfully.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
    createThreeDSecureAuthenticationSuccessResponse:
      description: 3DS Secure authentication was successfully created & executed.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threeDSecureAuthentication'
    createThreeDSecureAuthenticationChallengeResponse:
      description: MPI Authentication operation resulted in a challenge.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threeDSecureAuthentication'
    retrieveThreeDSecureAuthenticationSuccessResponse:
      description: The authentication corresponding to the provided `authentication-id`
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threeDSecureAuthentication'
    threeDSecureAuthenticationLookupSuccessResponse:
      description: MPI Authentication operation was successfully authenticated.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/threeDSecureAuthentication'
    createThreeDSecureCardLookupSuccessResponse:
      description: 3D-Secure Card Lookup created successfully
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cardLookup'
    listKountInquiriesSuccessResponse:
      description: Kount Inquiry operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kountInquiryList'
    createKountInquirySuccessResponse:
      description: Kount Inquiry was successfully approved.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kountInquiry'
    createKountInquiryAcceptedResponse:
      description: Kount Inquiry accepted and is under review.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kountInquiry'
    retrieveKountInquiryResponse:
      description: Retrieve Kount Inquiry response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kountInquiry'
    assertKountInquirySuccessResponse:
      description: Kount Assert operation result response
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kountInquiry'
    assertKountInquiryAcceptedResponse:
      description: Kount Inquiry updated and is under review.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kountInquiry'
    installmentLookupResponse:
      description: List of eligible plans.
      headers:
        Api-Version:
          $ref: '#/components/headers/apiVersion'
        X-Correlation-Id:
          $ref: '#/components/headers/correlationId'
        Sunset:
          $ref: '#/components/headers/sunset'
        X-RateLimit-Limit:
          $ref: '#/components/headers/rateLimitCount'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/rateLimitRemaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/installmentEligibilityResponse'
  examples:
    InvalidListRequestErrorResponse:
      summary: Invalid query parameter
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: INVALID_QUERY_PARAMETER
        status: 400
        detail: null
        instance: null
        category: INVALID_REQUEST_ERROR
        errors:
          - parameterName: created_from
            parameterValue: 2019/07/30
            reasonCode: INVALID_FORMAT
    regularPurchaseWithPaymentMethodId:
      summary: Regular Purchase With Payment Method Id
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          storePaymentMethod: DO_NOT_STORE
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithCardPaymentMethod:
      summary: Regular Purchase With Payment Method Details
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: CARD
          card:
            cardNumber: '4242424242424242'
            expiryMonth: 1
            expiryYear: 2028
            cardSecurityCode: '123'
          storePaymentMethod: DO_NOT_STORE
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithTemporaryPaymentMethod:
      summary: Regular Purchase With Temporary Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: TEMPORARY_TOKEN
          temporaryToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithPermanentPaymentMethod:
      summary: Regular Purchase With Permanent Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: PERMANENT_TOKEN
          permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
          credentialOnFileInformation:
            paymentIndicator: UNSCHEDULED_CREDENTIAL_ON_FILE
            paymentInformation: FIRST
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithApplePayEncryptedPaymentMethod:
      summary: Regular Purchase With Apple Pay Encrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: APPLE_PAY_ENCRYPTED
          displayName: MasterCard 4079
          cardBrand: MASTERCARD
          applePayVersion: EC_V1
          data: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnpkV0lpT2lJeE1qTTBOVFkzT0Rrd0lpd2libUZ0WlNJNklrcHZh
          signature: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          publicKeyHash: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          ephemeralPublicKey: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnpkV0lpT2lJeE1qTTBOVFkzT0Rrd0lpd2libUZ0WlNJNklrcHZh
          applePayTransactionId: 22iWw1ySnzwiav6ToJ7KOhkY49
          walletIndicator: IN_BROWSER
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithApplePayDecryptedPaymentMethod:
      summary: Regular Purchase With Apple Pay Decrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: APPLE_PAY_DECRYPTED
          applicationPrimaryAccountNumber: '4242424242424242'
          expiryMonth: 1
          expiryYear: 2028
          deviceManufacturerIdentifier: r7tBjIbr4eaTCgs8bkU0w7hB7s
          dataType: THREE_D_SECURE
          cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          walletEcommerceIndicator: '07'
          cardBrand: VISA
          walletIndicator: IN_APPLICATION
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithGooglePayEncryptedPaymentMethod:
      summary: Regular Purchase With Google Pay Encrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: GOOGLE_PAY_ENCRYPTED
          cardBrand: MASTERCARD
          googlePayProtocolVersion: EC_V1
          signedMessage: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          signature: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          walletIndicator: IN_BROWSER
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    regularPurchaseWithGooglePayDecryptedPaymentMethod:
      summary: Regular Purchase With Google Pay Decrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: GOOGLE_PAY_DECRYPTED
          cardBrand: VISA
          cardDetails:
            personalAccountNumber: '4242424242424242'
            expiryMonth: 1
            expiryYear: 2028
            authenticationMethod: CRYPTOGRAM_3DS
            cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
            walletEcommerceIndicator: '07'
          walletIndicator: IN_BROWSER
          walletSource: CARD
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    preAuthorizationWithPaymentMethodId:
      summary: Pre-Authorization With Payment Method Id
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: GOOGLE_PAY_DECRYPTED
          cardBrand: VISA
          cardDetails:
            personalAccountNumber: '4242424242424242'
            expiryMonth: 1
            expiryYear: 2028
            authenticationMethod: CRYPTOGRAM_3DS
            cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
            walletEcommerceIndicator: '07'
          walletIndicator: IN_BROWSER
          walletSource: CARD
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: true
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    preAuthorizationWithCardPaymentMethod:
      summary: Pre-Authorization With Card Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: PERMANENT_TOKEN
          permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
          credentialOnFileInformation:
            paymentIndicator: UNSCHEDULED_CREDENTIAL_ON_FILE
            paymentInformation: FIRST
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: false
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    preAuthorizationWithTemporaryToken:
      summary: Pre-Authorization With Temporary Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: TEMPORARY_TOKEN
          temporaryToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: false
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    preAuthorizationWithPermanentToken:
      summary: Pre-Authorization With Permanent Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        amount:
          amount: 16000
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: PERMANENT_TOKEN
          permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
          credentialOnFileInformation:
            paymentIndicator: UNSCHEDULED_CREDENTIAL_ON_FILE
            paymentInformation: FIRST
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        automaticCapture: false
        dynamicDescriptor: moneris
        ipv4: 192.0.2.146
        ipv6: 2345:0425:2CA1:0000:0000:0567:5673:23b5
    PurchaseCompletedResponse:
      summary: Successful Purchase
      value:
        paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        transactionDateTime: '2019-07-30T06:43:40.252Z'
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        amount:
          amount: 16000
          currency: CAD
        authorizedAmount:
          amount: 16000
          currency: CAD
        capturableAmount:
          amount: 0
          currency: CAD
        amountDetails: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        paymentStatus: SUCCEEDED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '00'
          responseCode: '000'
          message: approved
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
          threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
        credentialOnFileResponse: null
        refundDetails: null
        customData: null
    PreauthorizationCompletedResponse:
      summary: Successful Pre-Authorization
      value:
        paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        transactionDateTime: '2019-07-30T06:43:40.252Z'
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        amount:
          amount: 16000
          currency: CAD
        authorizedAmount:
          amount: 16000
          currency: CAD
        capturableAmount:
          amount: 16000
          currency: CAD
        amountDetails: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        paymentStatus: AUTHORIZED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '27'
          responseCode: '000'
          message: approved
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
          threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
        credentialOnFileResponse: null
        refundDetails: null
        customData:
          property1: string
          property2: string
    InvalidRequestErrorResponse:
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: INVALID_ADDRESS
        status: 400
        detail: null
        instance: null
        category: INVALID_REQUEST_ERROR
        errors:
          - reasonCode: INVALID_FORMAT
            parameterName: address.postalCode
            parameterValue: MAP3J8
    IdempotencyRequestErrorResponse:
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: IDEMPOTENCY_KEY_ALREADY_EXISTS
        status: 409
        detail: null
        instance: null
        category: IDEMPOTENCY_ERROR
        errors: []
    DeclineErrorResponse:
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: EXCESS PIN TRIES
        status: 400
        detail: 052-38 - PIN retries exceeded
        instance: /payments/20c3ee41-2560-4645-b84f-631fb08819de
        category: DECLINED_ERROR
        errors: []
    PurchaseDeclinedResponse:
      summary: Purchase Declined
      value:
        paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        transactionDateTime: '2019-07-30T06:43:40.252Z'
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        amount:
          amount: 16000
          currency: CAD
        authorizedAmount:
          amount: 0
          currency: CAD
        capturableAmount:
          amount: 0
          currency: CAD
        amountDetails: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        paymentStatus: DECLINED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '43'
          responseCode: '421'
          message: Stolen card, pick up.
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
          threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
        credentialOnFileResponse: null
        refundDetails: null
        customData:
          property1: string
          property2: string
    PurchaseDeclinedRetryResponse:
      summary: Purchase Declined with Retry
      value:
        paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        transactionDateTime: '2019-07-30T06:43:40.252Z'
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        amount:
          amount: 16000
          currency: CAD
        authorizedAmount:
          amount: 0
          currency: CAD
        capturableAmount:
          amount: 0
          currency: CAD
        amountDetails: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        paymentStatus: DECLINED_RETRY
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '79'
          responseCode: '416'
          message: Life cycle declines.
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
          threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
        credentialOnFileResponse: null
        refundDetails: null
        customData:
          property1: string
          property2: string
    PurchaseCanceledResponse:
      summary: Purchase Canceled
      value:
        paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        transactionDateTime: '2019-07-30T06:43:40.252Z'
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        amount:
          amount: 16000
          currency: CAD
        authorizedAmount:
          amount: 16000
          currency: CAD
        capturableAmount:
          amount: 0
          currency: CAD
        amountDetails: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        paymentStatus: CANCELED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '00'
          responseCode: '000'
          message: approved
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
          threeDSecureAuthenticationValueResultCode: VISA_CAVV_PASSED_VALIDATION_ATTEMPTED
        credentialOnFileResponse: null
        refundDetails: null
        customData:
          property1: string
          property2: string
    InvalidPurchaseErrorResponse:
      summary: Purchase already completed
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: INVALID_STATE
        status: 400
        detail: Invalid purchase state
        instance: /payments/20c3ee41-2560-4645-b84f-631fb08819de
        category: INVALID_REQUEST_ERROR
    cardPaymentMethodRequest:
      summary: Card Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        cardholderInformation:
          cardholderName: John Doe
          companyName: SP Ltd
        contactDetails:
          phoneNumber: '+18663197450'
          email: moneris@moneris.com
        billingAddress:
          unitNumber: 123A
          streetNumber: '3300'
          streetName: Bloor Street West
          city: Toronto
          province: 'ON'
          postalCode: M8X 2X2
          country: CA
        paymentMethodSource: CARD
        card:
          cardNumber: '4242424242424242'
          expiryMonth: 1
          expiryYear: 2028
          cardSecurityCode: '123'
        customData:
          property1: string
          property2: string
    temporaryTokenPaymentMethodRequest:
      summary: Temporary Token Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentMethodSource: TEMPORARY_TOKEN
        temporaryToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        customData:
          property1: string
          property2: string
    permanentTokenPaymentMethodRequest:
      summary: Permanent Token Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentMethodSource: PERMANENT_TOKEN
        permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        customData:
          property1: string
          property2: string
    applePayEncryptedPaymentMethodRequest:
      summary: Apple Pay Encrypted Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentMethodSource: APPLE_PAY_ENCRYPTED
        displayName: MasterCard 4079
        cardBrand: MASTERCARD
        applePayVersion: EC_V1
        data: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnpkV0lpT2lJeE1qTTBOVFkzT0Rrd0lpd2libUZ0WlNJNklrcHZh
        signature: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
        publicKeyHash: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
        ephemeralPublicKey: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnpkV0lpT2lJeE1qTTBOVFkzT0Rrd0lpd2libUZ0WlNJNklrcHZh
        applePayTransactionId: 22iWw1ySnzwiav6ToJ7KOhkY49
        walletIndicator: IN_BROWSER
        customData:
          property1: string
          property2: string
    applePayDecryptedPaymentMethodRequest:
      summary: Apple Pay Decrypted Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentMethodSource: APPLE_PAY_DECRYPTED
        applicationPrimaryAccountNumber: '4242424242424242'
        expiryMonth: 1
        expiryYear: 2028
        deviceManufacturerIdentifier: r7tBjIbr4eaTCgs8bkU0w7hB7s
        dataType: THREE_D_SECURE
        cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
        walletEcommerceIndicator: '07'
        cardBrand: VISA
        walletIndicator: IN_APPLICATION
        customData:
          property1: string
          property2: string
    googlePayEncryptedPaymentMethodRequest:
      summary: Google Pay Encrypted Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentMethodSource: GOOGLE_PAY_ENCRYPTED
        cardBrand: MASTERCARD
        googlePayProtocolVersion: EC_V1
        signedMessage: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
        signature: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
        walletIndicator: IN_BROWSER
        customData:
          property1: string
          property2: string
    googlePayDecryptedPaymentMethodRequest:
      summary: Google Pay Decrypted Payment Method request
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentMethodSource: GOOGLE_PAY_DECRYPTED
        cardBrand: VISA
        cardDetails:
          personalAccountNumber: '4242424242424242'
          expiryMonth: 1
          expiryYear: 2028
          authenticationMethod: CRYPTOGRAM_3DS
          cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          walletEcommerceIndicator: '07'
        walletIndicator: IN_BROWSER
        walletSource: CARD
        customData:
          property1: string
          property2: string
    updateCardPaymentMethodRequest:
      summary: Card Payment Method request
      value:
        cardholderInformation:
          cardholderName: John Doe
          companyName: SP Ltd
        contactDetails:
          phoneNumber: '+18663197450'
          email: moneris@moneris.com
        billingAddress:
          unitNumber: 123A
          streetNumber: '3300'
          streetName: Bloor Street West
          city: Toronto
          province: 'ON'
          postalCode: M8X 2X2
          country: CA
        paymentMethodSource: CARD
        card:
          cardNumber: '4242424242424242'
          expiryMonth: 1
          expiryYear: 2028
          cardSecurityCode: '123'
        customData:
          property1: string
          property2: string
    updateTemporaryTokenPaymentMethodRequest:
      summary: Temporary Token Payment Method request
      value:
        paymentMethodSource: TEMPORARY_TOKEN
        temporaryToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        customData:
          property1: string
          property2: string
    updatePermanentTokenPaymentMethodRequest:
      summary: Permanent Token Payment Method request
      value:
        paymentMethodSource: PERMANENT_TOKEN
        permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        customData:
          property1: string
          property2: string
    concurrentRequestErrorResponse:
      summary: Concurrent Access Error
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: CONCURRENCY_ERROR
        status: 409
        detail: null
        instance: null
        category: API_ERROR
        errors: []
    matchingRefundRequest:
      summary: Matching Refund
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        refundAmount:
          amount: 1600
          currency: CAD
        dynamicDescriptor: moneris
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        reason: Defective product
        customData:
          property1: string
          property2: string
    InvalidRefundErrorResponse:
      summary: Invalid Matching Refund
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: INVALID_PAYMENT
        status: 400
        detail: Invalid payment Id or payment Id not found
        instance: /payments/pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        category: INVALID_REQUEST_ERROR
    exp-refundResponse_DeclineErrorResponse:
      summary: Refund declined
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: EXPIRED CARD
        status: 400
        detail: 051-54 - Expired Card
        instance: /refunds/20c3ee41-2560-4645-b84f-631fb08819de
        category: DECLINED_ERROR
        errors: []
    SucceededRefundResponse:
      summary: Refund succeeded
      value:
        refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
        payment:
          paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        refundAmount:
          amount: 1600
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        refundStatus: SUCCEEDED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '00'
          responseCode: '000'
          message: SUCCESS
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        reason: Defective product
        credentialOnFileResponse: null
        customData:
          property1: string
          property2: string
    DeclinedRefundResponse:
      summary: Refund succeeded
      value:
        refundId: ri0105ARZ3NDEKTSV4RRFFQ69G5FAV
        payment:
          paymentId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation: null
          contactDetails: null
          billingAddress: null
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: null
          customData:
            property1: string
            property2: string
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: '2019-07-30T06:43:40.252Z'
        refundAmount:
          amount: 1600
          currency: CAD
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        refundStatus: DECLINED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '51'
          responseCode: '054'
          message: Expired Card
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        reason: Defective product
        credentialOnFileResponse: null
        customData:
          property1: string
          property2: string
    validationWithPaymentMethodId:
      summary: Validation With Payment Method Id
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          storePaymentMethod: DO_NOT_STORE
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithCardPaymentMethod:
      summary: Validation With Payment Method Details
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: CARD
          card:
            cardNumber: '4242424242424242'
            expiryMonth: 1
            expiryYear: 2028
            cardSecurityCode: '123'
          storePaymentMethod: DO_NOT_STORE
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithTemporaryTokenPaymentMethod:
      summary: Validation With Temporary Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: TEMPORARY_TOKEN
          temporaryToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
          credentialOnFileInformation:
            paymentIndicator: CUSTOMER_INITIATED
            paymentInformation: FIRST
            issuerId: 123asd
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithPermanentTokenPaymentMethod:
      summary: Validation With Permanent Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: PERMANENT_TOKEN
          permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
          credentialOnFileInformation:
            paymentIndicator: UNSCHEDULED_CREDENTIAL_ON_FILE
            paymentInformation: FIRST
            issuerId: null
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithApplePayEncryptedPaymentMethod:
      summary: Validation With Apple Pay Encrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: APPLE_PAY_ENCRYPTED
          displayName: MasterCard 4079
          cardBrand: MASTERCARD
          applePayVersion: EC_V1
          data: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnpkV0lpT2lJeE1qTTBOVFkzT0Rrd0lpd2libUZ0WlNJNklrcHZh
          signature: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          publicKeyHash: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          ephemeralPublicKey: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnpkV0lpT2lJeE1qTTBOVFkzT0Rrd0lpd2libUZ0WlNJNklrcHZh
          applePayTransactionId: 22iWw1ySnzwiav6ToJ7KOhkY49
          walletIndicator: IN_BROWSER
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithApplePayDecryptedPaymentMethod:
      summary: Validation With Apple Pay Decrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: APPLE_PAY_DECRYPTED
          applicationPrimaryAccountNumber: '4242424242424242'
          expiryMonth: 1
          expiryYear: 2028
          deviceManufacturerIdentifier: r7tBjIbr4eaTCgs8bkU0w7hB7s
          dataType: THREE_D_SECURE
          cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          walletEcommerceIndicator: '07'
          cardBrand: VISA
          walletIndicator: IN_APPLICATION
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithGooglePayEncryptedPaymentMethod:
      summary: Validation With Google Pay Encrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: GOOGLE_PAY_ENCRYPTED
          cardBrand: MASTERCARD
          googlePayProtocolVersion: EC_V1
          signedMessage: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          signature: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
          walletIndicator: IN_BROWSER
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    validationWithGooglePayDecryptedPaymentMethod:
      summary: Validation With Google Pay Decrypted Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac1
        orderId: 1q2w3e4r5t6t78
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodSource: GOOGLE_PAY_DECRYPTED
          cardBrand: VISA
          cardDetails:
            personalAccountNumber: '4242424242424242'
            expiryMonth: 1
            expiryYear: 2028
            authenticationMethod: CRYPTOGRAM_3DS
            cryptogram: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ikpva
            walletEcommerceIndicator: '07'
          walletIndicator: IN_BROWSER
          walletSource: CARD
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
    exp-validationResponse_DeclineErrorResponse:
      value:
        type: https://developer.moneris.com/en/More/Testing/Response%20Codes
        title: EXCESS PIN TRIES
        status: 400
        detail: 052-38 - PIN retries exceeded
        instance: /validations/20c3ee41-2560-4645-b84f-631fb08819de
        category: DECLINED_ERROR
        errors: []
    ValidationSucceededResponse:
      summary: Successful Validation
      value:
        validationId: vi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation:
            cardholderName: John Doe
            companyName: SP Ltd
          contactDetails:
            phoneNumber: '+18663197450'
            email: moneris@moneris.com
          billingAddress:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: '2019-07-30T06:43:40.252Z'
          customData:
            property1: string
            property2: string
        validationStatus: SUCCEEDED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '00'
          responseCode: '000'
          message: approved
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
        credentialOnFileResponse: null
        customData:
          property1: string
          property2: string
    ValidationDeclinedRetryResponse:
      summary: Validation Declined with Retry
      value:
        validationId: vi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation:
            cardholderName: John Doe
            companyName: SP Ltd
          contactDetails:
            phoneNumber: '+18663197450'
            email: moneris@moneris.com
          billingAddress:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: '2019-07-30T06:43:40.252Z'
          customData:
            property1: string
            property2: string
        validationStatus: DECLINED_RETRY
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '79'
          responseCode: '416'
          message: Life cycle declines.
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
        credentialOnFileResponse: null
        customData:
          property1: string
          property2: string
    ValidationDeclinedResponse:
      summary: Validation Declined
      value:
        validationId: vi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        merchantId: '0123456789101'
        orderId: 1q2w3e4r5t6t78
        createdAt: '2019-07-30T06:43:40.252Z'
        modifiedAt: null
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        paymentMethod:
          paymentMethodId: pm0105ARZ3NDEKTSV4RRFFQ69G5FAV
          merchantId: '0123456789101'
          cardholderInformation:
            cardholderName: John Doe
            companyName: SP Ltd
          contactDetails:
            phoneNumber: '+18663197450'
            email: moneris@moneris.com
          billingAddress:
            unitNumber: 123A
            streetNumber: '3300'
            streetName: Bloor Street West
            city: Toronto
            province: 'ON'
            postalCode: M8X 2X2
            country: CA
          paymentMethodInformation:
            paymentMethodType: CARD
            paymentMethodSource: CARD
            cardInformation:
              bankIdentificationNumber: '123456'
              lastFour: '1234'
              expiryMonth: 1
              expiryYear: 2028
              cardBrand: MASTERCARD
              cardType: CREDIT
              cardFingerprint: 1Q2W3E4r5t6rfwewerwewrrw
              issuer: RBC
            paymentAccountReference: '11112222333344445555666677778'
            storePaymentMethod: DO_NOT_STORE
          createdAt: '2019-07-30T06:43:40.252Z'
          modifiedAt: '2019-07-30T06:43:40.252Z'
          customData:
            property1: string
            property2: string
        validationStatus: DECLINED
        transactionDetails:
          transactionUniqueId: 938c2cc0dcc05f2b68c4287040cfcf71
          isoResponseCode: '43'
          responseCode: '421'
          message: Stolen card, pick up.
          ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        verificationDetails:
          addressVerificationServiceResultCode: FULL_MATCH
          cardSecurityCodeResultCode: MATCH
        credentialOnFileResponse: null
        customData:
          property1: string
          property2: string
    subscriptionRequestWithImmediateInitialAmount:
      summary: Recurring Subscription With immediate Initial Amount
      value:
        idempotencyKey: 6q5w4e7r8t9y
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        subscriptionType: RECURRING
        billingDetails:
          billingIntervalUnit: MONTH
          billingIntervalFrequency: 1
          billingIntervalCount: 5
          billingStartDate: '2024-02-22'
          billingAmount:
            amount: 25000
            currency: CAD
        callbackUrl: https://myserver.com/send/callback/here
        oneTimeAmount:
          amount: 2000
          currency: CAD
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        threeDSecureData:
          threeDSecureAuthenticationId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
    dailyPaymentRequestToStartAtbillingStartDate:
      summary: Daily Recurring Subscription To Start at Start Date
      value:
        idempotencyKey: 6q5w4e7r8t9y
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        subscriptionType: RECURRING
        billingDetails:
          billingIntervalUnit: DAY
          billingIntervalFrequency: 1
          billingIntervalCount: 7
          billingStartDate: '2024-02-22'
          billingAmount:
            amount: 25000
            currency: CAD
        callbackUrl: https://myserver.com/send/callback/here
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        threeDSecureData:
          threeDSecureAuthenticationId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
    weeklyPaymentRequestToStartAtbillingStartDate:
      summary: Weekly Recurring Subscription To Start at Start Date
      value:
        idempotencyKey: 6q5w4e7r8t9y
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        subscriptionType: RECURRING
        billingDetails:
          billingIntervalUnit: WEEK
          billingIntervalFrequency: 1
          billingIntervalCount: 5
          billingStartDate: '2024-02-22'
          billingAmount:
            amount: 25000
            currency: CAD
        callbackUrl: https://myserver.com/send/callback/here
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        threeDSecureData:
          threeDSecureAuthenticationId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
    biweeklyPaymentRequestToStartAtbillingStartDate:
      summary: Bi-Weekly Recurring Subscription To Start at Start Date
      value:
        idempotencyKey: 6q5w4e7r8t9y
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        subscriptionType: RECURRING
        billingDetails:
          billingIntervalUnit: WEEK
          billingIntervalFrequency: 2
          billingIntervalCount: 5
          billingStartDate: '2024-02-22'
          billingAmount:
            amount: 25000
            currency: CAD
        callbackUrl: https://myserver.com/send/callback/here
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        threeDSecureData:
          threeDSecureAuthenticationId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
    monthlyPaymentRequestToStartAtbillingStartDate:
      summary: Monthly Recurring Subscription To Start at Start Date
      value:
        idempotencyKey: 6q5w4e7r8t9y
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        subscriptionType: RECURRING
        billingDetails:
          billingIntervalUnit: MONTH
          billingIntervalFrequency: 1
          billingIntervalCount: 5
          billingStartDate: '2024-02-22'
          billingAmount:
            amount: 25000
            currency: CAD
        callbackUrl: https://myserver.com/send/callback/here
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        threeDSecureData:
          threeDSecureAuthenticationId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
    endOfMonthPaymentRequestToStartAtbillingStartDate:
      summary: End Of Month Recurring Subscription To Start at Start Date
      value:
        idempotencyKey: 6q5w4e7r8t9y
        orderId: 1q2w3e4r5t6t78
        invoiceNumber: 1a2s3d45v6
        subscriptionType: RECURRING
        billingDetails:
          billingIntervalUnit: END_OF_MONTH
          billingIntervalFrequency: 1
          billingIntervalCount: 5
          billingStartDate: '2024-02-22'
          billingAmount:
            amount: 25000
            currency: CAD
        callbackUrl: https://myserver.com/send/callback/here
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ecommerceIndicator: AUTHENTICATED_ECOMMERCE
        customerId: ci0105ARZ3NDEKTSV4RRFFQ69G5FAV
        customData:
          property1: string
          property2: string
        dynamicDescriptor: moneris
        threeDSecureData:
          threeDSecureAuthenticationId: pi0105ARZ3NDEKTSV4RRFFQ69G5FAV
        ipv4: 104.75.173.179
        ipv6: 2600:1401:2::8a
    threeDSecureBrowserChannelWithPaymentMethodId:
      summary: 3D-Secure Browser channel, with Payment Method Id
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        amount:
          amount: 16000
          currency: CAD
        browserIpAddress: 104.75.173.179
        browserScreenHeight: 1080
        browserScreenWidth: 1920
        cardholderEmail: moneris@moneris.com
        cardholderName: John Doe
        cardholderPhoneNumber: '+18663197450'
        threeDSecureDeviceChannel: BROWSER
        threeDSecureMessageCategory: PAYMENT
        billingAddress:
          unitNumber: 123A
          streetNumber: '3300'
          streetName: Bloor
          city: Toronto
          province: 'ON'
          postalCode: M8X 2X2
          country: CA
        paymentMethod:
          paymentMethodSource: PAYMENT_METHOD_ID
          paymentMethodId: pm0001J7HZZHPB20VCHWN8PEEPXZYH
        threeDSecureRequestType: CARDHOLDER
        threeDSecureNotificationUrl: https%3A%2F%2Fputsreq.com%2FnMhp2fzHDgfzSs4GiNTD
        threeDSecureCompletionIndicator: SUCCESS
        threeDSecureChallengeWindowSize: FULL_SCREEN
        browserUserAgent: Mozilla/5.0 (Linux; {Android Version}; {Build Tag etc.})
        browserJavaEnabled: true
        browserJavascriptEnabled: true
        browserLanguage: en
    threeDSecureBrowserChannelWithCardPaymentMethod:
      summary: 3D-Secure Browser channel, with Card Payment Method
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        amount:
          amount: 16000
          currency: CAD
        browserIpAddress: 104.75.173.179
        browserScreenHeight: 1080
        browserScreenWidth: 1920
        cardholderEmail: moneris@moneris.com
        cardholderName: John Doe
        cardholderPhoneNumber: '+18663197450'
        threeDSecureDeviceChannel: BROWSER
        threeDSecureMessageCategory: PAYMENT
        billingAddress:
          unitNumber: 123A
          streetNumber: '3300'
          streetName: Bloor
          city: Toronto
          province: 'ON'
          postalCode: M8X 2X2
          country: CA
        paymentMethod:
          paymentMethodSource: CARD
          card:
            cardNumber: '4365729291041247'
            expiryMonth: 1
            expiryYear: 2028
            cardSecurityCode: '123'
        threeDSecureRequestType: CARDHOLDER
        threeDSecureNotificationUrl: https%3A%2F%2Fputsreq.com%2FnMhp2fzHDgfzSs4GiNTD
        threeDSecureCompletionIndicator: SUCCESS
        threeDSecureChallengeWindowSize: FULL_SCREEN
        browserUserAgent: Mozilla/5.0 (Linux; {Android Version}; {Build Tag etc.})
        browserJavaEnabled: true
        browserJavascriptEnabled: true
        browserLanguage: en
    threeDSecureBrowserChannelWithTemporaryToken:
      summary: 3D-Secure Browser channel, with Temporary Token
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        amount:
          amount: 16000
          currency: CAD
        browserIpAddress: 104.75.173.179
        browserScreenHeight: 1080
        browserScreenWidth: 1920
        cardholderEmail: moneris@moneris.com
        cardholderName: John Doe
        cardholderPhoneNumber: '+18663197450'
        threeDSecureDeviceChannel: BROWSER
        threeDSecureMessageCategory: PAYMENT
        billingAddress:
          unitNumber: 123A
          streetNumber: '3300'
          streetName: Bloor
          city: Toronto
          province: 'ON'
          postalCode: M8X 2X2
          country: CA
        paymentMethod:
          paymentMethodSource: TEMPORARY_TOKEN
          temporaryToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        threeDSecureRequestType: CARDHOLDER
        threeDSecureNotificationUrl: https%3A%2F%2Fputsreq.com%2FnMhp2fzHDgfzSs4GiNTD
        threeDSecureCompletionIndicator: SUCCESS
        threeDSecureChallengeWindowSize: FULL_SCREEN
        browserUserAgent: Mozilla/5.0 (Linux; {Android Version}; {Build Tag etc.})
        browserJavaEnabled: true
        browserJavascriptEnabled: true
        browserLanguage: en
    threeDSecureBrowserChannelWithPermanentToken:
      summary: 3D-Secure Browser channel, with Permanent Token
      value:
        idempotencyKey: 5d8f812e-9969-4885-85bb-d03948eccac2
        amount:
          amount: 16000
          currency: CAD
        browserIpAddress: 104.75.173.179
        browserScreenHeight: 1080
        browserScreenWidth: 1920
        cardholderEmail: moneris@moneris.com
        cardholderName: John Doe
        cardholderPhoneNumber: '+18663197450'
        threeDSecureDeviceChannel: BROWSER
        threeDSecureMessageCategory: PAYMENT
        billingAddress:
          unitNumber: 123A
          streetNumber: '3300'
          streetName: Bloor
          city: Toronto
          province: 'ON'
          postalCode: M8X 2X2
          country: CA
        paymentMethod:
          paymentMethodSource: PERMANENT_TOKEN
          permanentToken: ot-y2mxjFqmqDisQQGB6hQ8xwQ2
        threeDSecureRequestType: CARDHOLDER
        threeDSecureNotificationUrl: https%3A%2F%2Fputsreq.com%2FnMhp2fzHDgfzSs4GiNTD
        threeDSecureCompletionIndicator: SUCCESS
        threeDSecureChallengeWindowSize: FULL_SCREEN
        browserUserAgent: Mozilla/5.0 (Linux; {Android Version}; {Build Tag etc.})
        browserJavaEnabled: true
        browserJavascriptEnabled: true
        browserLanguage: en
    OrderPayload:
      summary: Order Payload
      value: |
        {
          "idempotencyKey": "b3e1f8c2-4d2a-4e6b-9c1a-2f3e4d5b6a7c",
          "representativeCode": "0A",
          "userDetails": {
            "userId": "001",
            "firstName": "test",
            "lastName": "test"
          },
          "marketSegment": "INTUIT",
          "applicablePromotions": [
            "1MONTHOFF",
            "PAYDPROPLUS"
          ],
          "feeDetails": {
            "pciSecurityFee": {
              "unitPrice": {
                "amount": 895,
                "currency": "CAD"
              }
            },
            "paperStatementFee": {
              "unitPrice": {
                "amount": 795,
                "currency": "CAD"
              }
            },
            "minimumMerchantDiscountRateFee": {
              "unitPrice": {
                "amount": 699,
                "currency": "CAD"
              }
            },
            "agedCloseBatchFee": {
              "unitPrice": {
                "amount": 250,
                "currency": "CAD"
              }
            },
            "handlingFee": {
              "unitPrice": {
                "amount": 500,
                "currency": "CAD"
              }
            },
            "mastercardComplianceFee": {
              "unitPrice": {
                "amount": 8000,
                "currency": "CAD"
              }
            },
            "dialCommunicationFee": {
              "unitPrice": {
                "amount": 8,
                "currency": "CAD"
              }
            },
            "chargeBackFee": {
              "unitPrice": {
                "amount": 2501,
                "currency": "CAD"
              }
            },
            "totalAdminFee": {
              "unitPrice": {
                "amount": 200,
                "currency": "CAD"
              }
            }
          },
          "supplies": [
            {
              "supplyName": "2-PLY Sales Draft Slips (25)",
              "unitPrice": {
                "amount": 2,
                "currency": "CAD"
              },
              "quantity": 1
            },
            {
              "supplyName": "Physical Distancing Arrow Decal",
              "unitPrice": {
                "amount": 6,
                "currency": "CAD"
              },
              "quantity": 3
            }
          ],
          "productDetails": {
            "isPointOfSaleSoftware": false,
            "counterTop": {
              "terminals": []
            },
            "wireless": {
              "terminals": [
                {
                  "carrier": "Telus",
                  "terminalName": "Moneris Go",
                  "unitPrice": {
                    "amount": 22,
                    "currency": "CAD"
                  },
                  "quantity": 4
                }
              ],
              "feeDetails": {
                "goSoftwareFee": {
                  "quantity": "1",
                  "unitPrice": {
                    "amount": 5.00,
                    "currency": "CAD"
                  }
                }
              }
            },
            "monerisGoPointOfSaleRetail": {
              "feeDetails": {
                "goRetailFee": {
                  "isApproved": true,
                  "unitPrice": {
                    "amount": 10.00,
                    "currency": "CAD"
                  }
                }
              }
            },
            "payDropPlus": {
              "feeDetails": {
                "subTotalFee": {
                  "unitPrice": {
                    "amount": 0.00,
                    "currency": "CAD"
                  },
                  "taxes": [
                    {
                      "taxName": "GOODS_SERVICES_TAX",
                      "taxAmount": {
                        "amount": 0,
                        "currency": "CAD"
                      }
                    },
                    {
                      "taxName": "PROVINCIAL_SALES_TAX",
                      "taxAmount": {
                        "amount": 0,
                        "currency": "CAD"
                      }
                    },
                    {
                      "taxName": "HARMONIZED_SALES_TAX",
                      "taxAmount": {
                        "amount": 0,
                        "currency": "CAD"
                      }
                    }
                  ]
                }
              }
            },
            "monerisGateway": {
              "feeDetails": {
                "mastercard3DSecureAuthenticationMerchantDiscountRateFee": {
                  "unitPrice": {
                    "amount": 10,
                    "currency": "CAD"
                  }
                },
                "mastercard3DSecureAuthenticationTransactionFee": {
                  "unitPrice": {
                    "amount": 11,
                    "currency": "CAD"
                  },
                  "isApproved": true
                },
                "visa3DSecureAuthenticationMerchantDiscountRateFee": {
                  "unitPrice": {
                    "amount": 13.00,
                    "currency": "CAD"
                  }
                },
                "visa3DSecureAuthenticationTransactionFee": {
                  "unitPrice": {
                    "amount": 25,
                    "currency": "CAD"
                  },
                  "isApproved": true
                }
              }
            }
          },
          "deliveryAddress": {
            "streetNumber": "64",
            "postalCode": "L1S2H6",
            "city": "Ajax",
            "province": "ON",
            "streetName": " Harwood Ave South",
            "country": "CA",
            "firstName": "KANGATHARAN",
            "lastName": "RASIAH"
          },
          "bankerInformation": {
            "bankerBranchIdentifier": "2679",
            "bankerPhoneNumber": "19024333434"
          },
          "cardPlanDetails": {
            "calculationMethod": "SIMP",
            "selectedPlans": [
              "MASTERCARD",
              "VISA"
            ],
            "amex": {
              "isCommunicationsOptOut": true
            },
            "mastercard": {
              "transactionPlans": [
                {
                  "merchantDiscountRate": "0.11100",
                  "minimumMerchantDiscountRate": "0.12100",
                  "maximumMerchantDiscountRate": "0.12100",
                  "transactionRate": "0.131000",
                  "minimumTransactionValue": {
                    "amount": 100,
                    "currency": "CAD"
                  },
                  "maximumTransactionValue": {
                    "amount": 200,
                    "currency": "CAD"
                  }
                }
              ],
              "assessmentPlans": [
                {
                  "merchantDiscountRate": "0.21000",
                  "transactionRate": "0.211000",
                  "feeTypeCode": "AMHM",
                  "feeProgramCode": "MZX",
                  "cardOriginCode": "ALL",
                  "captureMethodInternalCode": "ALL"
                },
                {
                  "merchantDiscountRate": "0.22000",
                  "transactionRate": "0.221000",
                  "feeTypeCode": "ASFD",
                  "feeProgramCode": "ALL",
                  "cardOriginCode": "ALL",
                  "captureMethodInternalCode": "ALL"
                },
                {
                  "merchantDiscountRate": "0.23000",
                  "transactionRate": "0.231000",
                  "feeTypeCode": "ASFP",
                  "feeProgramCode": "ALL",
                  "cardOriginCode": "FRGN",
                  "captureMethodInternalCode": "ALL"
                },
                {
                  "merchantDiscountRate": "0.24000",
                  "transactionRate": "0.241000",
                  "feeTypeCode": "ASFP",
                  "feeProgramCode": "MZX",
                  "cardOriginCode": "FRGN",
                  "captureMethodInternalCode": "ALL"
                },
                {
                  "merchantDiscountRate": "0.25000",
                  "transactionRate": "0.251000",
                  "feeTypeCode": "ASFP",
                  "feeProgramCode": "ALL",
                  "cardOriginCode": "IERR",
                  "captureMethodInternalCode": "ALL"
                },
                {
                  "merchantDiscountRate": "0.26000",
                  "transactionRate": "0.261000",
                  "feeTypeCode": "ASFP",
                  "feeProgramCode": "MZX",
                  "cardOriginCode": "IERR",
                  "captureMethodInternalCode": "ALL"
                }
              ],
              "serviceFeeDetails": {
                "maintenanceFee": {
                  "feeType": "maintenance",
                  "unitPrice": {
                    "amount": "301",
                    "currency": "USD"
                  }
                }
              }
            },
            "programs": [
              "MASTERCARD_PAY_PASS"
            ],
            "visa": {},
            "discover": {},
            "unionPay": {},
            "interac": {},
            "merchantDiscountRateType": "gross-gross",
            "currency": "CAD"
          },
          "isExpeditedOrder": true,
          "autoAdjudicationDecisionDetails": {
            "autoAdjudicationScore": "0",
            "autoDecisionDescription": "Manual Adjudication",
            "failedRules": [
              "Signing officer has no beacon score"
            ],
            "onBoardingLiteRules": [],
            "documentRequirements": {}
          },
          "orderCreatedBy": "jhundal@PERCOM",
          "isAutoAdjudicationRequired": true
        }
    OrderPayloadPartnerBank:
      value: |
        {
          "idempotencyKey": "b3e1f8c2-4d2a-4e6b-9c1a-2f3e4d5b6a7c",
          "deliveryAddress": {
            "streetNumber": "64",
            "postalCode": "L1S2H6",
            "city": "Ajax",
            "province": "ON",
            "streetName": "Harwood Ave South",
            "country": "CA",
            "firstName": "KANGATHARAN",
            "lastName": "RASIAH"
          },
          "bankerInformation": {
            "bankerBranchName": "2679",
            "bankerPhoneNumber": "19024333434"
          },
          "solutions": [
            {
              "solutionId": 1,
              "quantity": 1,
              "carrier": "TELUS"
            }
          ],
          "orderCreatedBy": "jhundal@PERCOM",
          "createdAt": "2024-03-21T10:00:00Z"
        }
    OrderDetails:
      summary: Order Details
      value: |
        {
          "merchantOrderId": 1471397,
          "merchantId": "0030211900586",
          "userId": "001",
          "representativeCode": "0A",
          "adjudicationRequired": true,
          "orderStatus": "SALES_APPROVAL",
          "orderType": "NET_NEW_MERCHANT",
          "orderOpenedAt": "2025-06-05T15:42:43.147-05:00",
          "orderChangedAt": "2025-06-05T16:44:47.767-05:00",
          "feeDetails": {
              "minimumMerchantDiscountRateFee": {
                  "unitPrice": {
                      "amount": 69900,
                      "currency": "CAD"
                  },
                  "taxes": []
              },
              "paperStatementFee": {
                  "unitPrice": {
                      "amount": 79500,
                      "currency": "CAD"
                  },
                  "taxes": []
              },
              "pciSecurityFee": {
                  "unitPrice": {
                      "amount": 89500,
                      "currency": "CAD"
                  },
                  "taxes": []
              },
              "totalAdminFee": {
                  "unitPrice": {
                      "amount": 20000,
                      "currency": "CAD"
                  },
                  "taxes": []
              },
              "agedCloseBatchFee": {
                  "unitPrice": {
                      "amount": 25000,
                      "currency": "CAD"
                  },
                  "taxes": []
              },
              "mastercardComplianceFee": {
                  "unitPrice": {
                      "amount": 800000,
                      "currency": "CAD"
                  },
                  "taxes": []
              },
              "dialCommunicationFee": {
                  "unitPrice": {
                      "amount": 800,
                      "currency": "CAD"
                  },
                  "taxes": []
              }
          },
          "promotionInformation": {
              "promotionCode": "1MONTHOFF",
              "promotionName": "1MONTHOFF",
              "promotionExpirationDate": "2024-06-27T00:00:00-05:00"
          },
          "supplies": [
              {
                  "supplyName": "2-PLY Sales Draft Slips (25)",
                  "unitPrice": {
                      "amount": 200,
                      "currency": "CAD"
                  },
                  "quantity": 1
              },
              {
                  "supplyName": "Physical Distancing Arrow Decal",
                  "unitPrice": {
                      "amount": 600,
                      "currency": "CAD"
                  },
                  "quantity": 3
              }
          ],
          "productDetails": {
              "wireless": {
                  "feeDetails": {
                      "goSoftwareFee": {
                          "feeType": "GoSoftwareFee",
                          "unitPrice": {
                              "amount": 500,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      }
                  }
              },
              "monerisGateway": {
                  "feeDetails": {
                      "monthlyFee": {
                          "feeType": "MonthlyFee",
                          "unitPrice": {
                              "amount": 0,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      },
                      "visa3DSecureAuthenticationTransactionFee": {
                          "feeType": "Visa3DSecureAuthTxn",
                          "unitPrice": {
                              "amount": 2500,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      },
                      "mastercard3DSecureAuthenticationTransactionFee": {
                          "feeType": "Mastercard3DSecureAuthTxn",
                          "unitPrice": {
                              "amount": 1100,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      },
                      "visa3DSecureAuthenticationMerchantDiscountRateFee": {
                          "feeType": "Visa3DSecureAuthMdr",
                          "unitPrice": {
                              "amount": 1300,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      },
                      "mastercard3DSecureAuthenticationMerchantDiscountRateFee": {
                          "feeType": "Mastercard3DSecureAuthMdr",
                          "unitPrice": {
                              "amount": 1000,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      }
                  }
              },
              "monerisGoPointOfSaleRetail": {
                  "feeDetails": {
                      "goRetailFee": {
                          "feeType": "GoRetailFee",
                          "unitPrice": {
                              "amount": 1000,
                              "currency": "CAD"
                          },
                          "waivePeriod": "null"
                      }
                  }
              }
          },
          "bankerInformation": {
              "bankerPhoneNumber": "19024333434",
              "bankerBranchIdentifier": "2679"
          },
          "cardPlanDetails": {
              "selectedPlans": [
                  "MASTERCARD",
                  "VISA"
              ],
              "mastercard": {
                  "transactionPlans": [
                      {
                          "merchantDiscountRate": 0.111,
                          "transactionRate": 0.131
                      },
                      {
                          "merchantDiscountRate": 0.111,
                          "transactionRate": 0.131
                      }
                  ],
                  "cardBrandPlans": [],
                  "assessmentPlans": [],
                  "serviceFeeDetails": {
                      "maintenanceFee": {
                          "feeType": "maintenance",
                          "unitPrice": {
                              "amount": 30100,
                              "currency": "CAD"
                          }
                      }
                  }
              },
              "visa": {
                  "transactionPlans": [
                      {
                          "merchantDiscountRate": 0.0,
                          "transactionRate": 0.0
                      }
                  ],
                  "cardBrandPlans": [],
                  "assessmentPlans": [],
                  "serviceFeeDetails": {
                      "maintenanceFee": {
                          "feeType": "maintenance",
                          "unitPrice": {
                              "amount": 30100,
                              "currency": "CAD"
                          }
                      }
                  }
              },
              "otherFinancialInstitutionCards": [],
              "programs": []
          },
          "pointOfSaleSolutionType": "MONERIS_POINT_OF_SALE",
          "isAcceptedByConduct": false,
          "contractSignatureRequired": false,
          "faxRequired": true,
          "additionalInformation": "",
          "businessEntityName": "Intuit",
          "referralInformation": {
              "description": "Other",
              "additionalInformation": "NOT USED"
          },
          "hostType": "ESSENTIS",
          "autoApprovalStatus": "MANUAL_ADJUDICATION",
          "hasImprinter": true,
          "isMarketSubSegmentationPreApprovalRequired": false,
          "optOutAmexCommunication": true,
          "multiCurrencyPricingPackageId": 0
        }
